{
  "header_types" : [
    {
      "name" : "scalars_0",
      "id" : 0,
      "fields" : [
        ["tmp", 1, false],
        ["tmp_0", 1, false],
        ["tmp_1", 32, false],
        ["tmp_2", 128, false],
        ["tmp_3", 128, false],
        ["tmp_4", 32, false],
        ["tmp_5", 32, false],
        ["host_ipv6_tmp_0", 128, false],
        ["do_l3_l2_0", 1, false],
        ["Int_source_res", 8, false],
        ["Flowlet_ip_src", 128, false],
        ["Flowlet_ip_dst", 128, false],
        ["Int_source_hasReturned", 1, false],
        ["Flowlet_hasReturned", 1, false],
        ["tmp_6", 32, false],
        ["tmp_7", 32, false],
        ["tmp_8", 32, false],
        ["tmp_9", 32, false],
        ["tmp_10", 32, false],
        ["tmp_11", 32, false],
        ["tmp_12", 32, false],
        ["tmp_13", 32, false],
        ["tmp_14", 32, false],
        ["tmp_15", 32, false],
        ["Int_sink_Int_report_seq_num_value", 32, false],
        ["Int_transit_hasReturned", 1, false],
        ["Int_sink_hasReturned", 1, false],
        ["userMetadata._int_metadata_source0", 1, false],
        ["userMetadata._int_metadata_sink1", 1, false],
        ["userMetadata._int_metadata_switch_id2", 32, false],
        ["userMetadata._int_metadata_insert_byte_cnt3", 16, false],
        ["userMetadata._int_metadata_int_hdr_word_len4", 8, false],
        ["userMetadata._int_metadata_remove_int5", 1, false],
        ["userMetadata._int_metadata_sink_reporting_port6", 16, false],
        ["userMetadata._int_metadata_ingress_tstamp7", 64, false],
        ["userMetadata._int_metadata_ingress_port8", 16, false],
        ["userMetadata._layer34_metadata_ip_src10", 32, false],
        ["userMetadata._layer34_metadata_ip_dst11", 32, false],
        ["userMetadata._layer34_metadata_ip_ver12", 8, false],
        ["userMetadata._layer34_metadata_l4_src13", 16, false],
        ["userMetadata._layer34_metadata_l4_dst14", 16, false],
        ["userMetadata._layer34_metadata_l4_proto15", 8, false],
        ["userMetadata._layer34_metadata_l3_mtu16", 16, false],
        ["userMetadata._layer34_metadata_dscp17", 6, false],
        ["userMetadata._ecmp_metadata_ecmp_hash18", 14, false],
        ["userMetadata._ecmp_metadata_ecmp_group_id19", 14, false],
        ["userMetadata._tcpLen20", 16, false],
        ["userMetadata._is_multicast21", 1, false],
        ["userMetadata._next_srv6_sid22", 128, false],
        ["userMetadata._ip_proto23", 8, false],
        ["userMetadata._icmp_type24", 8, false],
        ["userMetadata._flowlet_last_stamp25", 48, false],
        ["userMetadata._flowlet_time_diff26", 48, false],
        ["userMetadata._flowlet_register_index27", 13, false],
        ["userMetadata._flow_source28", 1, false],
        ["userMetadata._update_path29", 8, false],
        ["_padding_0", 5, false]
      ]
    },
    {
      "name" : "standard_metadata",
      "id" : 1,
      "fields" : [
        ["ingress_port", 9, false],
        ["egress_spec", 9, false],
        ["egress_port", 9, false],
        ["instance_type", 32, false],
        ["packet_length", 32, false],
        ["enq_timestamp", 32, false],
        ["enq_qdepth", 19, false],
        ["deq_timedelta", 32, false],
        ["deq_qdepth", 19, false],
        ["ingress_global_timestamp", 48, false],
        ["egress_global_timestamp", 48, false],
        ["mcast_grp", 16, false],
        ["egress_rid", 16, false],
        ["checksum_error", 1, false],
        ["parser_error", 32, false],
        ["priority", 3, false],
        ["_padding", 3, false]
      ]
    },
    {
      "name" : "cpu_out_header_t",
      "id" : 2,
      "fields" : [
        ["egress_port", 9, false],
        ["_pad", 7, false]
      ]
    },
    {
      "name" : "cpu_in_header_t",
      "id" : 3,
      "fields" : [
        ["ingress_port", 9, false],
        ["_pad", 7, false]
      ]
    },
    {
      "name" : "ethernet_t",
      "id" : 4,
      "fields" : [
        ["dstAddr", 48, false],
        ["srcAddr", 48, false],
        ["etherType", 16, false]
      ]
    },
    {
      "name" : "ipv4_t",
      "id" : 5,
      "fields" : [
        ["version", 4, false],
        ["ihl", 4, false],
        ["dscp", 6, false],
        ["ecn", 2, false],
        ["totalLen", 16, false],
        ["id", 16, false],
        ["flags", 3, false],
        ["fragOffset", 13, false],
        ["ttl", 8, false],
        ["protocol", 8, false],
        ["hdrChecksum", 16, false],
        ["srcAddr", 32, false],
        ["dstAddr", 32, false]
      ]
    },
    {
      "name" : "udp_t",
      "id" : 6,
      "fields" : [
        ["srcPort", 16, false],
        ["dstPort", 16, false],
        ["len", 16, false],
        ["csum", 16, false]
      ]
    },
    {
      "name" : "int_report_fixed_header_t",
      "id" : 7,
      "fields" : [
        ["ver", 4, false],
        ["len", 4, false],
        ["nprot", 3, false],
        ["rep_md_bits_high", 5, false],
        ["rep_md_bits_low", 1, false],
        ["reserved", 6, false],
        ["d", 1, false],
        ["q", 1, false],
        ["f", 1, false],
        ["hw_id", 6, false],
        ["switch_id", 32, false],
        ["seq_num", 32, false],
        ["ingress_tstamp", 32, false]
      ]
    },
    {
      "name" : "ipv6_t",
      "id" : 8,
      "fields" : [
        ["version", 4, false],
        ["traffic_class", 6, false],
        ["ecn", 2, false],
        ["flow_label", 20, false],
        ["payload_len", 16, false],
        ["next_hdr", 8, false],
        ["hop_limit", 8, false],
        ["src_addr", 128, false],
        ["dst_addr", 128, false]
      ]
    },
    {
      "name" : "srv6h_t",
      "id" : 9,
      "fields" : [
        ["next_hdr", 8, false],
        ["hdr_ext_len", 8, false],
        ["routing_type", 8, false],
        ["segment_left", 8, false],
        ["last_entry", 8, false],
        ["flags", 8, false],
        ["tag", 16, false]
      ]
    },
    {
      "name" : "tcp_t",
      "id" : 10,
      "fields" : [
        ["srcPort", 16, false],
        ["dstPort", 16, false],
        ["seqNum", 32, false],
        ["ackNum", 32, false],
        ["dataOffset", 4, false],
        ["reserved", 3, false],
        ["flags", 9, false],
        ["winSize", 16, false],
        ["csum", 16, false],
        ["urgPoint", 16, false]
      ]
    },
    {
      "name" : "icmp_t",
      "id" : 11,
      "fields" : [
        ["type", 8, false],
        ["icmp_code", 8, false],
        ["checksum", 16, false],
        ["identifier", 16, false],
        ["sequence_number", 16, false],
        ["timestamp", 64, false]
      ]
    },
    {
      "name" : "icmpv6_t",
      "id" : 12,
      "fields" : [
        ["type", 8, false],
        ["code", 8, false],
        ["checksum", 16, false]
      ]
    },
    {
      "name" : "ndp_t",
      "id" : 13,
      "fields" : [
        ["flags", 32, false],
        ["target_ipv6_addr", 128, false],
        ["type", 8, false],
        ["length", 8, false],
        ["target_mac_addr", 48, false]
      ]
    },
    {
      "name" : "intl4_shim_t",
      "id" : 14,
      "fields" : [
        ["int_type", 8, false],
        ["rsvd1", 8, false],
        ["len", 8, false],
        ["dscp", 6, false],
        ["rsvd3", 2, false]
      ]
    },
    {
      "name" : "int_header_t",
      "id" : 15,
      "fields" : [
        ["ver", 4, false],
        ["rep", 2, false],
        ["c", 1, false],
        ["e", 1, false],
        ["m", 1, false],
        ["rsvd1", 7, false],
        ["rsvd2", 3, false],
        ["hop_metadata_len", 5, false],
        ["remaining_hop_cnt", 8, false],
        ["instruction_mask", 16, false],
        ["rsvd3", 16, false]
      ]
    },
    {
      "name" : "int_egress_port_tx_util_t",
      "id" : 16,
      "fields" : [
        ["egress_port_tx_util", 32, false]
      ]
    },
    {
      "name" : "int_egress_tstamp_t",
      "id" : 17,
      "fields" : [
        ["egress_tstamp", 64, false]
      ]
    },
    {
      "name" : "int_hop_latency_t",
      "id" : 18,
      "fields" : [
        ["hop_latency", 32, false]
      ]
    },
    {
      "name" : "int_ingress_tstamp_t",
      "id" : 19,
      "fields" : [
        ["ingress_tstamp", 64, false]
      ]
    },
    {
      "name" : "int_port_ids_t",
      "id" : 20,
      "fields" : [
        ["ingress_port_id", 16, false],
        ["egress_port_id", 16, false]
      ]
    },
    {
      "name" : "int_level2_port_ids_t",
      "id" : 21,
      "fields" : [
        ["ingress_port_id", 16, false],
        ["egress_port_id", 16, false]
      ]
    },
    {
      "name" : "int_q_occupancy_t",
      "id" : 22,
      "fields" : [
        ["q_id", 8, false],
        ["q_occupancy", 24, false]
      ]
    },
    {
      "name" : "int_switch_id_t",
      "id" : 23,
      "fields" : [
        ["switch_id", 32, false]
      ]
    },
    {
      "name" : "int_data_t",
      "id" : 24,
      "fields" : [
        ["data", "*"]
      ],
      "max_length" : 200
    },
    {
      "name" : "flowlet_t",
      "id" : 25,
      "fields" : [
        ["update_path", 8, false]
      ]
    },
    {
      "name" : "srv6_list_t",
      "id" : 26,
      "fields" : [
        ["segment_id", 128, false]
      ]
    }
  ],
  "headers" : [
    {
      "name" : "scalars",
      "id" : 0,
      "header_type" : "scalars_0",
      "metadata" : true,
      "pi_omit" : true
    },
    {
      "name" : "standard_metadata",
      "id" : 1,
      "header_type" : "standard_metadata",
      "metadata" : true,
      "pi_omit" : true
    },
    {
      "name" : "cpu_out",
      "id" : 2,
      "header_type" : "cpu_out_header_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "cpu_in",
      "id" : 3,
      "header_type" : "cpu_in_header_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "report_ethernet",
      "id" : 4,
      "header_type" : "ethernet_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "report_ipv4",
      "id" : 5,
      "header_type" : "ipv4_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "report_udp",
      "id" : 6,
      "header_type" : "udp_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "report_fixed_header",
      "id" : 7,
      "header_type" : "int_report_fixed_header_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "ethernet",
      "id" : 8,
      "header_type" : "ethernet_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "ipv4",
      "id" : 9,
      "header_type" : "ipv4_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "ipv6",
      "id" : 10,
      "header_type" : "ipv6_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "srv6h",
      "id" : 11,
      "header_type" : "srv6h_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "tcp",
      "id" : 12,
      "header_type" : "tcp_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "udp",
      "id" : 13,
      "header_type" : "udp_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "icmp",
      "id" : 14,
      "header_type" : "icmp_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "icmpv6",
      "id" : 15,
      "header_type" : "icmpv6_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "ndp",
      "id" : 16,
      "header_type" : "ndp_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "int_shim",
      "id" : 17,
      "header_type" : "intl4_shim_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "int_header",
      "id" : 18,
      "header_type" : "int_header_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "int_egress_port_tx_util",
      "id" : 19,
      "header_type" : "int_egress_port_tx_util_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "int_egress_tstamp",
      "id" : 20,
      "header_type" : "int_egress_tstamp_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "int_hop_latency",
      "id" : 21,
      "header_type" : "int_hop_latency_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "int_ingress_tstamp",
      "id" : 22,
      "header_type" : "int_ingress_tstamp_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "int_port_ids",
      "id" : 23,
      "header_type" : "int_port_ids_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "int_level2_port_ids",
      "id" : 24,
      "header_type" : "int_level2_port_ids_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "int_q_occupancy",
      "id" : 25,
      "header_type" : "int_q_occupancy_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "int_switch_id",
      "id" : 26,
      "header_type" : "int_switch_id_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "int_data",
      "id" : 27,
      "header_type" : "int_data_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "flowlet",
      "id" : 28,
      "header_type" : "flowlet_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "srv6_list[0]",
      "id" : 29,
      "header_type" : "srv6_list_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "srv6_list[1]",
      "id" : 30,
      "header_type" : "srv6_list_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "srv6_list[2]",
      "id" : 31,
      "header_type" : "srv6_list_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "srv6_list[3]",
      "id" : 32,
      "header_type" : "srv6_list_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "_int_shim9",
      "id" : 33,
      "header_type" : "intl4_shim_t",
      "metadata" : false,
      "pi_omit" : true
    }
  ],
  "header_stacks" : [
    {
      "name" : "srv6_list",
      "id" : 0,
      "header_type" : "srv6_list_t",
      "size" : 4,
      "header_ids" : [29, 30, 31, 32]
    }
  ],
  "header_union_types" : [],
  "header_unions" : [],
  "header_union_stacks" : [],
  "field_lists" : [
    {
      "id" : 1,
      "name" : "fl",
      "source_info" : {
        "filename" : "/home/lchampagne/Documents/Test/int_v1.0/int.p4",
        "line" : 316,
        "column" : 43,
        "source_fragment" : "meta"
      },
      "elements" : [
        {
          "type" : "field",
          "value" : ["scalars", "userMetadata._int_metadata_source0"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "userMetadata._int_metadata_sink1"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "userMetadata._int_metadata_switch_id2"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "userMetadata._int_metadata_insert_byte_cnt3"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "userMetadata._int_metadata_int_hdr_word_len4"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "userMetadata._int_metadata_remove_int5"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "userMetadata._int_metadata_sink_reporting_port6"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "userMetadata._int_metadata_ingress_tstamp7"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "userMetadata._int_metadata_ingress_port8"]
        },
        {
          "type" : "field",
          "value" : ["_int_shim9", "int_type"]
        },
        {
          "type" : "field",
          "value" : ["_int_shim9", "rsvd1"]
        },
        {
          "type" : "field",
          "value" : ["_int_shim9", "len"]
        },
        {
          "type" : "field",
          "value" : ["_int_shim9", "dscp"]
        },
        {
          "type" : "field",
          "value" : ["_int_shim9", "rsvd3"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "userMetadata._layer34_metadata_ip_src10"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "userMetadata._layer34_metadata_ip_dst11"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "userMetadata._layer34_metadata_ip_ver12"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "userMetadata._layer34_metadata_l4_src13"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "userMetadata._layer34_metadata_l4_dst14"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "userMetadata._layer34_metadata_l4_proto15"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "userMetadata._layer34_metadata_l3_mtu16"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "userMetadata._layer34_metadata_dscp17"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "userMetadata._ecmp_metadata_ecmp_hash18"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "userMetadata._ecmp_metadata_ecmp_group_id19"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "userMetadata._tcpLen20"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "userMetadata._is_multicast21"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "userMetadata._next_srv6_sid22"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "userMetadata._ip_proto23"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "userMetadata._icmp_type24"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "userMetadata._flowlet_last_stamp25"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "userMetadata._flowlet_time_diff26"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "userMetadata._flowlet_register_index27"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "userMetadata._flow_source28"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "userMetadata._update_path29"]
        }
      ]
    }
  ],
  "errors" : [
    ["NoError", 0],
    ["PacketTooShort", 1],
    ["NoMatch", 2],
    ["StackOutOfBounds", 3],
    ["HeaderTooShort", 4],
    ["ParserTimeout", 5],
    ["ParserInvalidArgument", 6],
    ["INTShimLenTooShort", 7],
    ["INTVersionNotSupported", 8]
  ],
  "enums" : [],
  "parsers" : [
    {
      "name" : "parser",
      "id" : 0,
      "init_state" : "start",
      "parse_states" : [
        {
          "name" : "start",
          "id" : 0,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "ethernet"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "type" : "hexstr",
              "value" : "0x0800",
              "mask" : null,
              "next_state" : "parse_ipv4"
            },
            {
              "type" : "hexstr",
              "value" : "0x86dd",
              "mask" : null,
              "next_state" : "parse_ipv6"
            },
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : [
            {
              "type" : "field",
              "value" : ["ethernet", "etherType"]
            }
          ]
        },
        {
          "name" : "parse_ipv4",
          "id" : 1,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "ipv4"
                }
              ],
              "op" : "extract"
            },
            {
              "parameters" : [
                {
                  "type" : "field",
                  "value" : ["scalars", "userMetadata._layer34_metadata_ip_src10"]
                },
                {
                  "type" : "field",
                  "value" : ["ipv4", "srcAddr"]
                }
              ],
              "op" : "set"
            },
            {
              "parameters" : [
                {
                  "type" : "field",
                  "value" : ["scalars", "userMetadata._layer34_metadata_ip_dst11"]
                },
                {
                  "type" : "field",
                  "value" : ["ipv4", "dstAddr"]
                }
              ],
              "op" : "set"
            },
            {
              "parameters" : [
                {
                  "type" : "field",
                  "value" : ["scalars", "userMetadata._layer34_metadata_ip_ver12"]
                },
                {
                  "type" : "hexstr",
                  "value" : "0x04"
                }
              ],
              "op" : "set"
            },
            {
              "parameters" : [
                {
                  "type" : "field",
                  "value" : ["scalars", "userMetadata._layer34_metadata_dscp17"]
                },
                {
                  "type" : "field",
                  "value" : ["ipv4", "dscp"]
                }
              ],
              "op" : "set"
            }
          ],
          "transitions" : [
            {
              "type" : "hexstr",
              "value" : "0x06",
              "mask" : null,
              "next_state" : "parse_tcp"
            },
            {
              "type" : "hexstr",
              "value" : "0x11",
              "mask" : null,
              "next_state" : "parse_udp"
            },
            {
              "type" : "hexstr",
              "value" : "0x01",
              "mask" : null,
              "next_state" : "parse_icmp"
            },
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : [
            {
              "type" : "field",
              "value" : ["ipv4", "protocol"]
            }
          ]
        },
        {
          "name" : "parse_ipv6",
          "id" : 2,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "ipv6"
                }
              ],
              "op" : "extract"
            },
            {
              "parameters" : [
                {
                  "type" : "field",
                  "value" : ["scalars", "userMetadata._ip_proto23"]
                },
                {
                  "type" : "field",
                  "value" : ["ipv6", "next_hdr"]
                }
              ],
              "op" : "set"
            },
            {
              "parameters" : [
                {
                  "type" : "field",
                  "value" : ["scalars", "userMetadata._layer34_metadata_ip_ver12"]
                },
                {
                  "type" : "hexstr",
                  "value" : "0x06"
                }
              ],
              "op" : "set"
            },
            {
              "parameters" : [
                {
                  "type" : "field",
                  "value" : ["scalars", "userMetadata._layer34_metadata_dscp17"]
                },
                {
                  "type" : "field",
                  "value" : ["ipv6", "traffic_class"]
                }
              ],
              "op" : "set"
            }
          ],
          "transitions" : [
            {
              "type" : "hexstr",
              "value" : "0x06",
              "mask" : null,
              "next_state" : "parse_tcp"
            },
            {
              "type" : "hexstr",
              "value" : "0x11",
              "mask" : null,
              "next_state" : "parse_udp"
            },
            {
              "type" : "hexstr",
              "value" : "0x3a",
              "mask" : null,
              "next_state" : "parse_icmpv6"
            },
            {
              "type" : "hexstr",
              "value" : "0x2b",
              "mask" : null,
              "next_state" : "parse_srv6"
            },
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : [
            {
              "type" : "field",
              "value" : ["ipv6", "next_hdr"]
            }
          ]
        },
        {
          "name" : "parse_tcp",
          "id" : 3,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "tcp"
                }
              ],
              "op" : "extract"
            },
            {
              "parameters" : [
                {
                  "type" : "field",
                  "value" : ["scalars", "userMetadata._layer34_metadata_l4_src13"]
                },
                {
                  "type" : "field",
                  "value" : ["tcp", "srcPort"]
                }
              ],
              "op" : "set"
            },
            {
              "parameters" : [
                {
                  "type" : "field",
                  "value" : ["scalars", "userMetadata._layer34_metadata_l4_dst14"]
                },
                {
                  "type" : "field",
                  "value" : ["tcp", "dstPort"]
                }
              ],
              "op" : "set"
            },
            {
              "parameters" : [
                {
                  "type" : "field",
                  "value" : ["scalars", "userMetadata._layer34_metadata_l4_proto15"]
                },
                {
                  "type" : "hexstr",
                  "value" : "0x06"
                }
              ],
              "op" : "set"
            }
          ],
          "transitions" : [
            {
              "type" : "hexstr",
              "value" : "0x20",
              "mask" : null,
              "next_state" : "parse_int"
            },
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._layer34_metadata_dscp17"]
            }
          ]
        },
        {
          "name" : "parse_udp",
          "id" : 4,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "udp"
                }
              ],
              "op" : "extract"
            },
            {
              "parameters" : [
                {
                  "type" : "field",
                  "value" : ["scalars", "userMetadata._layer34_metadata_l4_src13"]
                },
                {
                  "type" : "field",
                  "value" : ["udp", "srcPort"]
                }
              ],
              "op" : "set"
            },
            {
              "parameters" : [
                {
                  "type" : "field",
                  "value" : ["scalars", "userMetadata._layer34_metadata_l4_dst14"]
                },
                {
                  "type" : "field",
                  "value" : ["udp", "dstPort"]
                }
              ],
              "op" : "set"
            },
            {
              "parameters" : [
                {
                  "type" : "field",
                  "value" : ["scalars", "userMetadata._layer34_metadata_l4_proto15"]
                },
                {
                  "type" : "hexstr",
                  "value" : "0x11"
                }
              ],
              "op" : "set"
            }
          ],
          "transitions" : [
            {
              "type" : "hexstr",
              "value" : "0x200000",
              "mask" : "0x3f0000",
              "next_state" : "parse_int"
            },
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._layer34_metadata_dscp17"]
            },
            {
              "type" : "field",
              "value" : ["udp", "dstPort"]
            }
          ]
        },
        {
          "name" : "parse_icmp",
          "id" : 5,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "icmp"
                }
              ],
              "op" : "extract"
            },
            {
              "parameters" : [
                {
                  "type" : "field",
                  "value" : ["scalars", "userMetadata._icmp_type24"]
                },
                {
                  "type" : "field",
                  "value" : ["icmp", "type"]
                }
              ],
              "op" : "set"
            }
          ],
          "transitions" : [
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : []
        },
        {
          "name" : "parse_icmpv6",
          "id" : 6,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "icmpv6"
                }
              ],
              "op" : "extract"
            },
            {
              "parameters" : [
                {
                  "type" : "field",
                  "value" : ["scalars", "userMetadata._icmp_type24"]
                },
                {
                  "type" : "field",
                  "value" : ["icmpv6", "type"]
                }
              ],
              "op" : "set"
            }
          ],
          "transitions" : [
            {
              "type" : "hexstr",
              "value" : "0x87",
              "mask" : null,
              "next_state" : "parse_ndp"
            },
            {
              "type" : "hexstr",
              "value" : "0x88",
              "mask" : null,
              "next_state" : "parse_ndp"
            },
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : [
            {
              "type" : "field",
              "value" : ["icmpv6", "type"]
            }
          ]
        },
        {
          "name" : "parse_ndp",
          "id" : 7,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "ndp"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : []
        },
        {
          "name" : "parse_srv6",
          "id" : 8,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "srv6h"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : "parse_srv6_list"
            }
          ],
          "transition_key" : []
        },
        {
          "name" : "parse_srv6_list",
          "id" : 9,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "stack",
                  "value" : "srv6_list"
                }
              ],
              "op" : "extract"
            },
            {
              "parameters" : [
                {
                  "op" : "log_msg",
                  "parameters" : [
                    {
                      "type" : "string",
                      "value" : "Test:{} {}\n"
                    },
                    {
                      "type" : "parameters_vector",
                      "value" : [
                        {
                          "type" : "field",
                          "value" : ["srv6h", "segment_left"]
                        },
                        {
                          "type" : "expression",
                          "value" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "last_stack_index",
                              "left" : null,
                              "right" : {
                                "type" : "header_stack",
                                "value" : "srv6_list"
                              }
                            }
                          }
                        }
                      ]
                    }
                  ],
                  "source_info" : {
                    "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/parser.p4",
                    "line" : 122,
                    "column" : 8,
                    "source_fragment" : "        log_msg(\\\"Test:{} {}\\n\\\", {hdr.srv6h.segment_left, hdr.srv6_list.lastIndex});"
                  }
                }
              ],
              "op" : "primitive"
            },
            {
              "parameters" : [
                {
                  "type" : "field",
                  "value" : ["scalars", "tmp"]
                },
                {
                  "type" : "expression",
                  "value" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "?",
                      "left" : {
                        "type" : "hexstr",
                        "value" : "0x01"
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00"
                      },
                      "cond" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "+",
                                  "left" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "&",
                                      "left" : {
                                        "type" : "field",
                                        "value" : ["srv6h", "segment_left"]
                                      },
                                      "right" : {
                                        "type" : "hexstr",
                                        "value" : "0xffffffff"
                                      }
                                    }
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0xffffffff"
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffffffff"
                              }
                            }
                          },
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "last_stack_index",
                              "left" : null,
                              "right" : {
                                "type" : "header_stack",
                                "value" : "srv6_list"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ],
              "op" : "set"
            }
          ],
          "transitions" : [
            {
              "type" : "hexstr",
              "value" : "0x01",
              "mask" : null,
              "next_state" : "mark_current_srv6"
            },
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : "check_last_srv6"
            }
          ],
          "transition_key" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp"]
            }
          ]
        },
        {
          "name" : "mark_current_srv6",
          "id" : 10,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "field",
                  "value" : ["scalars", "userMetadata._next_srv6_sid22"]
                },
                {
                  "type" : "expression",
                  "value" : {
                    "type" : "stack_field",
                    "value" : ["srv6_list", "segment_id"]
                  }
                }
              ],
              "op" : "set"
            }
          ],
          "transitions" : [
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : "check_last_srv6"
            }
          ],
          "transition_key" : []
        },
        {
          "name" : "check_last_srv6",
          "id" : 11,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "field",
                  "value" : ["scalars", "tmp_0"]
                },
                {
                  "type" : "expression",
                  "value" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "?",
                      "left" : {
                        "type" : "hexstr",
                        "value" : "0x01"
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00"
                      },
                      "cond" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "field",
                                "value" : ["srv6h", "last_entry"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffffffff"
                              }
                            }
                          },
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "last_stack_index",
                              "left" : null,
                              "right" : {
                                "type" : "header_stack",
                                "value" : "srv6_list"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ],
              "op" : "set"
            }
          ],
          "transitions" : [
            {
              "type" : "hexstr",
              "value" : "0x01",
              "mask" : null,
              "next_state" : "parse_srv6_next_hdr"
            },
            {
              "type" : "hexstr",
              "value" : "0x00",
              "mask" : null,
              "next_state" : "parse_srv6_list"
            }
          ],
          "transition_key" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_0"]
            }
          ]
        },
        {
          "name" : "parse_srv6_next_hdr",
          "id" : 12,
          "parser_ops" : [],
          "transitions" : [
            {
              "type" : "hexstr",
              "value" : "0x06",
              "mask" : null,
              "next_state" : "parse_tcp"
            },
            {
              "type" : "hexstr",
              "value" : "0x11",
              "mask" : null,
              "next_state" : "parse_udp"
            },
            {
              "type" : "hexstr",
              "value" : "0x3a",
              "mask" : null,
              "next_state" : "parse_icmpv6"
            },
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : [
            {
              "type" : "field",
              "value" : ["srv6h", "next_hdr"]
            }
          ]
        },
        {
          "name" : "parse_int",
          "id" : 13,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "int_shim"
                }
              ],
              "op" : "extract"
            },
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "int_header"
                }
              ],
              "op" : "extract"
            },
            {
              "parameters" : [
                {
                  "type" : "field",
                  "value" : ["scalars", "tmp_1"]
                },
                {
                  "type" : "expression",
                  "value" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "<<",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "&",
                                  "left" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "+",
                                      "left" : {
                                        "type" : "field",
                                        "value" : ["int_shim", "len"]
                                      },
                                      "right" : {
                                        "type" : "hexstr",
                                        "value" : "0xfd"
                                      }
                                    }
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0xff"
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffffffff"
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x5"
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffffffff"
                      }
                    }
                  }
                }
              ],
              "op" : "set"
            },
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "int_data"
                },
                {
                  "type" : "expression",
                  "value" : {
                    "type" : "field",
                    "value" : ["scalars", "tmp_1"]
                  }
                }
              ],
              "op" : "extract_VL"
            }
          ],
          "transitions" : [
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : []
        }
      ]
    }
  ],
  "parse_vsets" : [],
  "deparsers" : [
    {
      "name" : "deparser",
      "id" : 0,
      "source_info" : {
        "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/parser.p4",
        "line" : 165,
        "column" : 8,
        "source_fragment" : "DeparserImpl"
      },
      "order" : ["cpu_in", "report_ethernet", "report_ipv4", "report_udp", "report_fixed_header", "ethernet", "ipv4", "ipv6", "srv6h", "srv6_list[0]", "srv6_list[1]", "srv6_list[2]", "srv6_list[3]", "udp", "tcp", "icmp", "icmpv6", "ndp", "flowlet", "int_shim", "int_header", "int_switch_id", "int_port_ids", "int_hop_latency", "int_q_occupancy", "int_ingress_tstamp", "int_egress_tstamp", "int_level2_port_ids", "int_egress_port_tx_util", "int_data"],
      "primitives" : []
    }
  ],
  "meter_arrays" : [],
  "counter_arrays" : [
    {
      "name" : "ndp_reply_table_counter",
      "id" : 0,
      "source_info" : {
        "filename" : "/home/lchampagne/Documents/Test/int_v1.0/int.p4",
        "line" : 161,
        "column" : 8,
        "source_fragment" : "counters"
      },
      "is_direct" : true,
      "binding" : "ingress.ndp_reply_table"
    },
    {
      "name" : "l2_exact_table_counter",
      "id" : 1,
      "source_info" : {
        "filename" : "/home/lchampagne/Documents/Test/int_v1.0/int.p4",
        "line" : 106,
        "column" : 8,
        "source_fragment" : "counters"
      },
      "is_direct" : true,
      "binding" : "ingress.l2_exact_table"
    },
    {
      "name" : "l2_ternary_table_counter",
      "id" : 2,
      "source_info" : {
        "filename" : "/home/lchampagne/Documents/Test/int_v1.0/int.p4",
        "line" : 132,
        "column" : 8,
        "source_fragment" : "counters"
      },
      "is_direct" : true,
      "binding" : "ingress.l2_ternary_table"
    },
    {
      "name" : "acl_table_counter",
      "id" : 3,
      "source_info" : {
        "filename" : "/home/lchampagne/Documents/Test/int_v1.0/int.p4",
        "line" : 264,
        "column" : 8,
        "source_fragment" : "counters"
      },
      "is_direct" : true,
      "binding" : "ingress.acl_table"
    },
    {
      "name" : "ingress.SRv6.srv6_my_sid_table_counter",
      "id" : 4,
      "is_direct" : true,
      "binding" : "ingress.SRv6.srv6_my_sid",
      "source_info" : {
        "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/srv6.p4",
        "line" : 21,
        "column" : 50,
        "source_fragment" : "srv6_my_sid_table_counter"
      }
    },
    {
      "name" : "ingress.SRv6.srv6_transit_table_counter",
      "id" : 5,
      "is_direct" : true,
      "binding" : "ingress.SRv6.srv6_transit",
      "source_info" : {
        "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/srv6.p4",
        "line" : 77,
        "column" : 50,
        "source_fragment" : "srv6_transit_table_counter"
      }
    }
  ],
  "register_arrays" : [
    {
      "name" : "ingress.Flowlet.flowlet_time_stamp",
      "id" : 0,
      "source_info" : {
        "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/flowlet.p4",
        "line" : 13,
        "column" : 28,
        "source_fragment" : "flowlet_time_stamp"
      },
      "size" : 8192,
      "bitwidth" : 48
    },
    {
      "name" : "report_seq_num_register",
      "id" : 1,
      "source_info" : {
        "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_report.p4",
        "line" : 25,
        "column" : 22,
        "source_fragment" : "report_seq_num_register"
      },
      "size" : 1,
      "bitwidth" : 32
    }
  ],
  "calculations" : [
    {
      "name" : "calc",
      "id" : 0,
      "algo" : "crc16",
      "input" : [
        {
          "type" : "field",
          "value" : ["scalars", "tmp_2"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_3"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "userMetadata._layer34_metadata_l4_src13"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "userMetadata._layer34_metadata_l4_dst14"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "userMetadata._layer34_metadata_l4_proto15"]
        }
      ]
    },
    {
      "name" : "calc_0",
      "id" : 1,
      "algo" : "crc16",
      "input" : [
        {
          "type" : "field",
          "value" : ["ipv6", "src_addr"]
        },
        {
          "type" : "field",
          "value" : ["ipv6", "dst_addr"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "userMetadata._layer34_metadata_l4_src13"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "userMetadata._layer34_metadata_l4_dst14"]
        },
        {
          "type" : "field",
          "value" : ["ipv6", "next_hdr"]
        }
      ]
    },
    {
      "name" : "calc_1",
      "id" : 2,
      "source_info" : {
        "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/parser.p4",
        "line" : 221,
        "column" : 8,
        "source_fragment" : "update_checksum( ..."
      },
      "algo" : "csum16",
      "input" : [
        {
          "type" : "field",
          "value" : ["ipv4", "version"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "ihl"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "dscp"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "ecn"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "totalLen"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "id"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "flags"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "fragOffset"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "ttl"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "protocol"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "srcAddr"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "dstAddr"]
        }
      ]
    },
    {
      "name" : "calc_2",
      "id" : 3,
      "source_info" : {
        "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/parser.p4",
        "line" : 241,
        "column" : 8,
        "source_fragment" : "update_checksum( ..."
      },
      "algo" : "csum16",
      "input" : [
        {
          "type" : "field",
          "value" : ["report_ipv4", "version"]
        },
        {
          "type" : "field",
          "value" : ["report_ipv4", "ihl"]
        },
        {
          "type" : "field",
          "value" : ["report_ipv4", "dscp"]
        },
        {
          "type" : "field",
          "value" : ["report_ipv4", "ecn"]
        },
        {
          "type" : "field",
          "value" : ["report_ipv4", "totalLen"]
        },
        {
          "type" : "field",
          "value" : ["report_ipv4", "id"]
        },
        {
          "type" : "field",
          "value" : ["report_ipv4", "flags"]
        },
        {
          "type" : "field",
          "value" : ["report_ipv4", "fragOffset"]
        },
        {
          "type" : "field",
          "value" : ["report_ipv4", "ttl"]
        },
        {
          "type" : "field",
          "value" : ["report_ipv4", "protocol"]
        },
        {
          "type" : "field",
          "value" : ["report_ipv4", "srcAddr"]
        },
        {
          "type" : "field",
          "value" : ["report_ipv4", "dstAddr"]
        }
      ]
    },
    {
      "name" : "calc_3",
      "id" : 4,
      "source_info" : {
        "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/parser.p4",
        "line" : 261,
        "column" : 8,
        "source_fragment" : "update_checksum(hdr.ndp.isValid(), ..."
      },
      "algo" : "csum16",
      "input" : [
        {
          "type" : "field",
          "value" : ["ipv6", "src_addr"]
        },
        {
          "type" : "field",
          "value" : ["ipv6", "dst_addr"]
        },
        {
          "type" : "field",
          "value" : ["ipv6", "payload_len"]
        },
        {
          "type" : "hexstr",
          "value" : "0x00",
          "bitwidth" : 8
        },
        {
          "type" : "field",
          "value" : ["ipv6", "next_hdr"]
        },
        {
          "type" : "field",
          "value" : ["icmpv6", "type"]
        },
        {
          "type" : "field",
          "value" : ["icmpv6", "code"]
        },
        {
          "type" : "field",
          "value" : ["ndp", "flags"]
        },
        {
          "type" : "field",
          "value" : ["ndp", "target_ipv6_addr"]
        },
        {
          "type" : "field",
          "value" : ["ndp", "type"]
        },
        {
          "type" : "field",
          "value" : ["ndp", "length"]
        },
        {
          "type" : "field",
          "value" : ["ndp", "target_mac_addr"]
        }
      ]
    },
    {
      "name" : "calc_4",
      "id" : 5,
      "source_info" : {
        "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/parser.p4",
        "line" : 280,
        "column" : 8,
        "source_fragment" : "update_checksum_with_payload( ..."
      },
      "algo" : "csum16",
      "input" : [
        {
          "type" : "field",
          "value" : ["ipv4", "srcAddr"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "dstAddr"]
        },
        {
          "type" : "hexstr",
          "value" : "0x00",
          "bitwidth" : 8
        },
        {
          "type" : "field",
          "value" : ["ipv4", "protocol"]
        },
        {
          "type" : "field",
          "value" : ["udp", "len"]
        },
        {
          "type" : "field",
          "value" : ["udp", "srcPort"]
        },
        {
          "type" : "field",
          "value" : ["udp", "dstPort"]
        },
        {
          "type" : "field",
          "value" : ["udp", "len"]
        },
        {
          "type" : "payload",
          "value" : null
        }
      ]
    },
    {
      "name" : "calc_5",
      "id" : 6,
      "source_info" : {
        "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/parser.p4",
        "line" : 295,
        "column" : 8,
        "source_fragment" : "update_checksum_with_payload( ..."
      },
      "algo" : "csum16",
      "input" : [
        {
          "type" : "field",
          "value" : ["ipv4", "srcAddr"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "dstAddr"]
        },
        {
          "type" : "hexstr",
          "value" : "0x00",
          "bitwidth" : 8
        },
        {
          "type" : "field",
          "value" : ["ipv4", "protocol"]
        },
        {
          "type" : "field",
          "value" : ["udp", "len"]
        },
        {
          "type" : "field",
          "value" : ["udp", "srcPort"]
        },
        {
          "type" : "field",
          "value" : ["udp", "dstPort"]
        },
        {
          "type" : "field",
          "value" : ["udp", "len"]
        },
        {
          "type" : "header",
          "value" : "int_shim"
        },
        {
          "type" : "header",
          "value" : "int_header"
        },
        {
          "type" : "header",
          "value" : "int_switch_id"
        },
        {
          "type" : "header",
          "value" : "int_port_ids"
        },
        {
          "type" : "header",
          "value" : "int_q_occupancy"
        },
        {
          "type" : "header",
          "value" : "int_level2_port_ids"
        },
        {
          "type" : "header",
          "value" : "int_ingress_tstamp"
        },
        {
          "type" : "header",
          "value" : "int_egress_tstamp"
        },
        {
          "type" : "header",
          "value" : "int_egress_port_tx_util"
        },
        {
          "type" : "header",
          "value" : "int_hop_latency"
        },
        {
          "type" : "payload",
          "value" : null
        }
      ]
    },
    {
      "name" : "calc_6",
      "id" : 7,
      "source_info" : {
        "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/parser.p4",
        "line" : 321,
        "column" : 8,
        "source_fragment" : "update_checksum_with_payload( ..."
      },
      "algo" : "csum16",
      "input" : [
        {
          "type" : "field",
          "value" : ["ipv4", "srcAddr"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "dstAddr"]
        },
        {
          "type" : "hexstr",
          "value" : "0x00",
          "bitwidth" : 8
        },
        {
          "type" : "field",
          "value" : ["ipv4", "protocol"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "userMetadata._tcpLen20"]
        },
        {
          "type" : "field",
          "value" : ["tcp", "srcPort"]
        },
        {
          "type" : "field",
          "value" : ["tcp", "dstPort"]
        },
        {
          "type" : "field",
          "value" : ["tcp", "seqNum"]
        },
        {
          "type" : "field",
          "value" : ["tcp", "ackNum"]
        },
        {
          "type" : "field",
          "value" : ["tcp", "dataOffset"]
        },
        {
          "type" : "field",
          "value" : ["tcp", "reserved"]
        },
        {
          "type" : "field",
          "value" : ["tcp", "flags"]
        },
        {
          "type" : "field",
          "value" : ["tcp", "winSize"]
        },
        {
          "type" : "field",
          "value" : ["tcp", "urgPoint"]
        },
        {
          "type" : "payload",
          "value" : null
        }
      ]
    },
    {
      "name" : "calc_7",
      "id" : 8,
      "source_info" : {
        "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/parser.p4",
        "line" : 340,
        "column" : 8,
        "source_fragment" : "update_checksum_with_payload( ..."
      },
      "algo" : "csum16",
      "input" : [
        {
          "type" : "field",
          "value" : ["ipv4", "srcAddr"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "dstAddr"]
        },
        {
          "type" : "hexstr",
          "value" : "0x00",
          "bitwidth" : 8
        },
        {
          "type" : "field",
          "value" : ["ipv4", "protocol"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "userMetadata._tcpLen20"]
        },
        {
          "type" : "field",
          "value" : ["tcp", "srcPort"]
        },
        {
          "type" : "field",
          "value" : ["tcp", "dstPort"]
        },
        {
          "type" : "field",
          "value" : ["tcp", "seqNum"]
        },
        {
          "type" : "field",
          "value" : ["tcp", "ackNum"]
        },
        {
          "type" : "field",
          "value" : ["tcp", "dataOffset"]
        },
        {
          "type" : "field",
          "value" : ["tcp", "reserved"]
        },
        {
          "type" : "field",
          "value" : ["tcp", "flags"]
        },
        {
          "type" : "field",
          "value" : ["tcp", "winSize"]
        },
        {
          "type" : "hexstr",
          "value" : "0x0000",
          "bitwidth" : 16
        },
        {
          "type" : "field",
          "value" : ["tcp", "urgPoint"]
        },
        {
          "type" : "header",
          "value" : "int_shim"
        },
        {
          "type" : "header",
          "value" : "int_header"
        },
        {
          "type" : "header",
          "value" : "int_switch_id"
        },
        {
          "type" : "header",
          "value" : "int_port_ids"
        },
        {
          "type" : "header",
          "value" : "int_q_occupancy"
        },
        {
          "type" : "header",
          "value" : "int_level2_port_ids"
        },
        {
          "type" : "header",
          "value" : "int_ingress_tstamp"
        },
        {
          "type" : "header",
          "value" : "int_egress_tstamp"
        },
        {
          "type" : "header",
          "value" : "int_egress_port_tx_util"
        },
        {
          "type" : "header",
          "value" : "int_hop_latency"
        },
        {
          "type" : "payload",
          "value" : null
        }
      ]
    }
  ],
  "learn_lists" : [],
  "actions" : [
    {
      "name" : "NoAction",
      "id" : 0,
      "runtime_data" : [],
      "primitives" : []
    },
    {
      "name" : "NoAction",
      "id" : 1,
      "runtime_data" : [],
      "primitives" : []
    },
    {
      "name" : "NoAction",
      "id" : 2,
      "runtime_data" : [],
      "primitives" : []
    },
    {
      "name" : "NoAction",
      "id" : 3,
      "runtime_data" : [],
      "primitives" : []
    },
    {
      "name" : "NoAction",
      "id" : 4,
      "runtime_data" : [],
      "primitives" : []
    },
    {
      "name" : "NoAction",
      "id" : 5,
      "runtime_data" : [],
      "primitives" : []
    },
    {
      "name" : "NoAction",
      "id" : 6,
      "runtime_data" : [],
      "primitives" : []
    },
    {
      "name" : "NoAction",
      "id" : 7,
      "runtime_data" : [],
      "primitives" : []
    },
    {
      "name" : "NoAction",
      "id" : 8,
      "runtime_data" : [],
      "primitives" : []
    },
    {
      "name" : "NoAction",
      "id" : 9,
      "runtime_data" : [],
      "primitives" : []
    },
    {
      "name" : "NoAction",
      "id" : 10,
      "runtime_data" : [],
      "primitives" : []
    },
    {
      "name" : "NoAction",
      "id" : 11,
      "runtime_data" : [],
      "primitives" : []
    },
    {
      "name" : "NoAction",
      "id" : 12,
      "runtime_data" : [],
      "primitives" : []
    },
    {
      "name" : "NoAction",
      "id" : 13,
      "runtime_data" : [],
      "primitives" : []
    },
    {
      "name" : "ingress.Int_source.configure_source",
      "id" : 14,
      "runtime_data" : [
        {
          "name" : "max_hop",
          "bitwidth" : 8
        },
        {
          "name" : "hop_metadata_len",
          "bitwidth" : 5
        },
        {
          "name" : "ins_cnt",
          "bitwidth" : 5
        },
        {
          "name" : "ins_mask",
          "bitwidth" : 16
        }
      ],
      "primitives" : [
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "int_shim"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_source.p4",
            "line" : 34,
            "column" : 8,
            "source_fragment" : "hdr.int_shim.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_shim", "int_type"]
            },
            {
              "type" : "hexstr",
              "value" : "0x01"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/headers.p4",
            "line" : 170,
            "column" : 35,
            "source_fragment" : "1; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_shim", "len"]
            },
            {
              "type" : "hexstr",
              "value" : "0x03"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_source.p4",
            "line" : 36,
            "column" : 8,
            "source_fragment" : "hdr.int_shim.len = (bit<8>)INT_ALL_HEADER_LEN_BYTES>>2"
          }
        },
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "int_header"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_source.p4",
            "line" : 38,
            "column" : 8,
            "source_fragment" : "hdr.int_header.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_header", "ver"]
            },
            {
              "type" : "hexstr",
              "value" : "0x01"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/headers.p4",
            "line" : 181,
            "column" : 27,
            "source_fragment" : "1; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_header", "rep"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_source.p4",
            "line" : 40,
            "column" : 8,
            "source_fragment" : "hdr.int_header.rep = 0"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_header", "c"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_source.p4",
            "line" : 41,
            "column" : 8,
            "source_fragment" : "hdr.int_header.c = 0"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_header", "e"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_source.p4",
            "line" : 42,
            "column" : 8,
            "source_fragment" : "hdr.int_header.e = 0"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_header", "rsvd1"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_source.p4",
            "line" : 43,
            "column" : 8,
            "source_fragment" : "hdr.int_header.rsvd1 = 0"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_header", "rsvd2"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_source.p4",
            "line" : 44,
            "column" : 8,
            "source_fragment" : "hdr.int_header.rsvd2 = 0"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_header", "hop_metadata_len"]
            },
            {
              "type" : "runtime_data",
              "value" : 1
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_source.p4",
            "line" : 45,
            "column" : 8,
            "source_fragment" : "hdr.int_header.hop_metadata_len = hop_metadata_len"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_header", "remaining_hop_cnt"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_source.p4",
            "line" : 46,
            "column" : 8,
            "source_fragment" : "hdr.int_header.remaining_hop_cnt = max_hop"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_header", "instruction_mask"]
            },
            {
              "type" : "runtime_data",
              "value" : 3
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_source.p4",
            "line" : 47,
            "column" : 8,
            "source_fragment" : "hdr.int_header.instruction_mask = ins_mask"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_shim", "dscp"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["ipv4", "dscp"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["int_shim", "dscp"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "d2b",
                      "left" : null,
                      "right" : {
                        "type" : "field",
                        "value" : ["ipv4", "$valid$"]
                      }
                    }
                  }
                }
              }
            }
          ]
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ipv4", "dscp"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x20"
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["ipv4", "dscp"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "d2b",
                      "left" : null,
                      "right" : {
                        "type" : "field",
                        "value" : ["ipv4", "$valid$"]
                      }
                    }
                  }
                }
              }
            }
          ]
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ipv4", "totalLen"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "+",
                          "left" : {
                            "type" : "field",
                            "value" : ["ipv4", "totalLen"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x000c"
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["ipv4", "totalLen"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "d2b",
                      "left" : null,
                      "right" : {
                        "type" : "field",
                        "value" : ["ipv4", "$valid$"]
                      }
                    }
                  }
                }
              }
            }
          ]
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_shim", "dscp"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["ipv4", "dscp"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["ipv6", "traffic_class"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "d2b",
                      "left" : null,
                      "right" : {
                        "type" : "field",
                        "value" : ["ipv4", "$valid$"]
                      }
                    }
                  }
                }
              }
            }
          ]
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ipv6", "traffic_class"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["ipv6", "traffic_class"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0x20"
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "d2b",
                      "left" : null,
                      "right" : {
                        "type" : "field",
                        "value" : ["ipv4", "$valid$"]
                      }
                    }
                  }
                }
              }
            }
          ]
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ipv6", "payload_len"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["ipv6", "payload_len"]
                  },
                  "right" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "+",
                          "left" : {
                            "type" : "field",
                            "value" : ["ipv6", "payload_len"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x000c"
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffff"
                      }
                    }
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "d2b",
                      "left" : null,
                      "right" : {
                        "type" : "field",
                        "value" : ["ipv4", "$valid$"]
                      }
                    }
                  }
                }
              }
            }
          ]
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["udp", "len"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["udp", "len"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x000c"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_source.p4",
            "line" : 60,
            "column" : 8,
            "source_fragment" : "hdr.udp.len = hdr.udp.len + INT_ALL_HEADER_LEN_BYTES"
          }
        }
      ]
    },
    {
      "name" : "ingress.Int_source.configure_source",
      "id" : 15,
      "runtime_data" : [
        {
          "name" : "max_hop",
          "bitwidth" : 8
        },
        {
          "name" : "hop_metadata_len",
          "bitwidth" : 5
        },
        {
          "name" : "ins_cnt",
          "bitwidth" : 5
        },
        {
          "name" : "ins_mask",
          "bitwidth" : 16
        }
      ],
      "primitives" : [
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "int_shim"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_source.p4",
            "line" : 34,
            "column" : 8,
            "source_fragment" : "hdr.int_shim.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_shim", "int_type"]
            },
            {
              "type" : "hexstr",
              "value" : "0x01"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/headers.p4",
            "line" : 170,
            "column" : 35,
            "source_fragment" : "1; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_shim", "len"]
            },
            {
              "type" : "hexstr",
              "value" : "0x03"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_source.p4",
            "line" : 36,
            "column" : 8,
            "source_fragment" : "hdr.int_shim.len = (bit<8>)INT_ALL_HEADER_LEN_BYTES>>2"
          }
        },
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "int_header"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_source.p4",
            "line" : 38,
            "column" : 8,
            "source_fragment" : "hdr.int_header.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_header", "ver"]
            },
            {
              "type" : "hexstr",
              "value" : "0x01"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/headers.p4",
            "line" : 181,
            "column" : 27,
            "source_fragment" : "1; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_header", "rep"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_source.p4",
            "line" : 40,
            "column" : 8,
            "source_fragment" : "hdr.int_header.rep = 0"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_header", "c"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_source.p4",
            "line" : 41,
            "column" : 8,
            "source_fragment" : "hdr.int_header.c = 0"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_header", "e"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_source.p4",
            "line" : 42,
            "column" : 8,
            "source_fragment" : "hdr.int_header.e = 0"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_header", "rsvd1"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_source.p4",
            "line" : 43,
            "column" : 8,
            "source_fragment" : "hdr.int_header.rsvd1 = 0"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_header", "rsvd2"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_source.p4",
            "line" : 44,
            "column" : 8,
            "source_fragment" : "hdr.int_header.rsvd2 = 0"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_header", "hop_metadata_len"]
            },
            {
              "type" : "runtime_data",
              "value" : 1
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_source.p4",
            "line" : 45,
            "column" : 8,
            "source_fragment" : "hdr.int_header.hop_metadata_len = hop_metadata_len"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_header", "remaining_hop_cnt"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_source.p4",
            "line" : 46,
            "column" : 8,
            "source_fragment" : "hdr.int_header.remaining_hop_cnt = max_hop"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_header", "instruction_mask"]
            },
            {
              "type" : "runtime_data",
              "value" : 3
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_source.p4",
            "line" : 47,
            "column" : 8,
            "source_fragment" : "hdr.int_header.instruction_mask = ins_mask"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_shim", "dscp"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["ipv4", "dscp"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["int_shim", "dscp"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "d2b",
                      "left" : null,
                      "right" : {
                        "type" : "field",
                        "value" : ["ipv4", "$valid$"]
                      }
                    }
                  }
                }
              }
            }
          ]
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ipv4", "dscp"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x20"
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["ipv4", "dscp"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "d2b",
                      "left" : null,
                      "right" : {
                        "type" : "field",
                        "value" : ["ipv4", "$valid$"]
                      }
                    }
                  }
                }
              }
            }
          ]
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ipv4", "totalLen"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "+",
                          "left" : {
                            "type" : "field",
                            "value" : ["ipv4", "totalLen"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x000c"
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["ipv4", "totalLen"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "d2b",
                      "left" : null,
                      "right" : {
                        "type" : "field",
                        "value" : ["ipv4", "$valid$"]
                      }
                    }
                  }
                }
              }
            }
          ]
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_shim", "dscp"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["ipv4", "dscp"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["ipv6", "traffic_class"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "d2b",
                      "left" : null,
                      "right" : {
                        "type" : "field",
                        "value" : ["ipv4", "$valid$"]
                      }
                    }
                  }
                }
              }
            }
          ]
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ipv6", "traffic_class"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["ipv6", "traffic_class"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0x20"
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "d2b",
                      "left" : null,
                      "right" : {
                        "type" : "field",
                        "value" : ["ipv4", "$valid$"]
                      }
                    }
                  }
                }
              }
            }
          ]
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ipv6", "payload_len"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["ipv6", "payload_len"]
                  },
                  "right" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "+",
                          "left" : {
                            "type" : "field",
                            "value" : ["ipv6", "payload_len"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x000c"
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffff"
                      }
                    }
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "d2b",
                      "left" : null,
                      "right" : {
                        "type" : "field",
                        "value" : ["ipv4", "$valid$"]
                      }
                    }
                  }
                }
              }
            }
          ]
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["udp", "len"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["udp", "len"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x000c"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_source.p4",
            "line" : 60,
            "column" : 8,
            "source_fragment" : "hdr.udp.len = hdr.udp.len + INT_ALL_HEADER_LEN_BYTES"
          }
        }
      ]
    },
    {
      "name" : "ingress.Int_source.activate_source",
      "id" : 16,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_source0"]
            },
            {
              "type" : "hexstr",
              "value" : "0x01"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_source.p4",
            "line" : 95,
            "column" : 33,
            "source_fragment" : "= 1; ..."
          }
        }
      ]
    },
    {
      "name" : "ingress.SRv6.srv6_end",
      "id" : 17,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["srv6h", "segment_left"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "+",
                          "left" : {
                            "type" : "field",
                            "value" : ["srv6h", "segment_left"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xff"
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["srv6h", "segment_left"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "d2b",
                      "left" : null,
                      "right" : {
                        "type" : "field",
                        "value" : ["srv6h", "$valid$"]
                      }
                    }
                  }
                }
              }
            }
          ]
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ipv6", "dst_addr"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "userMetadata._next_srv6_sid22"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["ipv6", "dst_addr"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "d2b",
                      "left" : null,
                      "right" : {
                        "type" : "field",
                        "value" : ["srv6h", "$valid$"]
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      ]
    },
    {
      "name" : "ingress.SRv6.srv6_t_insert_2",
      "id" : 18,
      "runtime_data" : [
        {
          "name" : "s1",
          "bitwidth" : 128
        },
        {
          "name" : "s2",
          "bitwidth" : 128
        }
      ],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ipv6", "dst_addr"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/srv6.p4",
            "line" : 56,
            "column" : 8,
            "source_fragment" : "hdr.ipv6.dst_addr = s1"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ipv6", "payload_len"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["ipv6", "payload_len"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x0028"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/srv6.p4",
            "line" : 57,
            "column" : 8,
            "source_fragment" : "hdr.ipv6.payload_len = hdr.ipv6.payload_len + 40"
          }
        },
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "srv6h"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/srv6.p4",
            "line" : 39,
            "column" : 8,
            "source_fragment" : "hdr.srv6h.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["srv6h", "next_hdr"]
            },
            {
              "type" : "field",
              "value" : ["ipv6", "next_hdr"]
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/srv6.p4",
            "line" : 40,
            "column" : 8,
            "source_fragment" : "hdr.srv6h.next_hdr = hdr.ipv6.next_hdr"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["srv6h", "hdr_ext_len"]
            },
            {
              "type" : "hexstr",
              "value" : "0x04"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/srv6.p4",
            "line" : 41,
            "column" : 8,
            "source_fragment" : "hdr.srv6h.hdr_ext_len = num_segments * 2"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["srv6h", "routing_type"]
            },
            {
              "type" : "hexstr",
              "value" : "0x04"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/srv6.p4",
            "line" : 42,
            "column" : 8,
            "source_fragment" : "hdr.srv6h.routing_type = 4"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["srv6h", "segment_left"]
            },
            {
              "type" : "hexstr",
              "value" : "0x01"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/srv6.p4",
            "line" : 43,
            "column" : 8,
            "source_fragment" : "hdr.srv6h.segment_left = num_segments - 1"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["srv6h", "last_entry"]
            },
            {
              "type" : "hexstr",
              "value" : "0x01"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/srv6.p4",
            "line" : 44,
            "column" : 8,
            "source_fragment" : "hdr.srv6h.last_entry = num_segments - 1"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["srv6h", "flags"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/srv6.p4",
            "line" : 45,
            "column" : 8,
            "source_fragment" : "hdr.srv6h.flags = 0"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["srv6h", "tag"]
            },
            {
              "type" : "hexstr",
              "value" : "0x0000"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/srv6.p4",
            "line" : 46,
            "column" : 8,
            "source_fragment" : "hdr.srv6h.tag = 0"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ipv6", "next_hdr"]
            },
            {
              "type" : "hexstr",
              "value" : "0x2b"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/headers.p4",
            "line" : 62,
            "column" : 29,
            "source_fragment" : "43; ..."
          }
        },
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "srv6_list[0]"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/srv6.p4",
            "line" : 59,
            "column" : 8,
            "source_fragment" : "hdr.srv6_list[0].setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["srv6_list[0]", "segment_id"]
            },
            {
              "type" : "runtime_data",
              "value" : 1
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/srv6.p4",
            "line" : 60,
            "column" : 8,
            "source_fragment" : "hdr.srv6_list[0].segment_id = s2"
          }
        },
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "srv6_list[1]"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/srv6.p4",
            "line" : 61,
            "column" : 8,
            "source_fragment" : "hdr.srv6_list[1].setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["srv6_list[1]", "segment_id"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/srv6.p4",
            "line" : 62,
            "column" : 8,
            "source_fragment" : "hdr.srv6_list[1].segment_id = s1"
          }
        }
      ]
    },
    {
      "name" : "ingress.SRv6.srv6_t_insert_3",
      "id" : 19,
      "runtime_data" : [
        {
          "name" : "s1",
          "bitwidth" : 128
        },
        {
          "name" : "s2",
          "bitwidth" : 128
        },
        {
          "name" : "s3",
          "bitwidth" : 128
        }
      ],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ipv6", "dst_addr"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/srv6.p4",
            "line" : 66,
            "column" : 8,
            "source_fragment" : "hdr.ipv6.dst_addr = s1"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ipv6", "payload_len"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["ipv6", "payload_len"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x0038"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/srv6.p4",
            "line" : 67,
            "column" : 8,
            "source_fragment" : "hdr.ipv6.payload_len = hdr.ipv6.payload_len + 56"
          }
        },
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "srv6h"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/srv6.p4",
            "line" : 39,
            "column" : 8,
            "source_fragment" : "hdr.srv6h.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["srv6h", "next_hdr"]
            },
            {
              "type" : "field",
              "value" : ["ipv6", "next_hdr"]
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/srv6.p4",
            "line" : 40,
            "column" : 8,
            "source_fragment" : "hdr.srv6h.next_hdr = hdr.ipv6.next_hdr"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["srv6h", "hdr_ext_len"]
            },
            {
              "type" : "hexstr",
              "value" : "0x06"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/srv6.p4",
            "line" : 41,
            "column" : 8,
            "source_fragment" : "hdr.srv6h.hdr_ext_len = num_segments * 2"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["srv6h", "routing_type"]
            },
            {
              "type" : "hexstr",
              "value" : "0x04"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/srv6.p4",
            "line" : 42,
            "column" : 8,
            "source_fragment" : "hdr.srv6h.routing_type = 4"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["srv6h", "segment_left"]
            },
            {
              "type" : "hexstr",
              "value" : "0x02"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/srv6.p4",
            "line" : 43,
            "column" : 8,
            "source_fragment" : "hdr.srv6h.segment_left = num_segments - 1"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["srv6h", "last_entry"]
            },
            {
              "type" : "hexstr",
              "value" : "0x02"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/srv6.p4",
            "line" : 44,
            "column" : 8,
            "source_fragment" : "hdr.srv6h.last_entry = num_segments - 1"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["srv6h", "flags"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/srv6.p4",
            "line" : 45,
            "column" : 8,
            "source_fragment" : "hdr.srv6h.flags = 0"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["srv6h", "tag"]
            },
            {
              "type" : "hexstr",
              "value" : "0x0000"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/srv6.p4",
            "line" : 46,
            "column" : 8,
            "source_fragment" : "hdr.srv6h.tag = 0"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ipv6", "next_hdr"]
            },
            {
              "type" : "hexstr",
              "value" : "0x2b"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/headers.p4",
            "line" : 62,
            "column" : 29,
            "source_fragment" : "43; ..."
          }
        },
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "srv6_list[0]"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/srv6.p4",
            "line" : 69,
            "column" : 8,
            "source_fragment" : "hdr.srv6_list[0].setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["srv6_list[0]", "segment_id"]
            },
            {
              "type" : "runtime_data",
              "value" : 2
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/srv6.p4",
            "line" : 70,
            "column" : 8,
            "source_fragment" : "hdr.srv6_list[0].segment_id = s3"
          }
        },
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "srv6_list[1]"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/srv6.p4",
            "line" : 71,
            "column" : 8,
            "source_fragment" : "hdr.srv6_list[1].setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["srv6_list[1]", "segment_id"]
            },
            {
              "type" : "runtime_data",
              "value" : 1
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/srv6.p4",
            "line" : 72,
            "column" : 8,
            "source_fragment" : "hdr.srv6_list[1].segment_id = s2"
          }
        },
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "srv6_list[2]"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/srv6.p4",
            "line" : 73,
            "column" : 8,
            "source_fragment" : "hdr.srv6_list[2].setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["srv6_list[2]", "segment_id"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/srv6.p4",
            "line" : 74,
            "column" : 8,
            "source_fragment" : "hdr.srv6_list[2].segment_id = s1"
          }
        }
      ]
    },
    {
      "name" : "ingress.SRv6.srv6_pop",
      "id" : 20,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ipv6", "next_hdr"]
            },
            {
              "type" : "field",
              "value" : ["srv6h", "next_hdr"]
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/srv6.p4",
            "line" : 91,
            "column" : 6,
            "source_fragment" : "hdr.ipv6.next_hdr = hdr.srv6h.next_hdr"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ipv6", "payload_len"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "-",
                      "left" : {
                        "type" : "field",
                        "value" : ["ipv6", "payload_len"]
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "&",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "+",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "&",
                                  "left" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "<<",
                                      "left" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "&",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "+",
                                              "left" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "&",
                                                  "left" : {
                                                    "type" : "field",
                                                    "value" : ["srv6h", "last_entry"]
                                                  },
                                                  "right" : {
                                                    "type" : "hexstr",
                                                    "value" : "0xffff"
                                                  }
                                                }
                                              },
                                              "right" : {
                                                "type" : "hexstr",
                                                "value" : "0x0001"
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0xffff"
                                          }
                                        }
                                      },
                                      "right" : {
                                        "type" : "hexstr",
                                        "value" : "0x4"
                                      }
                                    }
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0xffff"
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x0008"
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xffff"
                          }
                        }
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/srv6.p4",
            "line" : 96,
            "column" : 6,
            "source_fragment" : "hdr.ipv6.payload_len = hdr.ipv6.payload_len - srv6h_size"
          }
        },
        {
          "op" : "remove_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "srv6h"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/srv6.p4",
            "line" : 98,
            "column" : 6,
            "source_fragment" : "hdr.srv6h.setInvalid()"
          }
        },
        {
          "op" : "remove_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "srv6_list[0]"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/srv6.p4",
            "line" : 100,
            "column" : 6,
            "source_fragment" : "hdr.srv6_list[0].setInvalid()"
          }
        },
        {
          "op" : "remove_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "srv6_list[1]"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/srv6.p4",
            "line" : 101,
            "column" : 6,
            "source_fragment" : "hdr.srv6_list[1].setInvalid()"
          }
        },
        {
          "op" : "remove_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "srv6_list[2]"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/srv6.p4",
            "line" : 102,
            "column" : 6,
            "source_fragment" : "hdr.srv6_list[2].setInvalid()"
          }
        }
      ]
    },
    {
      "name" : "ingress.Int_sink_config.configure_sink",
      "id" : 21,
      "runtime_data" : [
        {
          "name" : "sink_reporting_port",
          "bitwidth" : 16
        }
      ],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_remove_int5"]
            },
            {
              "type" : "hexstr",
              "value" : "0x01"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_sink.p4",
            "line" : 27,
            "column" : 37,
            "source_fragment" : "= 1; // indicate that INT headers must be removed in egress ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_sink_reporting_port6"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_sink.p4",
            "line" : 28,
            "column" : 46,
            "source_fragment" : "= (bit<16>)sink_reporting_port; ..."
          }
        },
        {
          "op" : "log_msg",
          "parameters" : [
            {
              "type" : "string",
              "value" : "packet ready to be cloned"
            },
            {
              "type" : "parameters_vector",
              "value" : {
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_sink.p4",
            "line" : 29,
            "column" : 8,
            "source_fragment" : "        log_msg(\\\"packet ready to be cloned\\\");"
          }
        },
        {
          "op" : "clone_ingress_pkt_to_egress",
          "parameters" : [
            {
              "type" : "hexstr",
              "value" : "0x00000001"
            },
            {
              "type" : "hexstr",
              "value" : "0x1"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_sink.p4",
            "line" : 30,
            "column" : 8,
            "source_fragment" : "clone3<metadata>(CloneType.I2E, INT_REPORT_MIRROR_SESSION_ID, meta)"
          }
        }
      ]
    },
    {
      "name" : "ingress.Flowlet.read_flowlet_registers",
      "id" : 22,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "Flowlet_ip_src"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "field",
                        "value" : ["ipv4", "srcAddr"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffffffffffffffffffffffffffffffff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "Flowlet_ip_src"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "d2b",
                      "left" : null,
                      "right" : {
                        "type" : "field",
                        "value" : ["ipv4", "$valid$"]
                      }
                    }
                  }
                }
              }
            }
          ]
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "Flowlet_ip_dst"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "field",
                        "value" : ["ipv4", "dstAddr"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffffffffffffffffffffffffffffffff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "Flowlet_ip_dst"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "d2b",
                      "left" : null,
                      "right" : {
                        "type" : "field",
                        "value" : ["ipv4", "$valid$"]
                      }
                    }
                  }
                }
              }
            }
          ]
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "Flowlet_ip_src"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "field",
                        "value" : ["ipv4", "srcAddr"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffffffffffffffffffffffffffffffff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["ipv6", "src_addr"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "d2b",
                      "left" : null,
                      "right" : {
                        "type" : "field",
                        "value" : ["ipv4", "$valid$"]
                      }
                    }
                  }
                }
              }
            }
          ]
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "Flowlet_ip_dst"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "field",
                        "value" : ["ipv4", "dstAddr"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffffffffffffffffffffffffffffffff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["ipv6", "dst_addr"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "d2b",
                      "left" : null,
                      "right" : {
                        "type" : "field",
                        "value" : ["ipv4", "$valid$"]
                      }
                    }
                  }
                }
              }
            }
          ]
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_2"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "field",
                        "value" : ["ipv4", "srcAddr"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffffffffffffffffffffffffffffffff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["ipv6", "src_addr"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "d2b",
                      "left" : null,
                      "right" : {
                        "type" : "field",
                        "value" : ["ipv4", "$valid$"]
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/flowlet.p4",
            "line" : 20,
            "column" : 6,
            "source_fragment" : "ip_src"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_3"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "field",
                        "value" : ["ipv4", "dstAddr"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffffffffffffffffffffffffffffffff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["ipv6", "dst_addr"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "d2b",
                      "left" : null,
                      "right" : {
                        "type" : "field",
                        "value" : ["ipv4", "$valid$"]
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/flowlet.p4",
            "line" : 21,
            "column" : 12,
            "source_fragment" : "ip_dst"
          }
        },
        {
          "op" : "modify_field_with_hash_based_offset",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._flowlet_register_index27"]
            },
            {
              "type" : "hexstr",
              "value" : "0x0000"
            },
            {
              "type" : "calculation",
              "value" : "calc"
            },
            {
              "type" : "hexstr",
              "value" : "0x2000"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/flowlet.p4",
            "line" : 28,
            "column" : 8,
            "source_fragment" : "hash(meta.flowlet_register_index, HashAlgorithm.crc16, ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_4"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "userMetadata._flowlet_register_index27"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/flowlet.p4",
            "line" : 34,
            "column" : 57,
            "source_fragment" : "(bit<32>)meta.flowlet_register_index"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._flowlet_last_stamp25"]
            },
            {
              "type" : "register_array",
              "value" : "ingress.Flowlet.flowlet_time_stamp"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_4"]
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/flowlet.p4",
            "line" : 34,
            "column" : 8,
            "source_fragment" : "flowlet_time_stamp.read(meta.flowlet_last_stamp, (bit<32>)meta.flowlet_register_index)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_5"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "userMetadata._flowlet_register_index27"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/flowlet.p4",
            "line" : 40,
            "column" : 33,
            "source_fragment" : "(bit<32>)meta.flowlet_register_index"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "ingress.Flowlet.flowlet_time_stamp"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_5"]
            },
            {
              "type" : "field",
              "value" : ["standard_metadata", "ingress_global_timestamp"]
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/flowlet.p4",
            "line" : 40,
            "column" : 8,
            "source_fragment" : "flowlet_time_stamp.write((bit<32>)meta.flowlet_register_index, standard_metadata.ingress_global_timestamp)"
          }
        }
      ]
    },
    {
      "name" : "ingress.Flowlet.update_path",
      "id" : 23,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._update_path29"]
            },
            {
              "type" : "hexstr",
              "value" : "0x01"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/flowlet.p4",
            "line" : 44,
            "column" : 24,
            "source_fragment" : "= 1; ..."
          }
        }
      ]
    },
    {
      "name" : "ingress.ipv4_forward",
      "id" : 24,
      "runtime_data" : [
        {
          "name" : "dstAddr",
          "bitwidth" : 48
        },
        {
          "name" : "port",
          "bitwidth" : 9
        }
      ],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ethernet", "srcAddr"]
            },
            {
              "type" : "field",
              "value" : ["ethernet", "dstAddr"]
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/int.p4",
            "line" : 39,
            "column" : 8,
            "source_fragment" : "hdr.ethernet.srcAddr = hdr.ethernet.dstAddr"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ethernet", "dstAddr"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/int.p4",
            "line" : 40,
            "column" : 8,
            "source_fragment" : "hdr.ethernet.dstAddr = dstAddr"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "runtime_data",
              "value" : 1
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/int.p4",
            "line" : 42,
            "column" : 8,
            "source_fragment" : "ig_intr_md.egress_spec = port"
          }
        }
      ]
    },
    {
      "name" : "ingress.drop",
      "id" : 25,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "mark_to_drop",
          "parameters" : [
            {
              "type" : "header",
              "value" : "standard_metadata"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/int.p4",
            "line" : 57,
            "column" : 8,
            "source_fragment" : "mark_to_drop(ig_intr_md)"
          }
        }
      ]
    },
    {
      "name" : "ingress.drop",
      "id" : 26,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "mark_to_drop",
          "parameters" : [
            {
              "type" : "header",
              "value" : "standard_metadata"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/int.p4",
            "line" : 57,
            "column" : 8,
            "source_fragment" : "mark_to_drop(ig_intr_md)"
          }
        }
      ]
    },
    {
      "name" : "ingress.drop",
      "id" : 27,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "mark_to_drop",
          "parameters" : [
            {
              "type" : "header",
              "value" : "standard_metadata"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/int.p4",
            "line" : 57,
            "column" : 8,
            "source_fragment" : "mark_to_drop(ig_intr_md)"
          }
        }
      ]
    },
    {
      "name" : "ingress.drop",
      "id" : 28,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "mark_to_drop",
          "parameters" : [
            {
              "type" : "header",
              "value" : "standard_metadata"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/int.p4",
            "line" : 57,
            "column" : 8,
            "source_fragment" : "mark_to_drop(ig_intr_md)"
          }
        }
      ]
    },
    {
      "name" : "ingress.set_egress_port",
      "id" : 29,
      "runtime_data" : [
        {
          "name" : "port_num",
          "bitwidth" : 9
        }
      ],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/int.p4",
            "line" : 89,
            "column" : 8,
            "source_fragment" : "ig_intr_md.egress_spec = port_num"
          }
        }
      ]
    },
    {
      "name" : "ingress.set_multicast_group",
      "id" : 30,
      "runtime_data" : [
        {
          "name" : "gid",
          "bitwidth" : 16
        }
      ],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ipv6", "hop_limit"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "+",
                          "left" : {
                            "type" : "field",
                            "value" : ["ipv6", "hop_limit"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xff"
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["ipv6", "hop_limit"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "d2b",
                      "left" : null,
                      "right" : {
                        "type" : "field",
                        "value" : ["ipv6", "$valid$"]
                      }
                    }
                  }
                }
              }
            }
          ]
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "mcast_grp"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/int.p4",
            "line" : 118,
            "column" : 8,
            "source_fragment" : "ig_intr_md.mcast_grp = gid"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._is_multicast21"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "b2d",
                  "left" : null,
                  "right" : {
                    "type" : "bool",
                    "value" : true
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/int.p4",
            "line" : 119,
            "column" : 8,
            "source_fragment" : "meta.is_multicast = true"
          }
        }
      ]
    },
    {
      "name" : "ingress.ndp_ns_to_na",
      "id" : 31,
      "runtime_data" : [
        {
          "name" : "target_mac",
          "bitwidth" : 48
        }
      ],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ethernet", "srcAddr"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/int.p4",
            "line" : 139,
            "column" : 8,
            "source_fragment" : "hdr.ethernet.srcAddr = target_mac"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ethernet", "dstAddr"]
            },
            {
              "type" : "hexstr",
              "value" : "0x333300000001"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/headers.p4",
            "line" : 65,
            "column" : 33,
            "source_fragment" : "0x33_33_00_00_00_01; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "host_ipv6_tmp_0"]
            },
            {
              "type" : "field",
              "value" : ["ipv6", "src_addr"]
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/int.p4",
            "line" : 141,
            "column" : 8,
            "source_fragment" : "ipv6_addr_t host_ipv6_tmp = hdr.ipv6.src_addr;"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ipv6", "src_addr"]
            },
            {
              "type" : "field",
              "value" : ["ndp", "target_ipv6_addr"]
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/int.p4",
            "line" : 142,
            "column" : 8,
            "source_fragment" : "hdr.ipv6.src_addr = hdr.ndp.target_ipv6_addr"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ipv6", "dst_addr"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "host_ipv6_tmp_0"]
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/int.p4",
            "line" : 143,
            "column" : 8,
            "source_fragment" : "hdr.ipv6.dst_addr = host_ipv6_tmp"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ipv6", "next_hdr"]
            },
            {
              "type" : "hexstr",
              "value" : "0x3a"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/headers.p4",
            "line" : 63,
            "column" : 31,
            "source_fragment" : "58; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["icmpv6", "type"]
            },
            {
              "type" : "hexstr",
              "value" : "0x88"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/headers.p4",
            "line" : 68,
            "column" : 29,
            "source_fragment" : "136; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ndp", "flags"]
            },
            {
              "type" : "hexstr",
              "value" : "0xa0000000"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/int.p4",
            "line" : 146,
            "column" : 8,
            "source_fragment" : "hdr.ndp.flags = NDP_FLAG_ROUTER | NDP_FLAG_OVERRIDE"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ndp", "type"]
            },
            {
              "type" : "hexstr",
              "value" : "0x02"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/headers.p4",
            "line" : 70,
            "column" : 38,
            "source_fragment" : "2; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ndp", "length"]
            },
            {
              "type" : "hexstr",
              "value" : "0x01"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/int.p4",
            "line" : 148,
            "column" : 8,
            "source_fragment" : "hdr.ndp.length = 1"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ndp", "target_mac_addr"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/int.p4",
            "line" : 149,
            "column" : 8,
            "source_fragment" : "hdr.ndp.target_mac_addr = target_mac"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "field",
              "value" : ["standard_metadata", "ingress_port"]
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/int.p4",
            "line" : 150,
            "column" : 8,
            "source_fragment" : "ig_intr_md.egress_spec = ig_intr_md.ingress_port"
          }
        }
      ]
    },
    {
      "name" : "ingress.ecmp_group",
      "id" : 32,
      "runtime_data" : [
        {
          "name" : "ecmp_group_id",
          "bitwidth" : 14
        },
        {
          "name" : "num_nhops",
          "bitwidth" : 16
        }
      ],
      "primitives" : [
        {
          "op" : "modify_field_with_hash_based_offset",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._ecmp_metadata_ecmp_hash18"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00"
            },
            {
              "type" : "calculation",
              "value" : "calc_0"
            },
            {
              "type" : "runtime_data",
              "value" : 1
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/int.p4",
            "line" : 179,
            "column" : 8,
            "source_fragment" : "hash(meta.ecmp_metadata.ecmp_hash, ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._ecmp_metadata_ecmp_group_id19"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/int.p4",
            "line" : 189,
            "column" : 8,
            "source_fragment" : "meta.ecmp_metadata.ecmp_group_id = ecmp_group_id"
          }
        }
      ]
    },
    {
      "name" : "ingress.ipv6_forward",
      "id" : 33,
      "runtime_data" : [
        {
          "name" : "dstAddr",
          "bitwidth" : 48
        },
        {
          "name" : "port",
          "bitwidth" : 9
        }
      ],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ethernet", "srcAddr"]
            },
            {
              "type" : "field",
              "value" : ["ethernet", "dstAddr"]
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/int.p4",
            "line" : 193,
            "column" : 8,
            "source_fragment" : "hdr.ethernet.srcAddr = hdr.ethernet.dstAddr"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ethernet", "dstAddr"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/int.p4",
            "line" : 194,
            "column" : 8,
            "source_fragment" : "hdr.ethernet.dstAddr = dstAddr"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "runtime_data",
              "value" : 1
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/int.p4",
            "line" : 196,
            "column" : 8,
            "source_fragment" : "ig_intr_md.egress_spec = port"
          }
        }
      ]
    },
    {
      "name" : "ingress.ipv6_forward",
      "id" : 34,
      "runtime_data" : [
        {
          "name" : "dstAddr",
          "bitwidth" : 48
        },
        {
          "name" : "port",
          "bitwidth" : 9
        }
      ],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ethernet", "srcAddr"]
            },
            {
              "type" : "field",
              "value" : ["ethernet", "dstAddr"]
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/int.p4",
            "line" : 193,
            "column" : 8,
            "source_fragment" : "hdr.ethernet.srcAddr = hdr.ethernet.dstAddr"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ethernet", "dstAddr"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/int.p4",
            "line" : 194,
            "column" : 8,
            "source_fragment" : "hdr.ethernet.dstAddr = dstAddr"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "runtime_data",
              "value" : 1
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/int.p4",
            "line" : 196,
            "column" : 8,
            "source_fragment" : "ig_intr_md.egress_spec = port"
          }
        }
      ]
    },
    {
      "name" : "ingress.send_to_cpu",
      "id" : 35,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "hexstr",
              "value" : "0x0000"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/int.p4",
            "line" : 235,
            "column" : 8,
            "source_fragment" : "ig_intr_md.egress_spec = 0"
          }
        }
      ]
    },
    {
      "name" : "ingress.clone_to_cpu",
      "id" : 36,
      "runtime_data" : [],
      "primitives" : []
    },
    {
      "name" : "int271",
      "id" : 37,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "field",
              "value" : ["cpu_out", "egress_port"]
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/int.p4",
            "line" : 271,
            "column" : 12,
            "source_fragment" : "ig_intr_md.egress_spec = hdr.cpu_out.egress_port"
          }
        },
        {
          "op" : "remove_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "cpu_out"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/int.p4",
            "line" : 272,
            "column" : 12,
            "source_fragment" : "hdr.cpu_out.setInvalid()"
          }
        },
        {
          "op" : "exit",
          "parameters" : [],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/int.p4",
            "line" : 273,
            "column" : 12,
            "source_fragment" : "exit"
          }
        }
      ]
    },
    {
      "name" : "int280",
      "id" : 38,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "do_l3_l2_0"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "b2d",
                  "left" : null,
                  "right" : {
                    "type" : "bool",
                    "value" : false
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/int.p4",
            "line" : 280,
            "column" : 16,
            "source_fragment" : "do_l3_l2 = false"
          }
        }
      ]
    },
    {
      "name" : "int276",
      "id" : 39,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "do_l3_l2_0"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "b2d",
                  "left" : null,
                  "right" : {
                    "type" : "bool",
                    "value" : true
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/int.p4",
            "line" : 276,
            "column" : 8,
            "source_fragment" : "bool do_l3_l2 = true;"
          }
        }
      ]
    },
    {
      "name" : "int_source115",
      "id" : 40,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "Int_source_hasReturned"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "b2d",
                  "left" : null,
                  "right" : {
                    "type" : "bool",
                    "value" : false
                  }
                }
              }
            }
          ]
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_ingress_tstamp7"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["standard_metadata", "ingress_global_timestamp"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffffffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_source.p4",
            "line" : 115,
            "column" : 41,
            "source_fragment" : "= (bit<64>) standard_metadata.ingress_global_timestamp; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_ingress_port8"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["standard_metadata", "ingress_port"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_source.p4",
            "line" : 116,
            "column" : 39,
            "source_fragment" : "= (bit<16>)standard_metadata.ingress_port; ..."
          }
        }
      ]
    },
    {
      "name" : "int_source125",
      "id" : 41,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_source0"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_source.p4",
            "line" : 125,
            "column" : 41,
            "source_fragment" : "= 0; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "Int_source_hasReturned"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "b2d",
                  "left" : null,
                  "right" : {
                    "type" : "bool",
                    "value" : true
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_source.p4",
            "line" : 126,
            "column" : 16,
            "source_fragment" : "return"
          }
        }
      ]
    },
    {
      "name" : "int_source121",
      "id" : 42,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "modify_field_rng_uniform",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "Int_source_res"]
            },
            {
              "type" : "hexstr",
              "value" : "0x01"
            },
            {
              "type" : "hexstr",
              "value" : "0x01"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_source.p4",
            "line" : 121,
            "column" : 8,
            "source_fragment" : "random<bit<8>>(res, 1, 1)"
          }
        }
      ]
    },
    {
      "name" : "int_source135",
      "id" : 43,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_source0"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_source.p4",
            "line" : 135,
            "column" : 41,
            "source_fragment" : "= 0; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "Int_source_hasReturned"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "b2d",
                  "left" : null,
                  "right" : {
                    "type" : "bool",
                    "value" : true
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_source.p4",
            "line" : 136,
            "column" : 16,
            "source_fragment" : "return"
          }
        }
      ]
    },
    {
      "name" : "int_source133",
      "id" : 44,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "log_msg",
          "parameters" : [
            {
              "type" : "string",
              "value" : "random res: {}"
            },
            {
              "type" : "parameters_vector",
              "value" : [
                {
                  "type" : "field",
                  "value" : ["scalars", "Int_source_res"]
                }
              ]
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_source.p4",
            "line" : 133,
            "column" : 12,
            "source_fragment" : "            log_msg(\\\"random res: {}\\\", {res});"
          }
        }
      ]
    },
    {
      "name" : "int310",
      "id" : 45,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "mark_to_drop",
          "parameters" : [
            {
              "type" : "header",
              "value" : "standard_metadata"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/int.p4",
            "line" : 310,
            "column" : 66,
            "source_fragment" : "mark_to_drop(ig_intr_md)"
          }
        }
      ]
    },
    {
      "name" : "flowlet60",
      "id" : 46,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "Flowlet_hasReturned"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "b2d",
                  "left" : null,
                  "right" : {
                    "type" : "bool",
                    "value" : true
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/flowlet.p4",
            "line" : 60,
            "column" : 48,
            "source_fragment" : "return"
          }
        }
      ]
    },
    {
      "name" : "act",
      "id" : 47,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "Flowlet_hasReturned"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "b2d",
                  "left" : null,
                  "right" : {
                    "type" : "bool",
                    "value" : false
                  }
                }
              }
            }
          ]
        }
      ]
    },
    {
      "name" : "flowlet62",
      "id" : 48,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._update_path29"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/flowlet.p4",
            "line" : 62,
            "column" : 25,
            "source_fragment" : "= 0; ..."
          }
        }
      ]
    },
    {
      "name" : "flowlet66",
      "id" : 49,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._flowlet_time_diff26"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "-",
                      "left" : {
                        "type" : "field",
                        "value" : ["standard_metadata", "ingress_global_timestamp"]
                      },
                      "right" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata._flowlet_last_stamp25"]
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/flowlet.p4",
            "line" : 66,
            "column" : 35,
            "source_fragment" : "= standard_metadata.ingress_global_timestamp - meta.flowlet_last_stamp; ..."
          }
        },
        {
          "op" : "log_msg",
          "parameters" : [
            {
              "type" : "string",
              "value" : "last time: {}"
            },
            {
              "type" : "parameters_vector",
              "value" : [
                {
                  "type" : "field",
                  "value" : ["scalars", "userMetadata._flowlet_last_stamp25"]
                }
              ]
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/flowlet.p4",
            "line" : 68,
            "column" : 12,
            "source_fragment" : "            log_msg(\\\"last time: {}\\\", {meta.flowlet_last_stamp});"
          }
        }
      ]
    },
    {
      "name" : "NoAction",
      "id" : 50,
      "runtime_data" : [],
      "primitives" : []
    },
    {
      "name" : "NoAction",
      "id" : 51,
      "runtime_data" : [],
      "primitives" : []
    },
    {
      "name" : "NoAction",
      "id" : 52,
      "runtime_data" : [],
      "primitives" : []
    },
    {
      "name" : "NoAction",
      "id" : 53,
      "runtime_data" : [],
      "primitives" : []
    },
    {
      "name" : "egress.Int_transit.configure_transit",
      "id" : 54,
      "runtime_data" : [
        {
          "name" : "switch_id",
          "bitwidth" : 32
        },
        {
          "name" : "l3_mtu",
          "bitwidth" : 16
        }
      ],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_switch_id2"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 29,
            "column" : 40,
            "source_fragment" : "= switch_id; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_insert_byte_cnt3"]
            },
            {
              "type" : "hexstr",
              "value" : "0x0000"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 30,
            "column" : 46,
            "source_fragment" : "= 0; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_int_hdr_word_len4"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 31,
            "column" : 47,
            "source_fragment" : "= 0; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._layer34_metadata_l3_mtu16"]
            },
            {
              "type" : "runtime_data",
              "value" : 1
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 32,
            "column" : 41,
            "source_fragment" : "= l3_mtu; ..."
          }
        }
      ]
    },
    {
      "name" : "egress.Int_transit.int_set_header_0003_i0",
      "id" : 55,
      "runtime_data" : [],
      "primitives" : []
    },
    {
      "name" : "egress.Int_transit.int_set_header_0003_i1",
      "id" : 56,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "int_q_occupancy"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 62,
            "column" : 12,
            "source_fragment" : "hdr.int_q_occupancy.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_q_occupancy", "q_id"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 63,
            "column" : 12,
            "source_fragment" : "hdr.int_q_occupancy.q_id = 0"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_q_occupancy", "q_occupancy"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["standard_metadata", "enq_qdepth"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 64,
            "column" : 12,
            "source_fragment" : "hdr.int_q_occupancy.q_occupancy = (bit<24>)standard_metadata.enq_qdepth"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_int_hdr_word_len4"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata._int_metadata_int_hdr_word_len4"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x01"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 89,
            "column" : 47,
            "source_fragment" : "= meta.int_metadata.int_hdr_word_len + 1; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_insert_byte_cnt3"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata._int_metadata_insert_byte_cnt3"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x0004"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 90,
            "column" : 46,
            "source_fragment" : "= meta.int_metadata.insert_byte_cnt + 4; ..."
          }
        }
      ]
    },
    {
      "name" : "egress.Int_transit.int_set_header_0003_i2",
      "id" : 57,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "int_hop_latency"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 54,
            "column" : 12,
            "source_fragment" : "hdr.int_hop_latency.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_hop_latency", "hop_latency"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "-",
                          "left" : {
                            "type" : "field",
                            "value" : ["standard_metadata", "egress_global_timestamp"]
                          },
                          "right" : {
                            "type" : "field",
                            "value" : ["standard_metadata", "ingress_global_timestamp"]
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffffffffffff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 55,
            "column" : 12,
            "source_fragment" : "hdr.int_hop_latency.hop_latency = (bit<32>)(standard_metadata.egress_global_timestamp - standard_metadata.ingress_global_timestamp)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_hop_latency", "hop_latency"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "-",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "&",
                                  "left" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "-",
                                      "left" : {
                                        "type" : "field",
                                        "value" : ["standard_metadata", "egress_global_timestamp"]
                                      },
                                      "right" : {
                                        "type" : "field",
                                        "value" : ["standard_metadata", "ingress_global_timestamp"]
                                      }
                                    }
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0xffffffffffff"
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffffffff"
                              }
                            }
                          },
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "userMetadata._int_metadata_ingress_tstamp7"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffffffff"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffffffff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "&",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "-",
                              "left" : {
                                "type" : "field",
                                "value" : ["standard_metadata", "egress_global_timestamp"]
                              },
                              "right" : {
                                "type" : "field",
                                "value" : ["standard_metadata", "ingress_global_timestamp"]
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xffffffffffff"
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffffffff"
                      }
                    }
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["standard_metadata", "instance_type"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00000001"
                      }
                    }
                  }
                }
              }
            }
          ]
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_6"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "-",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "&",
                                  "left" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "-",
                                      "left" : {
                                        "type" : "field",
                                        "value" : ["standard_metadata", "egress_global_timestamp"]
                                      },
                                      "right" : {
                                        "type" : "field",
                                        "value" : ["standard_metadata", "ingress_global_timestamp"]
                                      }
                                    }
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0xffffffffffff"
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffffffff"
                              }
                            }
                          },
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "userMetadata._int_metadata_ingress_tstamp7"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffffffff"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffffffff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "&",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "-",
                              "left" : {
                                "type" : "field",
                                "value" : ["standard_metadata", "egress_global_timestamp"]
                              },
                              "right" : {
                                "type" : "field",
                                "value" : ["standard_metadata", "ingress_global_timestamp"]
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xffffffffffff"
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffffffff"
                      }
                    }
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["standard_metadata", "instance_type"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00000001"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 57,
            "column" : 16,
            "source_fragment" : "hdr.int_hop_latency.hop_latency"
          }
        },
        {
          "op" : "log_msg",
          "parameters" : [
            {
              "type" : "string",
              "value" : "hop: {} {} {}"
            },
            {
              "type" : "parameters_vector",
              "value" : [
                {
                  "type" : "field",
                  "value" : ["scalars", "tmp_6"]
                },
                {
                  "type" : "field",
                  "value" : ["standard_metadata", "ingress_global_timestamp"]
                },
                {
                  "type" : "field",
                  "value" : ["scalars", "userMetadata._int_metadata_ingress_tstamp7"]
                }
              ]
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 59,
            "column" : 12,
            "source_fragment" : "            log_msg(\\\"hop: {} {} {}\\\", {hdr.int_hop_latency.hop_latency, standard_metadata.ingress_global_timestamp, meta.int_metadata.ingress_tstamp});"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_int_hdr_word_len4"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata._int_metadata_int_hdr_word_len4"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x01"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 89,
            "column" : 47,
            "source_fragment" : "= meta.int_metadata.int_hdr_word_len + 1; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_insert_byte_cnt3"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata._int_metadata_insert_byte_cnt3"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x0004"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 90,
            "column" : 46,
            "source_fragment" : "= meta.int_metadata.insert_byte_cnt + 4; ..."
          }
        }
      ]
    },
    {
      "name" : "egress.Int_transit.int_set_header_0003_i3",
      "id" : 58,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "int_egress_tstamp"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 72,
            "column" : 12,
            "source_fragment" : "hdr.int_egress_tstamp.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_egress_tstamp", "egress_tstamp"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["int_egress_tstamp", "egress_tstamp"]
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "&",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "*",
                              "left" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000003e8"
                              },
                              "right" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "&",
                                  "left" : {
                                    "type" : "field",
                                    "value" : ["standard_metadata", "egress_global_timestamp"]
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0xffffffffffffffff"
                                  }
                                }
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xffffffffffffffff"
                          }
                        }
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffffffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 74,
            "column" : 12,
            "source_fragment" : "hdr.int_egress_tstamp.egress_tstamp = hdr.int_egress_tstamp.egress_tstamp + 1000 * _timestamp"
          }
        },
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "int_hop_latency"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 54,
            "column" : 12,
            "source_fragment" : "hdr.int_hop_latency.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_hop_latency", "hop_latency"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "-",
                          "left" : {
                            "type" : "field",
                            "value" : ["standard_metadata", "egress_global_timestamp"]
                          },
                          "right" : {
                            "type" : "field",
                            "value" : ["standard_metadata", "ingress_global_timestamp"]
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffffffffffff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 55,
            "column" : 12,
            "source_fragment" : "hdr.int_hop_latency.hop_latency = (bit<32>)(standard_metadata.egress_global_timestamp - standard_metadata.ingress_global_timestamp)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_hop_latency", "hop_latency"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "-",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "&",
                                  "left" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "-",
                                      "left" : {
                                        "type" : "field",
                                        "value" : ["standard_metadata", "egress_global_timestamp"]
                                      },
                                      "right" : {
                                        "type" : "field",
                                        "value" : ["standard_metadata", "ingress_global_timestamp"]
                                      }
                                    }
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0xffffffffffff"
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffffffff"
                              }
                            }
                          },
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "userMetadata._int_metadata_ingress_tstamp7"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffffffff"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffffffff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "&",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "-",
                              "left" : {
                                "type" : "field",
                                "value" : ["standard_metadata", "egress_global_timestamp"]
                              },
                              "right" : {
                                "type" : "field",
                                "value" : ["standard_metadata", "ingress_global_timestamp"]
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xffffffffffff"
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffffffff"
                      }
                    }
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["standard_metadata", "instance_type"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00000001"
                      }
                    }
                  }
                }
              }
            }
          ]
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_7"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "-",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "&",
                                  "left" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "-",
                                      "left" : {
                                        "type" : "field",
                                        "value" : ["standard_metadata", "egress_global_timestamp"]
                                      },
                                      "right" : {
                                        "type" : "field",
                                        "value" : ["standard_metadata", "ingress_global_timestamp"]
                                      }
                                    }
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0xffffffffffff"
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffffffff"
                              }
                            }
                          },
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "userMetadata._int_metadata_ingress_tstamp7"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffffffff"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffffffff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "&",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "-",
                              "left" : {
                                "type" : "field",
                                "value" : ["standard_metadata", "egress_global_timestamp"]
                              },
                              "right" : {
                                "type" : "field",
                                "value" : ["standard_metadata", "ingress_global_timestamp"]
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xffffffffffff"
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffffffff"
                      }
                    }
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["standard_metadata", "instance_type"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00000001"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 57,
            "column" : 16,
            "source_fragment" : "hdr.int_hop_latency.hop_latency"
          }
        },
        {
          "op" : "log_msg",
          "parameters" : [
            {
              "type" : "string",
              "value" : "hop: {} {} {}"
            },
            {
              "type" : "parameters_vector",
              "value" : [
                {
                  "type" : "field",
                  "value" : ["scalars", "tmp_7"]
                },
                {
                  "type" : "field",
                  "value" : ["standard_metadata", "ingress_global_timestamp"]
                },
                {
                  "type" : "field",
                  "value" : ["scalars", "userMetadata._int_metadata_ingress_tstamp7"]
                }
              ]
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 59,
            "column" : 12,
            "source_fragment" : "            log_msg(\\\"hop: {} {} {}\\\", {hdr.int_hop_latency.hop_latency, standard_metadata.ingress_global_timestamp, meta.int_metadata.ingress_tstamp});"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_int_hdr_word_len4"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata._int_metadata_int_hdr_word_len4"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x03"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 99,
            "column" : 47,
            "source_fragment" : "= meta.int_metadata.int_hdr_word_len + 3; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_insert_byte_cnt3"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata._int_metadata_insert_byte_cnt3"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x000c"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 100,
            "column" : 46,
            "source_fragment" : "= meta.int_metadata.insert_byte_cnt + 12; ..."
          }
        }
      ]
    },
    {
      "name" : "egress.Int_transit.int_set_header_0003_i4",
      "id" : 59,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "int_port_ids"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 48,
            "column" : 12,
            "source_fragment" : "hdr.int_port_ids.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_port_ids", "ingress_port_id"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_ingress_port8"]
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 50,
            "column" : 12,
            "source_fragment" : "hdr.int_port_ids.ingress_port_id = meta.int_metadata.ingress_port; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_port_ids", "egress_port_id"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["standard_metadata", "egress_port"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 51,
            "column" : 12,
            "source_fragment" : "hdr.int_port_ids.egress_port_id = (bit<16>)standard_metadata.egress_port"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_int_hdr_word_len4"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata._int_metadata_int_hdr_word_len4"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x01"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 89,
            "column" : 47,
            "source_fragment" : "= meta.int_metadata.int_hdr_word_len + 1; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_insert_byte_cnt3"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata._int_metadata_insert_byte_cnt3"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x0004"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 90,
            "column" : 46,
            "source_fragment" : "= meta.int_metadata.insert_byte_cnt + 4; ..."
          }
        }
      ]
    },
    {
      "name" : "egress.Int_transit.int_set_header_0003_i5",
      "id" : 60,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "int_q_occupancy"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 62,
            "column" : 12,
            "source_fragment" : "hdr.int_q_occupancy.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_q_occupancy", "q_id"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 63,
            "column" : 12,
            "source_fragment" : "hdr.int_q_occupancy.q_id = 0"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_q_occupancy", "q_occupancy"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["standard_metadata", "enq_qdepth"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 64,
            "column" : 12,
            "source_fragment" : "hdr.int_q_occupancy.q_occupancy = (bit<24>)standard_metadata.enq_qdepth"
          }
        },
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "int_port_ids"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 48,
            "column" : 12,
            "source_fragment" : "hdr.int_port_ids.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_port_ids", "ingress_port_id"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_ingress_port8"]
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 50,
            "column" : 12,
            "source_fragment" : "hdr.int_port_ids.ingress_port_id = meta.int_metadata.ingress_port; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_port_ids", "egress_port_id"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["standard_metadata", "egress_port"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 51,
            "column" : 12,
            "source_fragment" : "hdr.int_port_ids.egress_port_id = (bit<16>)standard_metadata.egress_port"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_int_hdr_word_len4"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata._int_metadata_int_hdr_word_len4"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x02"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 94,
            "column" : 47,
            "source_fragment" : "= meta.int_metadata.int_hdr_word_len + 2; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_insert_byte_cnt3"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata._int_metadata_insert_byte_cnt3"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x0008"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 95,
            "column" : 46,
            "source_fragment" : "= meta.int_metadata.insert_byte_cnt + 8; ..."
          }
        }
      ]
    },
    {
      "name" : "egress.Int_transit.int_set_header_0003_i6",
      "id" : 61,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "int_hop_latency"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 54,
            "column" : 12,
            "source_fragment" : "hdr.int_hop_latency.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_hop_latency", "hop_latency"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "-",
                          "left" : {
                            "type" : "field",
                            "value" : ["standard_metadata", "egress_global_timestamp"]
                          },
                          "right" : {
                            "type" : "field",
                            "value" : ["standard_metadata", "ingress_global_timestamp"]
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffffffffffff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 55,
            "column" : 12,
            "source_fragment" : "hdr.int_hop_latency.hop_latency = (bit<32>)(standard_metadata.egress_global_timestamp - standard_metadata.ingress_global_timestamp)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_hop_latency", "hop_latency"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "-",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "&",
                                  "left" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "-",
                                      "left" : {
                                        "type" : "field",
                                        "value" : ["standard_metadata", "egress_global_timestamp"]
                                      },
                                      "right" : {
                                        "type" : "field",
                                        "value" : ["standard_metadata", "ingress_global_timestamp"]
                                      }
                                    }
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0xffffffffffff"
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffffffff"
                              }
                            }
                          },
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "userMetadata._int_metadata_ingress_tstamp7"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffffffff"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffffffff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "&",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "-",
                              "left" : {
                                "type" : "field",
                                "value" : ["standard_metadata", "egress_global_timestamp"]
                              },
                              "right" : {
                                "type" : "field",
                                "value" : ["standard_metadata", "ingress_global_timestamp"]
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xffffffffffff"
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffffffff"
                      }
                    }
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["standard_metadata", "instance_type"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00000001"
                      }
                    }
                  }
                }
              }
            }
          ]
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_8"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "-",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "&",
                                  "left" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "-",
                                      "left" : {
                                        "type" : "field",
                                        "value" : ["standard_metadata", "egress_global_timestamp"]
                                      },
                                      "right" : {
                                        "type" : "field",
                                        "value" : ["standard_metadata", "ingress_global_timestamp"]
                                      }
                                    }
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0xffffffffffff"
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffffffff"
                              }
                            }
                          },
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "userMetadata._int_metadata_ingress_tstamp7"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffffffff"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffffffff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "&",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "-",
                              "left" : {
                                "type" : "field",
                                "value" : ["standard_metadata", "egress_global_timestamp"]
                              },
                              "right" : {
                                "type" : "field",
                                "value" : ["standard_metadata", "ingress_global_timestamp"]
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xffffffffffff"
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffffffff"
                      }
                    }
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["standard_metadata", "instance_type"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00000001"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 57,
            "column" : 16,
            "source_fragment" : "hdr.int_hop_latency.hop_latency"
          }
        },
        {
          "op" : "log_msg",
          "parameters" : [
            {
              "type" : "string",
              "value" : "hop: {} {} {}"
            },
            {
              "type" : "parameters_vector",
              "value" : [
                {
                  "type" : "field",
                  "value" : ["scalars", "tmp_8"]
                },
                {
                  "type" : "field",
                  "value" : ["standard_metadata", "ingress_global_timestamp"]
                },
                {
                  "type" : "field",
                  "value" : ["scalars", "userMetadata._int_metadata_ingress_tstamp7"]
                }
              ]
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 59,
            "column" : 12,
            "source_fragment" : "            log_msg(\\\"hop: {} {} {}\\\", {hdr.int_hop_latency.hop_latency, standard_metadata.ingress_global_timestamp, meta.int_metadata.ingress_tstamp});"
          }
        },
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "int_port_ids"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 48,
            "column" : 12,
            "source_fragment" : "hdr.int_port_ids.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_port_ids", "ingress_port_id"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_ingress_port8"]
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 50,
            "column" : 12,
            "source_fragment" : "hdr.int_port_ids.ingress_port_id = meta.int_metadata.ingress_port; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_port_ids", "egress_port_id"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["standard_metadata", "egress_port"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 51,
            "column" : 12,
            "source_fragment" : "hdr.int_port_ids.egress_port_id = (bit<16>)standard_metadata.egress_port"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_int_hdr_word_len4"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata._int_metadata_int_hdr_word_len4"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x02"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 94,
            "column" : 47,
            "source_fragment" : "= meta.int_metadata.int_hdr_word_len + 2; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_insert_byte_cnt3"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata._int_metadata_insert_byte_cnt3"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x0008"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 95,
            "column" : 46,
            "source_fragment" : "= meta.int_metadata.insert_byte_cnt + 8; ..."
          }
        }
      ]
    },
    {
      "name" : "egress.Int_transit.int_set_header_0003_i7",
      "id" : 62,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "int_q_occupancy"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 62,
            "column" : 12,
            "source_fragment" : "hdr.int_q_occupancy.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_q_occupancy", "q_id"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 63,
            "column" : 12,
            "source_fragment" : "hdr.int_q_occupancy.q_id = 0"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_q_occupancy", "q_occupancy"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["standard_metadata", "enq_qdepth"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 64,
            "column" : 12,
            "source_fragment" : "hdr.int_q_occupancy.q_occupancy = (bit<24>)standard_metadata.enq_qdepth"
          }
        },
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "int_hop_latency"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 54,
            "column" : 12,
            "source_fragment" : "hdr.int_hop_latency.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_hop_latency", "hop_latency"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "-",
                          "left" : {
                            "type" : "field",
                            "value" : ["standard_metadata", "egress_global_timestamp"]
                          },
                          "right" : {
                            "type" : "field",
                            "value" : ["standard_metadata", "ingress_global_timestamp"]
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffffffffffff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 55,
            "column" : 12,
            "source_fragment" : "hdr.int_hop_latency.hop_latency = (bit<32>)(standard_metadata.egress_global_timestamp - standard_metadata.ingress_global_timestamp)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_hop_latency", "hop_latency"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "-",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "&",
                                  "left" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "-",
                                      "left" : {
                                        "type" : "field",
                                        "value" : ["standard_metadata", "egress_global_timestamp"]
                                      },
                                      "right" : {
                                        "type" : "field",
                                        "value" : ["standard_metadata", "ingress_global_timestamp"]
                                      }
                                    }
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0xffffffffffff"
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffffffff"
                              }
                            }
                          },
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "userMetadata._int_metadata_ingress_tstamp7"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffffffff"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffffffff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "&",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "-",
                              "left" : {
                                "type" : "field",
                                "value" : ["standard_metadata", "egress_global_timestamp"]
                              },
                              "right" : {
                                "type" : "field",
                                "value" : ["standard_metadata", "ingress_global_timestamp"]
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xffffffffffff"
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffffffff"
                      }
                    }
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["standard_metadata", "instance_type"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00000001"
                      }
                    }
                  }
                }
              }
            }
          ]
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_9"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "-",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "&",
                                  "left" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "-",
                                      "left" : {
                                        "type" : "field",
                                        "value" : ["standard_metadata", "egress_global_timestamp"]
                                      },
                                      "right" : {
                                        "type" : "field",
                                        "value" : ["standard_metadata", "ingress_global_timestamp"]
                                      }
                                    }
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0xffffffffffff"
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffffffff"
                              }
                            }
                          },
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "userMetadata._int_metadata_ingress_tstamp7"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffffffff"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffffffff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "&",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "-",
                              "left" : {
                                "type" : "field",
                                "value" : ["standard_metadata", "egress_global_timestamp"]
                              },
                              "right" : {
                                "type" : "field",
                                "value" : ["standard_metadata", "ingress_global_timestamp"]
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xffffffffffff"
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffffffff"
                      }
                    }
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["standard_metadata", "instance_type"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00000001"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 57,
            "column" : 16,
            "source_fragment" : "hdr.int_hop_latency.hop_latency"
          }
        },
        {
          "op" : "log_msg",
          "parameters" : [
            {
              "type" : "string",
              "value" : "hop: {} {} {}"
            },
            {
              "type" : "parameters_vector",
              "value" : [
                {
                  "type" : "field",
                  "value" : ["scalars", "tmp_9"]
                },
                {
                  "type" : "field",
                  "value" : ["standard_metadata", "ingress_global_timestamp"]
                },
                {
                  "type" : "field",
                  "value" : ["scalars", "userMetadata._int_metadata_ingress_tstamp7"]
                }
              ]
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 59,
            "column" : 12,
            "source_fragment" : "            log_msg(\\\"hop: {} {} {}\\\", {hdr.int_hop_latency.hop_latency, standard_metadata.ingress_global_timestamp, meta.int_metadata.ingress_tstamp});"
          }
        },
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "int_port_ids"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 48,
            "column" : 12,
            "source_fragment" : "hdr.int_port_ids.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_port_ids", "ingress_port_id"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_ingress_port8"]
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 50,
            "column" : 12,
            "source_fragment" : "hdr.int_port_ids.ingress_port_id = meta.int_metadata.ingress_port; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_port_ids", "egress_port_id"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["standard_metadata", "egress_port"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 51,
            "column" : 12,
            "source_fragment" : "hdr.int_port_ids.egress_port_id = (bit<16>)standard_metadata.egress_port"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_int_hdr_word_len4"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata._int_metadata_int_hdr_word_len4"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x03"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 99,
            "column" : 47,
            "source_fragment" : "= meta.int_metadata.int_hdr_word_len + 3; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_insert_byte_cnt3"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata._int_metadata_insert_byte_cnt3"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x000c"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 100,
            "column" : 46,
            "source_fragment" : "= meta.int_metadata.insert_byte_cnt + 12; ..."
          }
        }
      ]
    },
    {
      "name" : "egress.Int_transit.int_set_header_0003_i8",
      "id" : 63,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "int_switch_id"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 44,
            "column" : 12,
            "source_fragment" : "hdr.int_switch_id.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_switch_id", "switch_id"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_switch_id2"]
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 45,
            "column" : 12,
            "source_fragment" : "hdr.int_switch_id.switch_id = meta.int_metadata.switch_id; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_int_hdr_word_len4"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata._int_metadata_int_hdr_word_len4"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x01"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 89,
            "column" : 47,
            "source_fragment" : "= meta.int_metadata.int_hdr_word_len + 1; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_insert_byte_cnt3"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata._int_metadata_insert_byte_cnt3"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x0004"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 90,
            "column" : 46,
            "source_fragment" : "= meta.int_metadata.insert_byte_cnt + 4; ..."
          }
        }
      ]
    },
    {
      "name" : "egress.Int_transit.int_set_header_0003_i9",
      "id" : 64,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "int_q_occupancy"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 62,
            "column" : 12,
            "source_fragment" : "hdr.int_q_occupancy.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_q_occupancy", "q_id"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 63,
            "column" : 12,
            "source_fragment" : "hdr.int_q_occupancy.q_id = 0"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_q_occupancy", "q_occupancy"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["standard_metadata", "enq_qdepth"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 64,
            "column" : 12,
            "source_fragment" : "hdr.int_q_occupancy.q_occupancy = (bit<24>)standard_metadata.enq_qdepth"
          }
        },
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "int_switch_id"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 44,
            "column" : 12,
            "source_fragment" : "hdr.int_switch_id.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_switch_id", "switch_id"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_switch_id2"]
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 45,
            "column" : 12,
            "source_fragment" : "hdr.int_switch_id.switch_id = meta.int_metadata.switch_id; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_int_hdr_word_len4"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata._int_metadata_int_hdr_word_len4"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x02"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 94,
            "column" : 47,
            "source_fragment" : "= meta.int_metadata.int_hdr_word_len + 2; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_insert_byte_cnt3"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata._int_metadata_insert_byte_cnt3"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x0008"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 95,
            "column" : 46,
            "source_fragment" : "= meta.int_metadata.insert_byte_cnt + 8; ..."
          }
        }
      ]
    },
    {
      "name" : "egress.Int_transit.int_set_header_0003_i10",
      "id" : 65,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "int_hop_latency"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 54,
            "column" : 12,
            "source_fragment" : "hdr.int_hop_latency.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_hop_latency", "hop_latency"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "-",
                          "left" : {
                            "type" : "field",
                            "value" : ["standard_metadata", "egress_global_timestamp"]
                          },
                          "right" : {
                            "type" : "field",
                            "value" : ["standard_metadata", "ingress_global_timestamp"]
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffffffffffff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 55,
            "column" : 12,
            "source_fragment" : "hdr.int_hop_latency.hop_latency = (bit<32>)(standard_metadata.egress_global_timestamp - standard_metadata.ingress_global_timestamp)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_hop_latency", "hop_latency"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "-",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "&",
                                  "left" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "-",
                                      "left" : {
                                        "type" : "field",
                                        "value" : ["standard_metadata", "egress_global_timestamp"]
                                      },
                                      "right" : {
                                        "type" : "field",
                                        "value" : ["standard_metadata", "ingress_global_timestamp"]
                                      }
                                    }
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0xffffffffffff"
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffffffff"
                              }
                            }
                          },
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "userMetadata._int_metadata_ingress_tstamp7"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffffffff"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffffffff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "&",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "-",
                              "left" : {
                                "type" : "field",
                                "value" : ["standard_metadata", "egress_global_timestamp"]
                              },
                              "right" : {
                                "type" : "field",
                                "value" : ["standard_metadata", "ingress_global_timestamp"]
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xffffffffffff"
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffffffff"
                      }
                    }
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["standard_metadata", "instance_type"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00000001"
                      }
                    }
                  }
                }
              }
            }
          ]
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_10"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "-",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "&",
                                  "left" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "-",
                                      "left" : {
                                        "type" : "field",
                                        "value" : ["standard_metadata", "egress_global_timestamp"]
                                      },
                                      "right" : {
                                        "type" : "field",
                                        "value" : ["standard_metadata", "ingress_global_timestamp"]
                                      }
                                    }
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0xffffffffffff"
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffffffff"
                              }
                            }
                          },
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "userMetadata._int_metadata_ingress_tstamp7"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffffffff"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffffffff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "&",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "-",
                              "left" : {
                                "type" : "field",
                                "value" : ["standard_metadata", "egress_global_timestamp"]
                              },
                              "right" : {
                                "type" : "field",
                                "value" : ["standard_metadata", "ingress_global_timestamp"]
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xffffffffffff"
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffffffff"
                      }
                    }
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["standard_metadata", "instance_type"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00000001"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 57,
            "column" : 16,
            "source_fragment" : "hdr.int_hop_latency.hop_latency"
          }
        },
        {
          "op" : "log_msg",
          "parameters" : [
            {
              "type" : "string",
              "value" : "hop: {} {} {}"
            },
            {
              "type" : "parameters_vector",
              "value" : [
                {
                  "type" : "field",
                  "value" : ["scalars", "tmp_10"]
                },
                {
                  "type" : "field",
                  "value" : ["standard_metadata", "ingress_global_timestamp"]
                },
                {
                  "type" : "field",
                  "value" : ["scalars", "userMetadata._int_metadata_ingress_tstamp7"]
                }
              ]
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 59,
            "column" : 12,
            "source_fragment" : "            log_msg(\\\"hop: {} {} {}\\\", {hdr.int_hop_latency.hop_latency, standard_metadata.ingress_global_timestamp, meta.int_metadata.ingress_tstamp});"
          }
        },
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "int_switch_id"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 44,
            "column" : 12,
            "source_fragment" : "hdr.int_switch_id.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_switch_id", "switch_id"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_switch_id2"]
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 45,
            "column" : 12,
            "source_fragment" : "hdr.int_switch_id.switch_id = meta.int_metadata.switch_id; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_int_hdr_word_len4"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata._int_metadata_int_hdr_word_len4"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x02"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 94,
            "column" : 47,
            "source_fragment" : "= meta.int_metadata.int_hdr_word_len + 2; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_insert_byte_cnt3"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata._int_metadata_insert_byte_cnt3"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x0008"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 95,
            "column" : 46,
            "source_fragment" : "= meta.int_metadata.insert_byte_cnt + 8; ..."
          }
        }
      ]
    },
    {
      "name" : "egress.Int_transit.int_set_header_0003_i11",
      "id" : 66,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "int_q_occupancy"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 62,
            "column" : 12,
            "source_fragment" : "hdr.int_q_occupancy.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_q_occupancy", "q_id"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 63,
            "column" : 12,
            "source_fragment" : "hdr.int_q_occupancy.q_id = 0"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_q_occupancy", "q_occupancy"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["standard_metadata", "enq_qdepth"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 64,
            "column" : 12,
            "source_fragment" : "hdr.int_q_occupancy.q_occupancy = (bit<24>)standard_metadata.enq_qdepth"
          }
        },
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "int_hop_latency"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 54,
            "column" : 12,
            "source_fragment" : "hdr.int_hop_latency.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_hop_latency", "hop_latency"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "-",
                          "left" : {
                            "type" : "field",
                            "value" : ["standard_metadata", "egress_global_timestamp"]
                          },
                          "right" : {
                            "type" : "field",
                            "value" : ["standard_metadata", "ingress_global_timestamp"]
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffffffffffff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 55,
            "column" : 12,
            "source_fragment" : "hdr.int_hop_latency.hop_latency = (bit<32>)(standard_metadata.egress_global_timestamp - standard_metadata.ingress_global_timestamp)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_hop_latency", "hop_latency"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "-",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "&",
                                  "left" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "-",
                                      "left" : {
                                        "type" : "field",
                                        "value" : ["standard_metadata", "egress_global_timestamp"]
                                      },
                                      "right" : {
                                        "type" : "field",
                                        "value" : ["standard_metadata", "ingress_global_timestamp"]
                                      }
                                    }
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0xffffffffffff"
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffffffff"
                              }
                            }
                          },
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "userMetadata._int_metadata_ingress_tstamp7"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffffffff"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffffffff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "&",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "-",
                              "left" : {
                                "type" : "field",
                                "value" : ["standard_metadata", "egress_global_timestamp"]
                              },
                              "right" : {
                                "type" : "field",
                                "value" : ["standard_metadata", "ingress_global_timestamp"]
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xffffffffffff"
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffffffff"
                      }
                    }
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["standard_metadata", "instance_type"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00000001"
                      }
                    }
                  }
                }
              }
            }
          ]
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_11"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "-",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "&",
                                  "left" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "-",
                                      "left" : {
                                        "type" : "field",
                                        "value" : ["standard_metadata", "egress_global_timestamp"]
                                      },
                                      "right" : {
                                        "type" : "field",
                                        "value" : ["standard_metadata", "ingress_global_timestamp"]
                                      }
                                    }
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0xffffffffffff"
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffffffff"
                              }
                            }
                          },
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "userMetadata._int_metadata_ingress_tstamp7"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffffffff"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffffffff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "&",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "-",
                              "left" : {
                                "type" : "field",
                                "value" : ["standard_metadata", "egress_global_timestamp"]
                              },
                              "right" : {
                                "type" : "field",
                                "value" : ["standard_metadata", "ingress_global_timestamp"]
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xffffffffffff"
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffffffff"
                      }
                    }
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["standard_metadata", "instance_type"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00000001"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 57,
            "column" : 16,
            "source_fragment" : "hdr.int_hop_latency.hop_latency"
          }
        },
        {
          "op" : "log_msg",
          "parameters" : [
            {
              "type" : "string",
              "value" : "hop: {} {} {}"
            },
            {
              "type" : "parameters_vector",
              "value" : [
                {
                  "type" : "field",
                  "value" : ["scalars", "tmp_11"]
                },
                {
                  "type" : "field",
                  "value" : ["standard_metadata", "ingress_global_timestamp"]
                },
                {
                  "type" : "field",
                  "value" : ["scalars", "userMetadata._int_metadata_ingress_tstamp7"]
                }
              ]
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 59,
            "column" : 12,
            "source_fragment" : "            log_msg(\\\"hop: {} {} {}\\\", {hdr.int_hop_latency.hop_latency, standard_metadata.ingress_global_timestamp, meta.int_metadata.ingress_tstamp});"
          }
        },
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "int_switch_id"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 44,
            "column" : 12,
            "source_fragment" : "hdr.int_switch_id.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_switch_id", "switch_id"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_switch_id2"]
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 45,
            "column" : 12,
            "source_fragment" : "hdr.int_switch_id.switch_id = meta.int_metadata.switch_id; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_int_hdr_word_len4"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata._int_metadata_int_hdr_word_len4"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x03"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 99,
            "column" : 47,
            "source_fragment" : "= meta.int_metadata.int_hdr_word_len + 3; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_insert_byte_cnt3"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata._int_metadata_insert_byte_cnt3"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x000c"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 100,
            "column" : 46,
            "source_fragment" : "= meta.int_metadata.insert_byte_cnt + 12; ..."
          }
        }
      ]
    },
    {
      "name" : "egress.Int_transit.int_set_header_0003_i12",
      "id" : 67,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "int_port_ids"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 48,
            "column" : 12,
            "source_fragment" : "hdr.int_port_ids.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_port_ids", "ingress_port_id"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_ingress_port8"]
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 50,
            "column" : 12,
            "source_fragment" : "hdr.int_port_ids.ingress_port_id = meta.int_metadata.ingress_port; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_port_ids", "egress_port_id"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["standard_metadata", "egress_port"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 51,
            "column" : 12,
            "source_fragment" : "hdr.int_port_ids.egress_port_id = (bit<16>)standard_metadata.egress_port"
          }
        },
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "int_switch_id"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 44,
            "column" : 12,
            "source_fragment" : "hdr.int_switch_id.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_switch_id", "switch_id"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_switch_id2"]
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 45,
            "column" : 12,
            "source_fragment" : "hdr.int_switch_id.switch_id = meta.int_metadata.switch_id; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_int_hdr_word_len4"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata._int_metadata_int_hdr_word_len4"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x02"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 94,
            "column" : 47,
            "source_fragment" : "= meta.int_metadata.int_hdr_word_len + 2; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_insert_byte_cnt3"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata._int_metadata_insert_byte_cnt3"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x0008"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 95,
            "column" : 46,
            "source_fragment" : "= meta.int_metadata.insert_byte_cnt + 8; ..."
          }
        }
      ]
    },
    {
      "name" : "egress.Int_transit.int_set_header_0003_i13",
      "id" : 68,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "int_q_occupancy"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 62,
            "column" : 12,
            "source_fragment" : "hdr.int_q_occupancy.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_q_occupancy", "q_id"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 63,
            "column" : 12,
            "source_fragment" : "hdr.int_q_occupancy.q_id = 0"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_q_occupancy", "q_occupancy"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["standard_metadata", "enq_qdepth"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 64,
            "column" : 12,
            "source_fragment" : "hdr.int_q_occupancy.q_occupancy = (bit<24>)standard_metadata.enq_qdepth"
          }
        },
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "int_port_ids"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 48,
            "column" : 12,
            "source_fragment" : "hdr.int_port_ids.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_port_ids", "ingress_port_id"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_ingress_port8"]
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 50,
            "column" : 12,
            "source_fragment" : "hdr.int_port_ids.ingress_port_id = meta.int_metadata.ingress_port; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_port_ids", "egress_port_id"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["standard_metadata", "egress_port"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 51,
            "column" : 12,
            "source_fragment" : "hdr.int_port_ids.egress_port_id = (bit<16>)standard_metadata.egress_port"
          }
        },
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "int_switch_id"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 44,
            "column" : 12,
            "source_fragment" : "hdr.int_switch_id.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_switch_id", "switch_id"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_switch_id2"]
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 45,
            "column" : 12,
            "source_fragment" : "hdr.int_switch_id.switch_id = meta.int_metadata.switch_id; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_int_hdr_word_len4"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata._int_metadata_int_hdr_word_len4"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x03"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 99,
            "column" : 47,
            "source_fragment" : "= meta.int_metadata.int_hdr_word_len + 3; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_insert_byte_cnt3"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata._int_metadata_insert_byte_cnt3"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x000c"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 100,
            "column" : 46,
            "source_fragment" : "= meta.int_metadata.insert_byte_cnt + 12; ..."
          }
        }
      ]
    },
    {
      "name" : "egress.Int_transit.int_set_header_0003_i14",
      "id" : 69,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "int_hop_latency"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 54,
            "column" : 12,
            "source_fragment" : "hdr.int_hop_latency.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_hop_latency", "hop_latency"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "-",
                          "left" : {
                            "type" : "field",
                            "value" : ["standard_metadata", "egress_global_timestamp"]
                          },
                          "right" : {
                            "type" : "field",
                            "value" : ["standard_metadata", "ingress_global_timestamp"]
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffffffffffff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 55,
            "column" : 12,
            "source_fragment" : "hdr.int_hop_latency.hop_latency = (bit<32>)(standard_metadata.egress_global_timestamp - standard_metadata.ingress_global_timestamp)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_hop_latency", "hop_latency"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "-",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "&",
                                  "left" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "-",
                                      "left" : {
                                        "type" : "field",
                                        "value" : ["standard_metadata", "egress_global_timestamp"]
                                      },
                                      "right" : {
                                        "type" : "field",
                                        "value" : ["standard_metadata", "ingress_global_timestamp"]
                                      }
                                    }
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0xffffffffffff"
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffffffff"
                              }
                            }
                          },
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "userMetadata._int_metadata_ingress_tstamp7"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffffffff"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffffffff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "&",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "-",
                              "left" : {
                                "type" : "field",
                                "value" : ["standard_metadata", "egress_global_timestamp"]
                              },
                              "right" : {
                                "type" : "field",
                                "value" : ["standard_metadata", "ingress_global_timestamp"]
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xffffffffffff"
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffffffff"
                      }
                    }
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["standard_metadata", "instance_type"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00000001"
                      }
                    }
                  }
                }
              }
            }
          ]
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_12"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "-",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "&",
                                  "left" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "-",
                                      "left" : {
                                        "type" : "field",
                                        "value" : ["standard_metadata", "egress_global_timestamp"]
                                      },
                                      "right" : {
                                        "type" : "field",
                                        "value" : ["standard_metadata", "ingress_global_timestamp"]
                                      }
                                    }
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0xffffffffffff"
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffffffff"
                              }
                            }
                          },
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "userMetadata._int_metadata_ingress_tstamp7"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffffffff"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffffffff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "&",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "-",
                              "left" : {
                                "type" : "field",
                                "value" : ["standard_metadata", "egress_global_timestamp"]
                              },
                              "right" : {
                                "type" : "field",
                                "value" : ["standard_metadata", "ingress_global_timestamp"]
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xffffffffffff"
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffffffff"
                      }
                    }
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["standard_metadata", "instance_type"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00000001"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 57,
            "column" : 16,
            "source_fragment" : "hdr.int_hop_latency.hop_latency"
          }
        },
        {
          "op" : "log_msg",
          "parameters" : [
            {
              "type" : "string",
              "value" : "hop: {} {} {}"
            },
            {
              "type" : "parameters_vector",
              "value" : [
                {
                  "type" : "field",
                  "value" : ["scalars", "tmp_12"]
                },
                {
                  "type" : "field",
                  "value" : ["standard_metadata", "ingress_global_timestamp"]
                },
                {
                  "type" : "field",
                  "value" : ["scalars", "userMetadata._int_metadata_ingress_tstamp7"]
                }
              ]
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 59,
            "column" : 12,
            "source_fragment" : "            log_msg(\\\"hop: {} {} {}\\\", {hdr.int_hop_latency.hop_latency, standard_metadata.ingress_global_timestamp, meta.int_metadata.ingress_tstamp});"
          }
        },
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "int_port_ids"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 48,
            "column" : 12,
            "source_fragment" : "hdr.int_port_ids.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_port_ids", "ingress_port_id"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_ingress_port8"]
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 50,
            "column" : 12,
            "source_fragment" : "hdr.int_port_ids.ingress_port_id = meta.int_metadata.ingress_port; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_port_ids", "egress_port_id"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["standard_metadata", "egress_port"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 51,
            "column" : 12,
            "source_fragment" : "hdr.int_port_ids.egress_port_id = (bit<16>)standard_metadata.egress_port"
          }
        },
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "int_switch_id"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 44,
            "column" : 12,
            "source_fragment" : "hdr.int_switch_id.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_switch_id", "switch_id"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_switch_id2"]
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 45,
            "column" : 12,
            "source_fragment" : "hdr.int_switch_id.switch_id = meta.int_metadata.switch_id; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_int_hdr_word_len4"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata._int_metadata_int_hdr_word_len4"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x03"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 99,
            "column" : 47,
            "source_fragment" : "= meta.int_metadata.int_hdr_word_len + 3; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_insert_byte_cnt3"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata._int_metadata_insert_byte_cnt3"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x000c"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 100,
            "column" : 46,
            "source_fragment" : "= meta.int_metadata.insert_byte_cnt + 12; ..."
          }
        }
      ]
    },
    {
      "name" : "egress.Int_transit.int_set_header_0003_i15",
      "id" : 70,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "int_q_occupancy"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 62,
            "column" : 12,
            "source_fragment" : "hdr.int_q_occupancy.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_q_occupancy", "q_id"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 63,
            "column" : 12,
            "source_fragment" : "hdr.int_q_occupancy.q_id = 0"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_q_occupancy", "q_occupancy"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["standard_metadata", "enq_qdepth"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 64,
            "column" : 12,
            "source_fragment" : "hdr.int_q_occupancy.q_occupancy = (bit<24>)standard_metadata.enq_qdepth"
          }
        },
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "int_hop_latency"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 54,
            "column" : 12,
            "source_fragment" : "hdr.int_hop_latency.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_hop_latency", "hop_latency"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "-",
                          "left" : {
                            "type" : "field",
                            "value" : ["standard_metadata", "egress_global_timestamp"]
                          },
                          "right" : {
                            "type" : "field",
                            "value" : ["standard_metadata", "ingress_global_timestamp"]
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffffffffffff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 55,
            "column" : 12,
            "source_fragment" : "hdr.int_hop_latency.hop_latency = (bit<32>)(standard_metadata.egress_global_timestamp - standard_metadata.ingress_global_timestamp)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_hop_latency", "hop_latency"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "-",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "&",
                                  "left" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "-",
                                      "left" : {
                                        "type" : "field",
                                        "value" : ["standard_metadata", "egress_global_timestamp"]
                                      },
                                      "right" : {
                                        "type" : "field",
                                        "value" : ["standard_metadata", "ingress_global_timestamp"]
                                      }
                                    }
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0xffffffffffff"
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffffffff"
                              }
                            }
                          },
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "userMetadata._int_metadata_ingress_tstamp7"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffffffff"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffffffff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "&",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "-",
                              "left" : {
                                "type" : "field",
                                "value" : ["standard_metadata", "egress_global_timestamp"]
                              },
                              "right" : {
                                "type" : "field",
                                "value" : ["standard_metadata", "ingress_global_timestamp"]
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xffffffffffff"
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffffffff"
                      }
                    }
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["standard_metadata", "instance_type"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00000001"
                      }
                    }
                  }
                }
              }
            }
          ]
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_13"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "-",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "&",
                                  "left" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "-",
                                      "left" : {
                                        "type" : "field",
                                        "value" : ["standard_metadata", "egress_global_timestamp"]
                                      },
                                      "right" : {
                                        "type" : "field",
                                        "value" : ["standard_metadata", "ingress_global_timestamp"]
                                      }
                                    }
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0xffffffffffff"
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffffffff"
                              }
                            }
                          },
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "field",
                                "value" : ["scalars", "userMetadata._int_metadata_ingress_tstamp7"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffffffff"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffffffff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "&",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "-",
                              "left" : {
                                "type" : "field",
                                "value" : ["standard_metadata", "egress_global_timestamp"]
                              },
                              "right" : {
                                "type" : "field",
                                "value" : ["standard_metadata", "ingress_global_timestamp"]
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xffffffffffff"
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffffffff"
                      }
                    }
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "==",
                      "left" : {
                        "type" : "field",
                        "value" : ["standard_metadata", "instance_type"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00000001"
                      }
                    }
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 57,
            "column" : 16,
            "source_fragment" : "hdr.int_hop_latency.hop_latency"
          }
        },
        {
          "op" : "log_msg",
          "parameters" : [
            {
              "type" : "string",
              "value" : "hop: {} {} {}"
            },
            {
              "type" : "parameters_vector",
              "value" : [
                {
                  "type" : "field",
                  "value" : ["scalars", "tmp_13"]
                },
                {
                  "type" : "field",
                  "value" : ["standard_metadata", "ingress_global_timestamp"]
                },
                {
                  "type" : "field",
                  "value" : ["scalars", "userMetadata._int_metadata_ingress_tstamp7"]
                }
              ]
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 59,
            "column" : 12,
            "source_fragment" : "            log_msg(\\\"hop: {} {} {}\\\", {hdr.int_hop_latency.hop_latency, standard_metadata.ingress_global_timestamp, meta.int_metadata.ingress_tstamp});"
          }
        },
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "int_port_ids"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 48,
            "column" : 12,
            "source_fragment" : "hdr.int_port_ids.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_port_ids", "ingress_port_id"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_ingress_port8"]
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 50,
            "column" : 12,
            "source_fragment" : "hdr.int_port_ids.ingress_port_id = meta.int_metadata.ingress_port; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_port_ids", "egress_port_id"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["standard_metadata", "egress_port"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 51,
            "column" : 12,
            "source_fragment" : "hdr.int_port_ids.egress_port_id = (bit<16>)standard_metadata.egress_port"
          }
        },
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "int_switch_id"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 44,
            "column" : 12,
            "source_fragment" : "hdr.int_switch_id.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_switch_id", "switch_id"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_switch_id2"]
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 45,
            "column" : 12,
            "source_fragment" : "hdr.int_switch_id.switch_id = meta.int_metadata.switch_id; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_int_hdr_word_len4"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata._int_metadata_int_hdr_word_len4"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x04"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 104,
            "column" : 47,
            "source_fragment" : "= meta.int_metadata.int_hdr_word_len + 4; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_insert_byte_cnt3"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata._int_metadata_insert_byte_cnt3"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x0010"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 105,
            "column" : 46,
            "source_fragment" : "= meta.int_metadata.insert_byte_cnt + 16; ..."
          }
        }
      ]
    },
    {
      "name" : "egress.Int_transit.int_set_header_0407_i0",
      "id" : 71,
      "runtime_data" : [],
      "primitives" : []
    },
    {
      "name" : "egress.Int_transit.int_set_header_0407_i1",
      "id" : 72,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "int_egress_port_tx_util"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 83,
            "column" : 12,
            "source_fragment" : "hdr.int_egress_port_tx_util.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_egress_port_tx_util", "egress_port_tx_util"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00000000"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 85,
            "column" : 12,
            "source_fragment" : "hdr.int_egress_port_tx_util.egress_port_tx_util = 0"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_int_hdr_word_len4"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata._int_metadata_int_hdr_word_len4"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x01"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 89,
            "column" : 47,
            "source_fragment" : "= meta.int_metadata.int_hdr_word_len + 1; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_insert_byte_cnt3"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata._int_metadata_insert_byte_cnt3"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x0004"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 90,
            "column" : 46,
            "source_fragment" : "= meta.int_metadata.insert_byte_cnt + 4; ..."
          }
        }
      ]
    },
    {
      "name" : "egress.Int_transit.int_set_header_0407_i2",
      "id" : 73,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "int_level2_port_ids"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 77,
            "column" : 12,
            "source_fragment" : "hdr.int_level2_port_ids.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_level2_port_ids", "ingress_port_id"]
            },
            {
              "type" : "hexstr",
              "value" : "0x0000"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 79,
            "column" : 12,
            "source_fragment" : "hdr.int_level2_port_ids.ingress_port_id = 0"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_level2_port_ids", "egress_port_id"]
            },
            {
              "type" : "hexstr",
              "value" : "0x0000"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 80,
            "column" : 12,
            "source_fragment" : "hdr.int_level2_port_ids.egress_port_id = 0"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_int_hdr_word_len4"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata._int_metadata_int_hdr_word_len4"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x01"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 89,
            "column" : 47,
            "source_fragment" : "= meta.int_metadata.int_hdr_word_len + 1; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_insert_byte_cnt3"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata._int_metadata_insert_byte_cnt3"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x0004"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 90,
            "column" : 46,
            "source_fragment" : "= meta.int_metadata.insert_byte_cnt + 4; ..."
          }
        }
      ]
    },
    {
      "name" : "egress.Int_transit.int_set_header_0407_i3",
      "id" : 74,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "int_egress_port_tx_util"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 83,
            "column" : 12,
            "source_fragment" : "hdr.int_egress_port_tx_util.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_egress_port_tx_util", "egress_port_tx_util"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00000000"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 85,
            "column" : 12,
            "source_fragment" : "hdr.int_egress_port_tx_util.egress_port_tx_util = 0"
          }
        },
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "int_level2_port_ids"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 77,
            "column" : 12,
            "source_fragment" : "hdr.int_level2_port_ids.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_level2_port_ids", "ingress_port_id"]
            },
            {
              "type" : "hexstr",
              "value" : "0x0000"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 79,
            "column" : 12,
            "source_fragment" : "hdr.int_level2_port_ids.ingress_port_id = 0"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_level2_port_ids", "egress_port_id"]
            },
            {
              "type" : "hexstr",
              "value" : "0x0000"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 80,
            "column" : 12,
            "source_fragment" : "hdr.int_level2_port_ids.egress_port_id = 0"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_int_hdr_word_len4"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata._int_metadata_int_hdr_word_len4"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x02"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 94,
            "column" : 47,
            "source_fragment" : "= meta.int_metadata.int_hdr_word_len + 2; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_insert_byte_cnt3"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata._int_metadata_insert_byte_cnt3"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x0008"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 95,
            "column" : 46,
            "source_fragment" : "= meta.int_metadata.insert_byte_cnt + 8; ..."
          }
        }
      ]
    },
    {
      "name" : "egress.Int_transit.int_set_header_0407_i4",
      "id" : 75,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "int_egress_tstamp"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 72,
            "column" : 12,
            "source_fragment" : "hdr.int_egress_tstamp.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_egress_tstamp", "egress_tstamp"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["int_egress_tstamp", "egress_tstamp"]
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "&",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "*",
                              "left" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000003e8"
                              },
                              "right" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "&",
                                  "left" : {
                                    "type" : "field",
                                    "value" : ["standard_metadata", "egress_global_timestamp"]
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0xffffffffffffffff"
                                  }
                                }
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xffffffffffffffff"
                          }
                        }
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffffffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 74,
            "column" : 12,
            "source_fragment" : "hdr.int_egress_tstamp.egress_tstamp = hdr.int_egress_tstamp.egress_tstamp + 1000 * _timestamp"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_int_hdr_word_len4"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata._int_metadata_int_hdr_word_len4"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x02"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 94,
            "column" : 47,
            "source_fragment" : "= meta.int_metadata.int_hdr_word_len + 2; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_insert_byte_cnt3"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata._int_metadata_insert_byte_cnt3"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x0008"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 95,
            "column" : 46,
            "source_fragment" : "= meta.int_metadata.insert_byte_cnt + 8; ..."
          }
        }
      ]
    },
    {
      "name" : "egress.Int_transit.int_set_header_0407_i5",
      "id" : 76,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "int_egress_port_tx_util"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 83,
            "column" : 12,
            "source_fragment" : "hdr.int_egress_port_tx_util.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_egress_port_tx_util", "egress_port_tx_util"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00000000"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 85,
            "column" : 12,
            "source_fragment" : "hdr.int_egress_port_tx_util.egress_port_tx_util = 0"
          }
        },
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "int_egress_tstamp"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 72,
            "column" : 12,
            "source_fragment" : "hdr.int_egress_tstamp.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_egress_tstamp", "egress_tstamp"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["int_egress_tstamp", "egress_tstamp"]
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "&",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "*",
                              "left" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000003e8"
                              },
                              "right" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "&",
                                  "left" : {
                                    "type" : "field",
                                    "value" : ["standard_metadata", "egress_global_timestamp"]
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0xffffffffffffffff"
                                  }
                                }
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xffffffffffffffff"
                          }
                        }
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffffffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 74,
            "column" : 12,
            "source_fragment" : "hdr.int_egress_tstamp.egress_tstamp = hdr.int_egress_tstamp.egress_tstamp + 1000 * _timestamp"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_int_hdr_word_len4"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata._int_metadata_int_hdr_word_len4"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x03"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 99,
            "column" : 47,
            "source_fragment" : "= meta.int_metadata.int_hdr_word_len + 3; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_insert_byte_cnt3"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata._int_metadata_insert_byte_cnt3"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x000c"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 100,
            "column" : 46,
            "source_fragment" : "= meta.int_metadata.insert_byte_cnt + 12; ..."
          }
        }
      ]
    },
    {
      "name" : "egress.Int_transit.int_set_header_0407_i6",
      "id" : 77,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "int_level2_port_ids"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 77,
            "column" : 12,
            "source_fragment" : "hdr.int_level2_port_ids.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_level2_port_ids", "ingress_port_id"]
            },
            {
              "type" : "hexstr",
              "value" : "0x0000"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 79,
            "column" : 12,
            "source_fragment" : "hdr.int_level2_port_ids.ingress_port_id = 0"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_level2_port_ids", "egress_port_id"]
            },
            {
              "type" : "hexstr",
              "value" : "0x0000"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 80,
            "column" : 12,
            "source_fragment" : "hdr.int_level2_port_ids.egress_port_id = 0"
          }
        },
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "int_egress_tstamp"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 72,
            "column" : 12,
            "source_fragment" : "hdr.int_egress_tstamp.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_egress_tstamp", "egress_tstamp"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["int_egress_tstamp", "egress_tstamp"]
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "&",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "*",
                              "left" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000003e8"
                              },
                              "right" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "&",
                                  "left" : {
                                    "type" : "field",
                                    "value" : ["standard_metadata", "egress_global_timestamp"]
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0xffffffffffffffff"
                                  }
                                }
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xffffffffffffffff"
                          }
                        }
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffffffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 74,
            "column" : 12,
            "source_fragment" : "hdr.int_egress_tstamp.egress_tstamp = hdr.int_egress_tstamp.egress_tstamp + 1000 * _timestamp"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_int_hdr_word_len4"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata._int_metadata_int_hdr_word_len4"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x03"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 99,
            "column" : 47,
            "source_fragment" : "= meta.int_metadata.int_hdr_word_len + 3; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_insert_byte_cnt3"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata._int_metadata_insert_byte_cnt3"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x000c"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 100,
            "column" : 46,
            "source_fragment" : "= meta.int_metadata.insert_byte_cnt + 12; ..."
          }
        }
      ]
    },
    {
      "name" : "egress.Int_transit.int_set_header_0407_i7",
      "id" : 78,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "int_egress_port_tx_util"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 83,
            "column" : 12,
            "source_fragment" : "hdr.int_egress_port_tx_util.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_egress_port_tx_util", "egress_port_tx_util"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00000000"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 85,
            "column" : 12,
            "source_fragment" : "hdr.int_egress_port_tx_util.egress_port_tx_util = 0"
          }
        },
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "int_level2_port_ids"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 77,
            "column" : 12,
            "source_fragment" : "hdr.int_level2_port_ids.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_level2_port_ids", "ingress_port_id"]
            },
            {
              "type" : "hexstr",
              "value" : "0x0000"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 79,
            "column" : 12,
            "source_fragment" : "hdr.int_level2_port_ids.ingress_port_id = 0"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_level2_port_ids", "egress_port_id"]
            },
            {
              "type" : "hexstr",
              "value" : "0x0000"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 80,
            "column" : 12,
            "source_fragment" : "hdr.int_level2_port_ids.egress_port_id = 0"
          }
        },
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "int_egress_tstamp"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 72,
            "column" : 12,
            "source_fragment" : "hdr.int_egress_tstamp.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_egress_tstamp", "egress_tstamp"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["int_egress_tstamp", "egress_tstamp"]
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "&",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "*",
                              "left" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000003e8"
                              },
                              "right" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "&",
                                  "left" : {
                                    "type" : "field",
                                    "value" : ["standard_metadata", "egress_global_timestamp"]
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0xffffffffffffffff"
                                  }
                                }
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xffffffffffffffff"
                          }
                        }
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffffffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 74,
            "column" : 12,
            "source_fragment" : "hdr.int_egress_tstamp.egress_tstamp = hdr.int_egress_tstamp.egress_tstamp + 1000 * _timestamp"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_int_hdr_word_len4"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata._int_metadata_int_hdr_word_len4"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x04"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 104,
            "column" : 47,
            "source_fragment" : "= meta.int_metadata.int_hdr_word_len + 4; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_insert_byte_cnt3"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata._int_metadata_insert_byte_cnt3"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x0010"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 105,
            "column" : 46,
            "source_fragment" : "= meta.int_metadata.insert_byte_cnt + 16; ..."
          }
        }
      ]
    },
    {
      "name" : "egress.Int_transit.int_set_header_0407_i8",
      "id" : 79,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "int_ingress_tstamp"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 67,
            "column" : 12,
            "source_fragment" : "hdr.int_ingress_tstamp.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_ingress_tstamp", "ingress_tstamp"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["int_ingress_tstamp", "ingress_tstamp"]
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "&",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "*",
                              "left" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000003e8"
                              },
                              "right" : {
                                "type" : "field",
                                "value" : ["scalars", "userMetadata._int_metadata_ingress_tstamp7"]
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xffffffffffffffff"
                          }
                        }
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffffffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 69,
            "column" : 12,
            "source_fragment" : "hdr.int_ingress_tstamp.ingress_tstamp = hdr.int_ingress_tstamp.ingress_tstamp + 1000 * _timestamp"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_int_hdr_word_len4"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata._int_metadata_int_hdr_word_len4"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x02"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 94,
            "column" : 47,
            "source_fragment" : "= meta.int_metadata.int_hdr_word_len + 2; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_insert_byte_cnt3"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata._int_metadata_insert_byte_cnt3"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x0008"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 95,
            "column" : 46,
            "source_fragment" : "= meta.int_metadata.insert_byte_cnt + 8; ..."
          }
        }
      ]
    },
    {
      "name" : "egress.Int_transit.int_set_header_0407_i9",
      "id" : 80,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "int_egress_port_tx_util"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 83,
            "column" : 12,
            "source_fragment" : "hdr.int_egress_port_tx_util.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_egress_port_tx_util", "egress_port_tx_util"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00000000"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 85,
            "column" : 12,
            "source_fragment" : "hdr.int_egress_port_tx_util.egress_port_tx_util = 0"
          }
        },
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "int_ingress_tstamp"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 67,
            "column" : 12,
            "source_fragment" : "hdr.int_ingress_tstamp.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_ingress_tstamp", "ingress_tstamp"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["int_ingress_tstamp", "ingress_tstamp"]
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "&",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "*",
                              "left" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000003e8"
                              },
                              "right" : {
                                "type" : "field",
                                "value" : ["scalars", "userMetadata._int_metadata_ingress_tstamp7"]
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xffffffffffffffff"
                          }
                        }
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffffffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 69,
            "column" : 12,
            "source_fragment" : "hdr.int_ingress_tstamp.ingress_tstamp = hdr.int_ingress_tstamp.ingress_tstamp + 1000 * _timestamp"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_int_hdr_word_len4"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata._int_metadata_int_hdr_word_len4"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x03"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 99,
            "column" : 47,
            "source_fragment" : "= meta.int_metadata.int_hdr_word_len + 3; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_insert_byte_cnt3"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata._int_metadata_insert_byte_cnt3"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x000c"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 100,
            "column" : 46,
            "source_fragment" : "= meta.int_metadata.insert_byte_cnt + 12; ..."
          }
        }
      ]
    },
    {
      "name" : "egress.Int_transit.int_set_header_0407_i10",
      "id" : 81,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "int_level2_port_ids"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 77,
            "column" : 12,
            "source_fragment" : "hdr.int_level2_port_ids.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_level2_port_ids", "ingress_port_id"]
            },
            {
              "type" : "hexstr",
              "value" : "0x0000"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 79,
            "column" : 12,
            "source_fragment" : "hdr.int_level2_port_ids.ingress_port_id = 0"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_level2_port_ids", "egress_port_id"]
            },
            {
              "type" : "hexstr",
              "value" : "0x0000"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 80,
            "column" : 12,
            "source_fragment" : "hdr.int_level2_port_ids.egress_port_id = 0"
          }
        },
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "int_ingress_tstamp"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 67,
            "column" : 12,
            "source_fragment" : "hdr.int_ingress_tstamp.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_ingress_tstamp", "ingress_tstamp"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["int_ingress_tstamp", "ingress_tstamp"]
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "&",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "*",
                              "left" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000003e8"
                              },
                              "right" : {
                                "type" : "field",
                                "value" : ["scalars", "userMetadata._int_metadata_ingress_tstamp7"]
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xffffffffffffffff"
                          }
                        }
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffffffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 69,
            "column" : 12,
            "source_fragment" : "hdr.int_ingress_tstamp.ingress_tstamp = hdr.int_ingress_tstamp.ingress_tstamp + 1000 * _timestamp"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_int_hdr_word_len4"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata._int_metadata_int_hdr_word_len4"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x03"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 99,
            "column" : 47,
            "source_fragment" : "= meta.int_metadata.int_hdr_word_len + 3; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_insert_byte_cnt3"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata._int_metadata_insert_byte_cnt3"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x000c"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 100,
            "column" : 46,
            "source_fragment" : "= meta.int_metadata.insert_byte_cnt + 12; ..."
          }
        }
      ]
    },
    {
      "name" : "egress.Int_transit.int_set_header_0407_i11",
      "id" : 82,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "int_egress_port_tx_util"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 83,
            "column" : 12,
            "source_fragment" : "hdr.int_egress_port_tx_util.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_egress_port_tx_util", "egress_port_tx_util"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00000000"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 85,
            "column" : 12,
            "source_fragment" : "hdr.int_egress_port_tx_util.egress_port_tx_util = 0"
          }
        },
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "int_level2_port_ids"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 77,
            "column" : 12,
            "source_fragment" : "hdr.int_level2_port_ids.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_level2_port_ids", "ingress_port_id"]
            },
            {
              "type" : "hexstr",
              "value" : "0x0000"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 79,
            "column" : 12,
            "source_fragment" : "hdr.int_level2_port_ids.ingress_port_id = 0"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_level2_port_ids", "egress_port_id"]
            },
            {
              "type" : "hexstr",
              "value" : "0x0000"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 80,
            "column" : 12,
            "source_fragment" : "hdr.int_level2_port_ids.egress_port_id = 0"
          }
        },
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "int_ingress_tstamp"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 67,
            "column" : 12,
            "source_fragment" : "hdr.int_ingress_tstamp.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_ingress_tstamp", "ingress_tstamp"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["int_ingress_tstamp", "ingress_tstamp"]
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "&",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "*",
                              "left" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000003e8"
                              },
                              "right" : {
                                "type" : "field",
                                "value" : ["scalars", "userMetadata._int_metadata_ingress_tstamp7"]
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xffffffffffffffff"
                          }
                        }
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffffffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 69,
            "column" : 12,
            "source_fragment" : "hdr.int_ingress_tstamp.ingress_tstamp = hdr.int_ingress_tstamp.ingress_tstamp + 1000 * _timestamp"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_int_hdr_word_len4"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata._int_metadata_int_hdr_word_len4"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x04"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 104,
            "column" : 47,
            "source_fragment" : "= meta.int_metadata.int_hdr_word_len + 4; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_insert_byte_cnt3"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata._int_metadata_insert_byte_cnt3"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x0010"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 105,
            "column" : 46,
            "source_fragment" : "= meta.int_metadata.insert_byte_cnt + 16; ..."
          }
        }
      ]
    },
    {
      "name" : "egress.Int_transit.int_set_header_0407_i12",
      "id" : 83,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "int_egress_tstamp"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 72,
            "column" : 12,
            "source_fragment" : "hdr.int_egress_tstamp.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_egress_tstamp", "egress_tstamp"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["int_egress_tstamp", "egress_tstamp"]
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "&",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "*",
                              "left" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000003e8"
                              },
                              "right" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "&",
                                  "left" : {
                                    "type" : "field",
                                    "value" : ["standard_metadata", "egress_global_timestamp"]
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0xffffffffffffffff"
                                  }
                                }
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xffffffffffffffff"
                          }
                        }
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffffffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 74,
            "column" : 12,
            "source_fragment" : "hdr.int_egress_tstamp.egress_tstamp = hdr.int_egress_tstamp.egress_tstamp + 1000 * _timestamp"
          }
        },
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "int_ingress_tstamp"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 67,
            "column" : 12,
            "source_fragment" : "hdr.int_ingress_tstamp.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_ingress_tstamp", "ingress_tstamp"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["int_ingress_tstamp", "ingress_tstamp"]
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "&",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "*",
                              "left" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000003e8"
                              },
                              "right" : {
                                "type" : "field",
                                "value" : ["scalars", "userMetadata._int_metadata_ingress_tstamp7"]
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xffffffffffffffff"
                          }
                        }
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffffffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 69,
            "column" : 12,
            "source_fragment" : "hdr.int_ingress_tstamp.ingress_tstamp = hdr.int_ingress_tstamp.ingress_tstamp + 1000 * _timestamp"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_int_hdr_word_len4"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata._int_metadata_int_hdr_word_len4"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x04"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 104,
            "column" : 47,
            "source_fragment" : "= meta.int_metadata.int_hdr_word_len + 4; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_insert_byte_cnt3"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata._int_metadata_insert_byte_cnt3"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x0010"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 105,
            "column" : 46,
            "source_fragment" : "= meta.int_metadata.insert_byte_cnt + 16; ..."
          }
        }
      ]
    },
    {
      "name" : "egress.Int_transit.int_set_header_0407_i13",
      "id" : 84,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "int_egress_port_tx_util"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 83,
            "column" : 12,
            "source_fragment" : "hdr.int_egress_port_tx_util.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_egress_port_tx_util", "egress_port_tx_util"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00000000"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 85,
            "column" : 12,
            "source_fragment" : "hdr.int_egress_port_tx_util.egress_port_tx_util = 0"
          }
        },
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "int_egress_tstamp"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 72,
            "column" : 12,
            "source_fragment" : "hdr.int_egress_tstamp.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_egress_tstamp", "egress_tstamp"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["int_egress_tstamp", "egress_tstamp"]
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "&",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "*",
                              "left" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000003e8"
                              },
                              "right" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "&",
                                  "left" : {
                                    "type" : "field",
                                    "value" : ["standard_metadata", "egress_global_timestamp"]
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0xffffffffffffffff"
                                  }
                                }
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xffffffffffffffff"
                          }
                        }
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffffffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 74,
            "column" : 12,
            "source_fragment" : "hdr.int_egress_tstamp.egress_tstamp = hdr.int_egress_tstamp.egress_tstamp + 1000 * _timestamp"
          }
        },
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "int_ingress_tstamp"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 67,
            "column" : 12,
            "source_fragment" : "hdr.int_ingress_tstamp.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_ingress_tstamp", "ingress_tstamp"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["int_ingress_tstamp", "ingress_tstamp"]
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "&",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "*",
                              "left" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000003e8"
                              },
                              "right" : {
                                "type" : "field",
                                "value" : ["scalars", "userMetadata._int_metadata_ingress_tstamp7"]
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xffffffffffffffff"
                          }
                        }
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffffffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 69,
            "column" : 12,
            "source_fragment" : "hdr.int_ingress_tstamp.ingress_tstamp = hdr.int_ingress_tstamp.ingress_tstamp + 1000 * _timestamp"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_int_hdr_word_len4"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata._int_metadata_int_hdr_word_len4"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x05"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 110,
            "column" : 47,
            "source_fragment" : "= meta.int_metadata.int_hdr_word_len + 5; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_insert_byte_cnt3"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata._int_metadata_insert_byte_cnt3"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x0014"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 111,
            "column" : 46,
            "source_fragment" : "= meta.int_metadata.insert_byte_cnt + 20; ..."
          }
        }
      ]
    },
    {
      "name" : "egress.Int_transit.int_set_header_0407_i14",
      "id" : 85,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "int_level2_port_ids"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 77,
            "column" : 12,
            "source_fragment" : "hdr.int_level2_port_ids.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_level2_port_ids", "ingress_port_id"]
            },
            {
              "type" : "hexstr",
              "value" : "0x0000"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 79,
            "column" : 12,
            "source_fragment" : "hdr.int_level2_port_ids.ingress_port_id = 0"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_level2_port_ids", "egress_port_id"]
            },
            {
              "type" : "hexstr",
              "value" : "0x0000"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 80,
            "column" : 12,
            "source_fragment" : "hdr.int_level2_port_ids.egress_port_id = 0"
          }
        },
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "int_egress_tstamp"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 72,
            "column" : 12,
            "source_fragment" : "hdr.int_egress_tstamp.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_egress_tstamp", "egress_tstamp"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["int_egress_tstamp", "egress_tstamp"]
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "&",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "*",
                              "left" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000003e8"
                              },
                              "right" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "&",
                                  "left" : {
                                    "type" : "field",
                                    "value" : ["standard_metadata", "egress_global_timestamp"]
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0xffffffffffffffff"
                                  }
                                }
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xffffffffffffffff"
                          }
                        }
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffffffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 74,
            "column" : 12,
            "source_fragment" : "hdr.int_egress_tstamp.egress_tstamp = hdr.int_egress_tstamp.egress_tstamp + 1000 * _timestamp"
          }
        },
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "int_ingress_tstamp"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 67,
            "column" : 12,
            "source_fragment" : "hdr.int_ingress_tstamp.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_ingress_tstamp", "ingress_tstamp"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["int_ingress_tstamp", "ingress_tstamp"]
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "&",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "*",
                              "left" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000003e8"
                              },
                              "right" : {
                                "type" : "field",
                                "value" : ["scalars", "userMetadata._int_metadata_ingress_tstamp7"]
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xffffffffffffffff"
                          }
                        }
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffffffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 69,
            "column" : 12,
            "source_fragment" : "hdr.int_ingress_tstamp.ingress_tstamp = hdr.int_ingress_tstamp.ingress_tstamp + 1000 * _timestamp"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_int_hdr_word_len4"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata._int_metadata_int_hdr_word_len4"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x05"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 110,
            "column" : 47,
            "source_fragment" : "= meta.int_metadata.int_hdr_word_len + 5; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_insert_byte_cnt3"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata._int_metadata_insert_byte_cnt3"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x0014"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 111,
            "column" : 46,
            "source_fragment" : "= meta.int_metadata.insert_byte_cnt + 20; ..."
          }
        }
      ]
    },
    {
      "name" : "egress.Int_transit.int_set_header_0407_i15",
      "id" : 86,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "int_egress_port_tx_util"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 83,
            "column" : 12,
            "source_fragment" : "hdr.int_egress_port_tx_util.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_egress_port_tx_util", "egress_port_tx_util"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00000000"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 85,
            "column" : 12,
            "source_fragment" : "hdr.int_egress_port_tx_util.egress_port_tx_util = 0"
          }
        },
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "int_level2_port_ids"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 77,
            "column" : 12,
            "source_fragment" : "hdr.int_level2_port_ids.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_level2_port_ids", "ingress_port_id"]
            },
            {
              "type" : "hexstr",
              "value" : "0x0000"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 79,
            "column" : 12,
            "source_fragment" : "hdr.int_level2_port_ids.ingress_port_id = 0"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_level2_port_ids", "egress_port_id"]
            },
            {
              "type" : "hexstr",
              "value" : "0x0000"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 80,
            "column" : 12,
            "source_fragment" : "hdr.int_level2_port_ids.egress_port_id = 0"
          }
        },
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "int_egress_tstamp"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 72,
            "column" : 12,
            "source_fragment" : "hdr.int_egress_tstamp.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_egress_tstamp", "egress_tstamp"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["int_egress_tstamp", "egress_tstamp"]
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "&",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "*",
                              "left" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000003e8"
                              },
                              "right" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "&",
                                  "left" : {
                                    "type" : "field",
                                    "value" : ["standard_metadata", "egress_global_timestamp"]
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0xffffffffffffffff"
                                  }
                                }
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xffffffffffffffff"
                          }
                        }
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffffffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 74,
            "column" : 12,
            "source_fragment" : "hdr.int_egress_tstamp.egress_tstamp = hdr.int_egress_tstamp.egress_tstamp + 1000 * _timestamp"
          }
        },
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "int_ingress_tstamp"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 67,
            "column" : 12,
            "source_fragment" : "hdr.int_ingress_tstamp.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_ingress_tstamp", "ingress_tstamp"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["int_ingress_tstamp", "ingress_tstamp"]
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "&",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "*",
                              "left" : {
                                "type" : "hexstr",
                                "value" : "0x00000000000003e8"
                              },
                              "right" : {
                                "type" : "field",
                                "value" : ["scalars", "userMetadata._int_metadata_ingress_tstamp7"]
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xffffffffffffffff"
                          }
                        }
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffffffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 69,
            "column" : 12,
            "source_fragment" : "hdr.int_ingress_tstamp.ingress_tstamp = hdr.int_ingress_tstamp.ingress_tstamp + 1000 * _timestamp"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_int_hdr_word_len4"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata._int_metadata_int_hdr_word_len4"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x06"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 115,
            "column" : 47,
            "source_fragment" : "= meta.int_metadata.int_hdr_word_len + 6; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_insert_byte_cnt3"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata._int_metadata_insert_byte_cnt3"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x0018"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 116,
            "column" : 46,
            "source_fragment" : "= meta.int_metadata.insert_byte_cnt + 24; ..."
          }
        }
      ]
    },
    {
      "name" : "egress.Int_transit.int_hop_cnt_increment",
      "id" : 87,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_header", "remaining_hop_cnt"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["int_header", "remaining_hop_cnt"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 378,
            "column" : 12,
            "source_fragment" : "hdr.int_header.remaining_hop_cnt = hdr.int_header.remaining_hop_cnt - 1"
          }
        }
      ]
    },
    {
      "name" : "egress.Int_transit.int_hop_exceeded",
      "id" : 88,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_header", "e"]
            },
            {
              "type" : "hexstr",
              "value" : "0x01"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 381,
            "column" : 12,
            "source_fragment" : "hdr.int_header.e = 1w1"
          }
        }
      ]
    },
    {
      "name" : "egress.Int_transit.int_update_ip_ac",
      "id" : 89,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ipv4", "totalLen"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "+",
                          "left" : {
                            "type" : "field",
                            "value" : ["ipv4", "totalLen"]
                          },
                          "right" : {
                            "type" : "field",
                            "value" : ["scalars", "userMetadata._int_metadata_insert_byte_cnt3"]
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["ipv4", "totalLen"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "d2b",
                      "left" : null,
                      "right" : {
                        "type" : "field",
                        "value" : ["ipv4", "$valid$"]
                      }
                    }
                  }
                }
              }
            }
          ]
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ipv6", "payload_len"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["ipv6", "payload_len"]
                  },
                  "right" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "+",
                          "left" : {
                            "type" : "field",
                            "value" : ["ipv6", "payload_len"]
                          },
                          "right" : {
                            "type" : "field",
                            "value" : ["scalars", "userMetadata._int_metadata_insert_byte_cnt3"]
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffff"
                      }
                    }
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "d2b",
                      "left" : null,
                      "right" : {
                        "type" : "field",
                        "value" : ["ipv4", "$valid$"]
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      ]
    },
    {
      "name" : "egress.Int_transit.int_update_shim_ac",
      "id" : 90,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["int_shim", "len"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["int_shim", "len"]
                      },
                      "right" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata._int_metadata_int_hdr_word_len4"]
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 391,
            "column" : 12,
            "source_fragment" : "hdr.int_shim.len = hdr.int_shim.len + (bit<8>)meta.int_metadata.int_hdr_word_len"
          }
        }
      ]
    },
    {
      "name" : "egress.Int_transit.int_update_udp_ac",
      "id" : 91,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["udp", "len"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["udp", "len"]
                      },
                      "right" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata._int_metadata_insert_byte_cnt3"]
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 394,
            "column" : 12,
            "source_fragment" : "hdr.udp.len = hdr.udp.len + (bit<16>)meta.int_metadata.insert_byte_cnt"
          }
        }
      ]
    },
    {
      "name" : "egress.Int_sink.Int_report.send_report",
      "id" : 92,
      "runtime_data" : [
        {
          "name" : "dp_mac",
          "bitwidth" : 48
        },
        {
          "name" : "dp_ip",
          "bitwidth" : 32
        },
        {
          "name" : "collector_mac",
          "bitwidth" : 48
        },
        {
          "name" : "collector_ip",
          "bitwidth" : 32
        },
        {
          "name" : "collector_port",
          "bitwidth" : 16
        }
      ],
      "primitives" : [
        {
          "op" : "log_msg",
          "parameters" : [
            {
              "type" : "string",
              "value" : "Sending report\n"
            },
            {
              "type" : "parameters_vector",
              "value" : {
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_report.p4",
            "line" : 36,
            "column" : 12,
            "source_fragment" : "            log_msg(\\\"Sending report\\n\\\");"
          }
        },
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "report_ethernet"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_report.p4",
            "line" : 38,
            "column" : 12,
            "source_fragment" : "hdr.report_ethernet.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["report_ethernet", "dstAddr"]
            },
            {
              "type" : "runtime_data",
              "value" : 2
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_report.p4",
            "line" : 39,
            "column" : 12,
            "source_fragment" : "hdr.report_ethernet.dstAddr = collector_mac"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["report_ethernet", "srcAddr"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_report.p4",
            "line" : 40,
            "column" : 12,
            "source_fragment" : "hdr.report_ethernet.srcAddr = dp_mac"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["report_ethernet", "etherType"]
            },
            {
              "type" : "hexstr",
              "value" : "0x0800"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_report.p4",
            "line" : 41,
            "column" : 12,
            "source_fragment" : "hdr.report_ethernet.etherType = 0x0800"
          }
        },
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "report_ipv4"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_report.p4",
            "line" : 44,
            "column" : 12,
            "source_fragment" : "hdr.report_ipv4.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["report_ipv4", "version"]
            },
            {
              "type" : "hexstr",
              "value" : "0x04"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_report.p4",
            "line" : 45,
            "column" : 12,
            "source_fragment" : "hdr.report_ipv4.version = 4"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["report_ipv4", "ihl"]
            },
            {
              "type" : "hexstr",
              "value" : "0x05"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_report.p4",
            "line" : 46,
            "column" : 12,
            "source_fragment" : "hdr.report_ipv4.ihl = 5"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["report_ipv4", "dscp"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_report.p4",
            "line" : 47,
            "column" : 12,
            "source_fragment" : "hdr.report_ipv4.dscp = 0"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["report_ipv4", "ecn"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_report.p4",
            "line" : 48,
            "column" : 12,
            "source_fragment" : "hdr.report_ipv4.ecn = 0"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["report_ipv4", "totalLen"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "+",
                          "left" : {
                            "type" : "hexstr",
                            "value" : "0x004e"
                          },
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "<<",
                                  "left" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "&",
                                      "left" : {
                                        "type" : "field",
                                        "value" : ["int_shim", "len"]
                                      },
                                      "right" : {
                                        "type" : "hexstr",
                                        "value" : "0xffff"
                                      }
                                    }
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0x2"
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffff"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "+",
                          "left" : {
                            "type" : "hexstr",
                            "value" : "0x0062"
                          },
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "<<",
                                  "left" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "&",
                                      "left" : {
                                        "type" : "field",
                                        "value" : ["int_shim", "len"]
                                      },
                                      "right" : {
                                        "type" : "hexstr",
                                        "value" : "0xffff"
                                      }
                                    }
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0x2"
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffff"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffff"
                      }
                    }
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "d2b",
                      "left" : null,
                      "right" : {
                        "type" : "field",
                        "value" : ["ipv4", "$valid$"]
                      }
                    }
                  }
                }
              }
            }
          ]
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["report_ipv4", "totalLen"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "?",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "&",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "+",
                              "left" : {
                                "type" : "hexstr",
                                "value" : "0x004e"
                              },
                              "right" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "&",
                                  "left" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "<<",
                                      "left" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "&",
                                          "left" : {
                                            "type" : "field",
                                            "value" : ["int_shim", "len"]
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0xffff"
                                          }
                                        }
                                      },
                                      "right" : {
                                        "type" : "hexstr",
                                        "value" : "0x2"
                                      }
                                    }
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0xffff"
                                  }
                                }
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xffff"
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "&",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "+",
                              "left" : {
                                "type" : "hexstr",
                                "value" : "0x0062"
                              },
                              "right" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "&",
                                  "left" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "<<",
                                      "left" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "&",
                                          "left" : {
                                            "type" : "field",
                                            "value" : ["int_shim", "len"]
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0xffff"
                                          }
                                        }
                                      },
                                      "right" : {
                                        "type" : "hexstr",
                                        "value" : "0x2"
                                      }
                                    }
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0xffff"
                                  }
                                }
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xffff"
                          }
                        }
                      },
                      "cond" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "d2b",
                          "left" : null,
                          "right" : {
                            "type" : "field",
                            "value" : ["ipv4", "$valid$"]
                          }
                        }
                      }
                    }
                  },
                  "right" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "?",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "&",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "+",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "&",
                                  "left" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "+",
                                      "left" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "?",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "&",
                                              "left" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "+",
                                                  "left" : {
                                                    "type" : "hexstr",
                                                    "value" : "0x004e"
                                                  },
                                                  "right" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "&",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "<<",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "&",
                                                              "left" : {
                                                                "type" : "field",
                                                                "value" : ["int_shim", "len"]
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0xffff"
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0x2"
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "hexstr",
                                                        "value" : "0xffff"
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "right" : {
                                                "type" : "hexstr",
                                                "value" : "0xffff"
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "&",
                                              "left" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "+",
                                                  "left" : {
                                                    "type" : "hexstr",
                                                    "value" : "0x0062"
                                                  },
                                                  "right" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "&",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "<<",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "&",
                                                              "left" : {
                                                                "type" : "field",
                                                                "value" : ["int_shim", "len"]
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0xffff"
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0x2"
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "hexstr",
                                                        "value" : "0xffff"
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "right" : {
                                                "type" : "hexstr",
                                                "value" : "0xffff"
                                              }
                                            }
                                          },
                                          "cond" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "d2b",
                                              "left" : null,
                                              "right" : {
                                                "type" : "field",
                                                "value" : ["ipv4", "$valid$"]
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "right" : {
                                        "type" : "hexstr",
                                        "value" : "0x0008"
                                      }
                                    }
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0xffff"
                                  }
                                }
                              },
                              "right" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "&",
                                  "left" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "<<",
                                      "left" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "&",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "+",
                                              "left" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "&",
                                                  "left" : {
                                                    "type" : "field",
                                                    "value" : ["srv6h", "last_entry"]
                                                  },
                                                  "right" : {
                                                    "type" : "hexstr",
                                                    "value" : "0xffff"
                                                  }
                                                }
                                              },
                                              "right" : {
                                                "type" : "hexstr",
                                                "value" : "0x0001"
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0xffff"
                                          }
                                        }
                                      },
                                      "right" : {
                                        "type" : "hexstr",
                                        "value" : "0x4"
                                      }
                                    }
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0xffff"
                                  }
                                }
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xffff"
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "?",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "+",
                                  "left" : {
                                    "type" : "hexstr",
                                    "value" : "0x004e"
                                  },
                                  "right" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "&",
                                      "left" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "<<",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "&",
                                              "left" : {
                                                "type" : "field",
                                                "value" : ["int_shim", "len"]
                                              },
                                              "right" : {
                                                "type" : "hexstr",
                                                "value" : "0xffff"
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0x2"
                                          }
                                        }
                                      },
                                      "right" : {
                                        "type" : "hexstr",
                                        "value" : "0xffff"
                                      }
                                    }
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffff"
                              }
                            }
                          },
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "+",
                                  "left" : {
                                    "type" : "hexstr",
                                    "value" : "0x0062"
                                  },
                                  "right" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "&",
                                      "left" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "<<",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "&",
                                              "left" : {
                                                "type" : "field",
                                                "value" : ["int_shim", "len"]
                                              },
                                              "right" : {
                                                "type" : "hexstr",
                                                "value" : "0xffff"
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0x2"
                                          }
                                        }
                                      },
                                      "right" : {
                                        "type" : "hexstr",
                                        "value" : "0xffff"
                                      }
                                    }
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffff"
                              }
                            }
                          },
                          "cond" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "d2b",
                              "left" : null,
                              "right" : {
                                "type" : "field",
                                "value" : ["ipv4", "$valid$"]
                              }
                            }
                          }
                        }
                      },
                      "cond" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "==",
                          "left" : {
                            "type" : "field",
                            "value" : ["ipv6", "next_hdr"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x2b"
                          }
                        }
                      }
                    }
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "d2b",
                      "left" : null,
                      "right" : {
                        "type" : "field",
                        "value" : ["ipv4", "$valid$"]
                      }
                    }
                  }
                }
              }
            }
          ]
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["report_ipv4", "totalLen"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "+",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "?",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "?",
                                  "left" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "&",
                                      "left" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "+",
                                          "left" : {
                                            "type" : "hexstr",
                                            "value" : "0x004e"
                                          },
                                          "right" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "&",
                                              "left" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "<<",
                                                  "left" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "&",
                                                      "left" : {
                                                        "type" : "field",
                                                        "value" : ["int_shim", "len"]
                                                      },
                                                      "right" : {
                                                        "type" : "hexstr",
                                                        "value" : "0xffff"
                                                      }
                                                    }
                                                  },
                                                  "right" : {
                                                    "type" : "hexstr",
                                                    "value" : "0x2"
                                                  }
                                                }
                                              },
                                              "right" : {
                                                "type" : "hexstr",
                                                "value" : "0xffff"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "right" : {
                                        "type" : "hexstr",
                                        "value" : "0xffff"
                                      }
                                    }
                                  },
                                  "right" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "&",
                                      "left" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "+",
                                          "left" : {
                                            "type" : "hexstr",
                                            "value" : "0x0062"
                                          },
                                          "right" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "&",
                                              "left" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "<<",
                                                  "left" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "&",
                                                      "left" : {
                                                        "type" : "field",
                                                        "value" : ["int_shim", "len"]
                                                      },
                                                      "right" : {
                                                        "type" : "hexstr",
                                                        "value" : "0xffff"
                                                      }
                                                    }
                                                  },
                                                  "right" : {
                                                    "type" : "hexstr",
                                                    "value" : "0x2"
                                                  }
                                                }
                                              },
                                              "right" : {
                                                "type" : "hexstr",
                                                "value" : "0xffff"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "right" : {
                                        "type" : "hexstr",
                                        "value" : "0xffff"
                                      }
                                    }
                                  },
                                  "cond" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "d2b",
                                      "left" : null,
                                      "right" : {
                                        "type" : "field",
                                        "value" : ["ipv4", "$valid$"]
                                      }
                                    }
                                  }
                                }
                              },
                              "right" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "?",
                                  "left" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "&",
                                      "left" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "+",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "&",
                                              "left" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "+",
                                                  "left" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "?",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "&",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "+",
                                                              "left" : {
                                                                "type" : "hexstr",
                                                                "value" : "0x004e"
                                                              },
                                                              "right" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "&",
                                                                  "left" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "<<",
                                                                      "left" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "&",
                                                                          "left" : {
                                                                            "type" : "field",
                                                                            "value" : ["int_shim", "len"]
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0xffff"
                                                                          }
                                                                        }
                                                                      },
                                                                      "right" : {
                                                                        "type" : "hexstr",
                                                                        "value" : "0x2"
                                                                      }
                                                                    }
                                                                  },
                                                                  "right" : {
                                                                    "type" : "hexstr",
                                                                    "value" : "0xffff"
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0xffff"
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "&",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "+",
                                                              "left" : {
                                                                "type" : "hexstr",
                                                                "value" : "0x0062"
                                                              },
                                                              "right" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "&",
                                                                  "left" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "<<",
                                                                      "left" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "&",
                                                                          "left" : {
                                                                            "type" : "field",
                                                                            "value" : ["int_shim", "len"]
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0xffff"
                                                                          }
                                                                        }
                                                                      },
                                                                      "right" : {
                                                                        "type" : "hexstr",
                                                                        "value" : "0x2"
                                                                      }
                                                                    }
                                                                  },
                                                                  "right" : {
                                                                    "type" : "hexstr",
                                                                    "value" : "0xffff"
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0xffff"
                                                          }
                                                        }
                                                      },
                                                      "cond" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "d2b",
                                                          "left" : null,
                                                          "right" : {
                                                            "type" : "field",
                                                            "value" : ["ipv4", "$valid$"]
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "right" : {
                                                    "type" : "hexstr",
                                                    "value" : "0x0008"
                                                  }
                                                }
                                              },
                                              "right" : {
                                                "type" : "hexstr",
                                                "value" : "0xffff"
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "&",
                                              "left" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "<<",
                                                  "left" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "&",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "+",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "&",
                                                              "left" : {
                                                                "type" : "field",
                                                                "value" : ["srv6h", "last_entry"]
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0xffff"
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0x0001"
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "hexstr",
                                                        "value" : "0xffff"
                                                      }
                                                    }
                                                  },
                                                  "right" : {
                                                    "type" : "hexstr",
                                                    "value" : "0x4"
                                                  }
                                                }
                                              },
                                              "right" : {
                                                "type" : "hexstr",
                                                "value" : "0xffff"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "right" : {
                                        "type" : "hexstr",
                                        "value" : "0xffff"
                                      }
                                    }
                                  },
                                  "right" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "?",
                                      "left" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "&",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "+",
                                              "left" : {
                                                "type" : "hexstr",
                                                "value" : "0x004e"
                                              },
                                              "right" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "&",
                                                  "left" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "<<",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "&",
                                                          "left" : {
                                                            "type" : "field",
                                                            "value" : ["int_shim", "len"]
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0xffff"
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "hexstr",
                                                        "value" : "0x2"
                                                      }
                                                    }
                                                  },
                                                  "right" : {
                                                    "type" : "hexstr",
                                                    "value" : "0xffff"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0xffff"
                                          }
                                        }
                                      },
                                      "right" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "&",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "+",
                                              "left" : {
                                                "type" : "hexstr",
                                                "value" : "0x0062"
                                              },
                                              "right" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "&",
                                                  "left" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "<<",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "&",
                                                          "left" : {
                                                            "type" : "field",
                                                            "value" : ["int_shim", "len"]
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0xffff"
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "hexstr",
                                                        "value" : "0x2"
                                                      }
                                                    }
                                                  },
                                                  "right" : {
                                                    "type" : "hexstr",
                                                    "value" : "0xffff"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0xffff"
                                          }
                                        }
                                      },
                                      "cond" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "d2b",
                                          "left" : null,
                                          "right" : {
                                            "type" : "field",
                                            "value" : ["ipv4", "$valid$"]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "cond" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "==",
                                      "left" : {
                                        "type" : "field",
                                        "value" : ["ipv6", "next_hdr"]
                                      },
                                      "right" : {
                                        "type" : "hexstr",
                                        "value" : "0x2b"
                                      }
                                    }
                                  }
                                }
                              },
                              "cond" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "d2b",
                                  "left" : null,
                                  "right" : {
                                    "type" : "field",
                                    "value" : ["ipv4", "$valid$"]
                                  }
                                }
                              }
                            }
                          },
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "<<",
                                  "left" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "&",
                                      "left" : {
                                        "type" : "field",
                                        "value" : ["tcp", "dataOffset"]
                                      },
                                      "right" : {
                                        "type" : "hexstr",
                                        "value" : "0xffff"
                                      }
                                    }
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0x2"
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffff"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "?",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "?",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "+",
                                  "left" : {
                                    "type" : "hexstr",
                                    "value" : "0x004e"
                                  },
                                  "right" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "&",
                                      "left" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "<<",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "&",
                                              "left" : {
                                                "type" : "field",
                                                "value" : ["int_shim", "len"]
                                              },
                                              "right" : {
                                                "type" : "hexstr",
                                                "value" : "0xffff"
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0x2"
                                          }
                                        }
                                      },
                                      "right" : {
                                        "type" : "hexstr",
                                        "value" : "0xffff"
                                      }
                                    }
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffff"
                              }
                            }
                          },
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "+",
                                  "left" : {
                                    "type" : "hexstr",
                                    "value" : "0x0062"
                                  },
                                  "right" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "&",
                                      "left" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "<<",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "&",
                                              "left" : {
                                                "type" : "field",
                                                "value" : ["int_shim", "len"]
                                              },
                                              "right" : {
                                                "type" : "hexstr",
                                                "value" : "0xffff"
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0x2"
                                          }
                                        }
                                      },
                                      "right" : {
                                        "type" : "hexstr",
                                        "value" : "0xffff"
                                      }
                                    }
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffff"
                              }
                            }
                          },
                          "cond" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "d2b",
                              "left" : null,
                              "right" : {
                                "type" : "field",
                                "value" : ["ipv4", "$valid$"]
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "?",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "+",
                                  "left" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "&",
                                      "left" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "+",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "?",
                                              "left" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "&",
                                                  "left" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "+",
                                                      "left" : {
                                                        "type" : "hexstr",
                                                        "value" : "0x004e"
                                                      },
                                                      "right" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "&",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "<<",
                                                              "left" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "&",
                                                                  "left" : {
                                                                    "type" : "field",
                                                                    "value" : ["int_shim", "len"]
                                                                  },
                                                                  "right" : {
                                                                    "type" : "hexstr",
                                                                    "value" : "0xffff"
                                                                  }
                                                                }
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0x2"
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0xffff"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "right" : {
                                                    "type" : "hexstr",
                                                    "value" : "0xffff"
                                                  }
                                                }
                                              },
                                              "right" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "&",
                                                  "left" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "+",
                                                      "left" : {
                                                        "type" : "hexstr",
                                                        "value" : "0x0062"
                                                      },
                                                      "right" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "&",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "<<",
                                                              "left" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "&",
                                                                  "left" : {
                                                                    "type" : "field",
                                                                    "value" : ["int_shim", "len"]
                                                                  },
                                                                  "right" : {
                                                                    "type" : "hexstr",
                                                                    "value" : "0xffff"
                                                                  }
                                                                }
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0x2"
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0xffff"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "right" : {
                                                    "type" : "hexstr",
                                                    "value" : "0xffff"
                                                  }
                                                }
                                              },
                                              "cond" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "d2b",
                                                  "left" : null,
                                                  "right" : {
                                                    "type" : "field",
                                                    "value" : ["ipv4", "$valid$"]
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0x0008"
                                          }
                                        }
                                      },
                                      "right" : {
                                        "type" : "hexstr",
                                        "value" : "0xffff"
                                      }
                                    }
                                  },
                                  "right" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "&",
                                      "left" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "<<",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "&",
                                              "left" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "+",
                                                  "left" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "&",
                                                      "left" : {
                                                        "type" : "field",
                                                        "value" : ["srv6h", "last_entry"]
                                                      },
                                                      "right" : {
                                                        "type" : "hexstr",
                                                        "value" : "0xffff"
                                                      }
                                                    }
                                                  },
                                                  "right" : {
                                                    "type" : "hexstr",
                                                    "value" : "0x0001"
                                                  }
                                                }
                                              },
                                              "right" : {
                                                "type" : "hexstr",
                                                "value" : "0xffff"
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0x4"
                                          }
                                        }
                                      },
                                      "right" : {
                                        "type" : "hexstr",
                                        "value" : "0xffff"
                                      }
                                    }
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffff"
                              }
                            }
                          },
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "?",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "&",
                                  "left" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "+",
                                      "left" : {
                                        "type" : "hexstr",
                                        "value" : "0x004e"
                                      },
                                      "right" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "&",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "<<",
                                              "left" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "&",
                                                  "left" : {
                                                    "type" : "field",
                                                    "value" : ["int_shim", "len"]
                                                  },
                                                  "right" : {
                                                    "type" : "hexstr",
                                                    "value" : "0xffff"
                                                  }
                                                }
                                              },
                                              "right" : {
                                                "type" : "hexstr",
                                                "value" : "0x2"
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0xffff"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0xffff"
                                  }
                                }
                              },
                              "right" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "&",
                                  "left" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "+",
                                      "left" : {
                                        "type" : "hexstr",
                                        "value" : "0x0062"
                                      },
                                      "right" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "&",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "<<",
                                              "left" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "&",
                                                  "left" : {
                                                    "type" : "field",
                                                    "value" : ["int_shim", "len"]
                                                  },
                                                  "right" : {
                                                    "type" : "hexstr",
                                                    "value" : "0xffff"
                                                  }
                                                }
                                              },
                                              "right" : {
                                                "type" : "hexstr",
                                                "value" : "0x2"
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0xffff"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0xffff"
                                  }
                                }
                              },
                              "cond" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "d2b",
                                  "left" : null,
                                  "right" : {
                                    "type" : "field",
                                    "value" : ["ipv4", "$valid$"]
                                  }
                                }
                              }
                            }
                          },
                          "cond" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "==",
                              "left" : {
                                "type" : "field",
                                "value" : ["ipv6", "next_hdr"]
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x2b"
                              }
                            }
                          }
                        }
                      },
                      "cond" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "d2b",
                          "left" : null,
                          "right" : {
                            "type" : "field",
                            "value" : ["ipv4", "$valid$"]
                          }
                        }
                      }
                    }
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "d2b",
                      "left" : null,
                      "right" : {
                        "type" : "field",
                        "value" : ["tcp", "$valid$"]
                      }
                    }
                  }
                }
              }
            }
          ]
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["report_ipv4", "totalLen"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "?",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "&",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "+",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "?",
                                  "left" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "?",
                                      "left" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "&",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "+",
                                              "left" : {
                                                "type" : "hexstr",
                                                "value" : "0x004e"
                                              },
                                              "right" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "&",
                                                  "left" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "<<",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "&",
                                                          "left" : {
                                                            "type" : "field",
                                                            "value" : ["int_shim", "len"]
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0xffff"
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "hexstr",
                                                        "value" : "0x2"
                                                      }
                                                    }
                                                  },
                                                  "right" : {
                                                    "type" : "hexstr",
                                                    "value" : "0xffff"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0xffff"
                                          }
                                        }
                                      },
                                      "right" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "&",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "+",
                                              "left" : {
                                                "type" : "hexstr",
                                                "value" : "0x0062"
                                              },
                                              "right" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "&",
                                                  "left" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "<<",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "&",
                                                          "left" : {
                                                            "type" : "field",
                                                            "value" : ["int_shim", "len"]
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0xffff"
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "hexstr",
                                                        "value" : "0x2"
                                                      }
                                                    }
                                                  },
                                                  "right" : {
                                                    "type" : "hexstr",
                                                    "value" : "0xffff"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0xffff"
                                          }
                                        }
                                      },
                                      "cond" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "d2b",
                                          "left" : null,
                                          "right" : {
                                            "type" : "field",
                                            "value" : ["ipv4", "$valid$"]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "right" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "?",
                                      "left" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "&",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "+",
                                              "left" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "&",
                                                  "left" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "+",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "?",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "&",
                                                              "left" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "+",
                                                                  "left" : {
                                                                    "type" : "hexstr",
                                                                    "value" : "0x004e"
                                                                  },
                                                                  "right" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "&",
                                                                      "left" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "<<",
                                                                          "left" : {
                                                                            "type" : "expression",
                                                                            "value" : {
                                                                              "op" : "&",
                                                                              "left" : {
                                                                                "type" : "field",
                                                                                "value" : ["int_shim", "len"]
                                                                              },
                                                                              "right" : {
                                                                                "type" : "hexstr",
                                                                                "value" : "0xffff"
                                                                              }
                                                                            }
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0x2"
                                                                          }
                                                                        }
                                                                      },
                                                                      "right" : {
                                                                        "type" : "hexstr",
                                                                        "value" : "0xffff"
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0xffff"
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "&",
                                                              "left" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "+",
                                                                  "left" : {
                                                                    "type" : "hexstr",
                                                                    "value" : "0x0062"
                                                                  },
                                                                  "right" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "&",
                                                                      "left" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "<<",
                                                                          "left" : {
                                                                            "type" : "expression",
                                                                            "value" : {
                                                                              "op" : "&",
                                                                              "left" : {
                                                                                "type" : "field",
                                                                                "value" : ["int_shim", "len"]
                                                                              },
                                                                              "right" : {
                                                                                "type" : "hexstr",
                                                                                "value" : "0xffff"
                                                                              }
                                                                            }
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0x2"
                                                                          }
                                                                        }
                                                                      },
                                                                      "right" : {
                                                                        "type" : "hexstr",
                                                                        "value" : "0xffff"
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0xffff"
                                                              }
                                                            }
                                                          },
                                                          "cond" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "d2b",
                                                              "left" : null,
                                                              "right" : {
                                                                "type" : "field",
                                                                "value" : ["ipv4", "$valid$"]
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "hexstr",
                                                        "value" : "0x0008"
                                                      }
                                                    }
                                                  },
                                                  "right" : {
                                                    "type" : "hexstr",
                                                    "value" : "0xffff"
                                                  }
                                                }
                                              },
                                              "right" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "&",
                                                  "left" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "<<",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "&",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "+",
                                                              "left" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "&",
                                                                  "left" : {
                                                                    "type" : "field",
                                                                    "value" : ["srv6h", "last_entry"]
                                                                  },
                                                                  "right" : {
                                                                    "type" : "hexstr",
                                                                    "value" : "0xffff"
                                                                  }
                                                                }
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0x0001"
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0xffff"
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "hexstr",
                                                        "value" : "0x4"
                                                      }
                                                    }
                                                  },
                                                  "right" : {
                                                    "type" : "hexstr",
                                                    "value" : "0xffff"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0xffff"
                                          }
                                        }
                                      },
                                      "right" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "?",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "&",
                                              "left" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "+",
                                                  "left" : {
                                                    "type" : "hexstr",
                                                    "value" : "0x004e"
                                                  },
                                                  "right" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "&",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "<<",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "&",
                                                              "left" : {
                                                                "type" : "field",
                                                                "value" : ["int_shim", "len"]
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0xffff"
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0x2"
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "hexstr",
                                                        "value" : "0xffff"
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "right" : {
                                                "type" : "hexstr",
                                                "value" : "0xffff"
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "&",
                                              "left" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "+",
                                                  "left" : {
                                                    "type" : "hexstr",
                                                    "value" : "0x0062"
                                                  },
                                                  "right" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "&",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "<<",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "&",
                                                              "left" : {
                                                                "type" : "field",
                                                                "value" : ["int_shim", "len"]
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0xffff"
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0x2"
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "hexstr",
                                                        "value" : "0xffff"
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "right" : {
                                                "type" : "hexstr",
                                                "value" : "0xffff"
                                              }
                                            }
                                          },
                                          "cond" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "d2b",
                                              "left" : null,
                                              "right" : {
                                                "type" : "field",
                                                "value" : ["ipv4", "$valid$"]
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "cond" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "==",
                                          "left" : {
                                            "type" : "field",
                                            "value" : ["ipv6", "next_hdr"]
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0x2b"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "cond" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "d2b",
                                      "left" : null,
                                      "right" : {
                                        "type" : "field",
                                        "value" : ["ipv4", "$valid$"]
                                      }
                                    }
                                  }
                                }
                              },
                              "right" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "&",
                                  "left" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "<<",
                                      "left" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "&",
                                          "left" : {
                                            "type" : "field",
                                            "value" : ["tcp", "dataOffset"]
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0xffff"
                                          }
                                        }
                                      },
                                      "right" : {
                                        "type" : "hexstr",
                                        "value" : "0x2"
                                      }
                                    }
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0xffff"
                                  }
                                }
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xffff"
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "?",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "?",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "&",
                                  "left" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "+",
                                      "left" : {
                                        "type" : "hexstr",
                                        "value" : "0x004e"
                                      },
                                      "right" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "&",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "<<",
                                              "left" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "&",
                                                  "left" : {
                                                    "type" : "field",
                                                    "value" : ["int_shim", "len"]
                                                  },
                                                  "right" : {
                                                    "type" : "hexstr",
                                                    "value" : "0xffff"
                                                  }
                                                }
                                              },
                                              "right" : {
                                                "type" : "hexstr",
                                                "value" : "0x2"
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0xffff"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0xffff"
                                  }
                                }
                              },
                              "right" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "&",
                                  "left" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "+",
                                      "left" : {
                                        "type" : "hexstr",
                                        "value" : "0x0062"
                                      },
                                      "right" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "&",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "<<",
                                              "left" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "&",
                                                  "left" : {
                                                    "type" : "field",
                                                    "value" : ["int_shim", "len"]
                                                  },
                                                  "right" : {
                                                    "type" : "hexstr",
                                                    "value" : "0xffff"
                                                  }
                                                }
                                              },
                                              "right" : {
                                                "type" : "hexstr",
                                                "value" : "0x2"
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0xffff"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0xffff"
                                  }
                                }
                              },
                              "cond" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "d2b",
                                  "left" : null,
                                  "right" : {
                                    "type" : "field",
                                    "value" : ["ipv4", "$valid$"]
                                  }
                                }
                              }
                            }
                          },
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "?",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "&",
                                  "left" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "+",
                                      "left" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "&",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "+",
                                              "left" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "?",
                                                  "left" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "&",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "+",
                                                          "left" : {
                                                            "type" : "hexstr",
                                                            "value" : "0x004e"
                                                          },
                                                          "right" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "&",
                                                              "left" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "<<",
                                                                  "left" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "&",
                                                                      "left" : {
                                                                        "type" : "field",
                                                                        "value" : ["int_shim", "len"]
                                                                      },
                                                                      "right" : {
                                                                        "type" : "hexstr",
                                                                        "value" : "0xffff"
                                                                      }
                                                                    }
                                                                  },
                                                                  "right" : {
                                                                    "type" : "hexstr",
                                                                    "value" : "0x2"
                                                                  }
                                                                }
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0xffff"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "hexstr",
                                                        "value" : "0xffff"
                                                      }
                                                    }
                                                  },
                                                  "right" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "&",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "+",
                                                          "left" : {
                                                            "type" : "hexstr",
                                                            "value" : "0x0062"
                                                          },
                                                          "right" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "&",
                                                              "left" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "<<",
                                                                  "left" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "&",
                                                                      "left" : {
                                                                        "type" : "field",
                                                                        "value" : ["int_shim", "len"]
                                                                      },
                                                                      "right" : {
                                                                        "type" : "hexstr",
                                                                        "value" : "0xffff"
                                                                      }
                                                                    }
                                                                  },
                                                                  "right" : {
                                                                    "type" : "hexstr",
                                                                    "value" : "0x2"
                                                                  }
                                                                }
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0xffff"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "hexstr",
                                                        "value" : "0xffff"
                                                      }
                                                    }
                                                  },
                                                  "cond" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "d2b",
                                                      "left" : null,
                                                      "right" : {
                                                        "type" : "field",
                                                        "value" : ["ipv4", "$valid$"]
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "right" : {
                                                "type" : "hexstr",
                                                "value" : "0x0008"
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0xffff"
                                          }
                                        }
                                      },
                                      "right" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "&",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "<<",
                                              "left" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "&",
                                                  "left" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "+",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "&",
                                                          "left" : {
                                                            "type" : "field",
                                                            "value" : ["srv6h", "last_entry"]
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0xffff"
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "hexstr",
                                                        "value" : "0x0001"
                                                      }
                                                    }
                                                  },
                                                  "right" : {
                                                    "type" : "hexstr",
                                                    "value" : "0xffff"
                                                  }
                                                }
                                              },
                                              "right" : {
                                                "type" : "hexstr",
                                                "value" : "0x4"
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0xffff"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0xffff"
                                  }
                                }
                              },
                              "right" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "?",
                                  "left" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "&",
                                      "left" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "+",
                                          "left" : {
                                            "type" : "hexstr",
                                            "value" : "0x004e"
                                          },
                                          "right" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "&",
                                              "left" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "<<",
                                                  "left" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "&",
                                                      "left" : {
                                                        "type" : "field",
                                                        "value" : ["int_shim", "len"]
                                                      },
                                                      "right" : {
                                                        "type" : "hexstr",
                                                        "value" : "0xffff"
                                                      }
                                                    }
                                                  },
                                                  "right" : {
                                                    "type" : "hexstr",
                                                    "value" : "0x2"
                                                  }
                                                }
                                              },
                                              "right" : {
                                                "type" : "hexstr",
                                                "value" : "0xffff"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "right" : {
                                        "type" : "hexstr",
                                        "value" : "0xffff"
                                      }
                                    }
                                  },
                                  "right" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "&",
                                      "left" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "+",
                                          "left" : {
                                            "type" : "hexstr",
                                            "value" : "0x0062"
                                          },
                                          "right" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "&",
                                              "left" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "<<",
                                                  "left" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "&",
                                                      "left" : {
                                                        "type" : "field",
                                                        "value" : ["int_shim", "len"]
                                                      },
                                                      "right" : {
                                                        "type" : "hexstr",
                                                        "value" : "0xffff"
                                                      }
                                                    }
                                                  },
                                                  "right" : {
                                                    "type" : "hexstr",
                                                    "value" : "0x2"
                                                  }
                                                }
                                              },
                                              "right" : {
                                                "type" : "hexstr",
                                                "value" : "0xffff"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "right" : {
                                        "type" : "hexstr",
                                        "value" : "0xffff"
                                      }
                                    }
                                  },
                                  "cond" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "d2b",
                                      "left" : null,
                                      "right" : {
                                        "type" : "field",
                                        "value" : ["ipv4", "$valid$"]
                                      }
                                    }
                                  }
                                }
                              },
                              "cond" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "==",
                                  "left" : {
                                    "type" : "field",
                                    "value" : ["ipv6", "next_hdr"]
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0x2b"
                                  }
                                }
                              }
                            }
                          },
                          "cond" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "d2b",
                              "left" : null,
                              "right" : {
                                "type" : "field",
                                "value" : ["ipv4", "$valid$"]
                              }
                            }
                          }
                        }
                      },
                      "cond" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "d2b",
                          "left" : null,
                          "right" : {
                            "type" : "field",
                            "value" : ["tcp", "$valid$"]
                          }
                        }
                      }
                    }
                  },
                  "right" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "+",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "?",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "&",
                                  "left" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "+",
                                      "left" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "?",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "?",
                                              "left" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "&",
                                                  "left" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "+",
                                                      "left" : {
                                                        "type" : "hexstr",
                                                        "value" : "0x004e"
                                                      },
                                                      "right" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "&",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "<<",
                                                              "left" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "&",
                                                                  "left" : {
                                                                    "type" : "field",
                                                                    "value" : ["int_shim", "len"]
                                                                  },
                                                                  "right" : {
                                                                    "type" : "hexstr",
                                                                    "value" : "0xffff"
                                                                  }
                                                                }
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0x2"
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0xffff"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "right" : {
                                                    "type" : "hexstr",
                                                    "value" : "0xffff"
                                                  }
                                                }
                                              },
                                              "right" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "&",
                                                  "left" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "+",
                                                      "left" : {
                                                        "type" : "hexstr",
                                                        "value" : "0x0062"
                                                      },
                                                      "right" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "&",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "<<",
                                                              "left" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "&",
                                                                  "left" : {
                                                                    "type" : "field",
                                                                    "value" : ["int_shim", "len"]
                                                                  },
                                                                  "right" : {
                                                                    "type" : "hexstr",
                                                                    "value" : "0xffff"
                                                                  }
                                                                }
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0x2"
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0xffff"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "right" : {
                                                    "type" : "hexstr",
                                                    "value" : "0xffff"
                                                  }
                                                }
                                              },
                                              "cond" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "d2b",
                                                  "left" : null,
                                                  "right" : {
                                                    "type" : "field",
                                                    "value" : ["ipv4", "$valid$"]
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "?",
                                              "left" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "&",
                                                  "left" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "+",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "&",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "+",
                                                              "left" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "?",
                                                                  "left" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "&",
                                                                      "left" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "+",
                                                                          "left" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0x004e"
                                                                          },
                                                                          "right" : {
                                                                            "type" : "expression",
                                                                            "value" : {
                                                                              "op" : "&",
                                                                              "left" : {
                                                                                "type" : "expression",
                                                                                "value" : {
                                                                                  "op" : "<<",
                                                                                  "left" : {
                                                                                    "type" : "expression",
                                                                                    "value" : {
                                                                                      "op" : "&",
                                                                                      "left" : {
                                                                                        "type" : "field",
                                                                                        "value" : ["int_shim", "len"]
                                                                                      },
                                                                                      "right" : {
                                                                                        "type" : "hexstr",
                                                                                        "value" : "0xffff"
                                                                                      }
                                                                                    }
                                                                                  },
                                                                                  "right" : {
                                                                                    "type" : "hexstr",
                                                                                    "value" : "0x2"
                                                                                  }
                                                                                }
                                                                              },
                                                                              "right" : {
                                                                                "type" : "hexstr",
                                                                                "value" : "0xffff"
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      },
                                                                      "right" : {
                                                                        "type" : "hexstr",
                                                                        "value" : "0xffff"
                                                                      }
                                                                    }
                                                                  },
                                                                  "right" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "&",
                                                                      "left" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "+",
                                                                          "left" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0x0062"
                                                                          },
                                                                          "right" : {
                                                                            "type" : "expression",
                                                                            "value" : {
                                                                              "op" : "&",
                                                                              "left" : {
                                                                                "type" : "expression",
                                                                                "value" : {
                                                                                  "op" : "<<",
                                                                                  "left" : {
                                                                                    "type" : "expression",
                                                                                    "value" : {
                                                                                      "op" : "&",
                                                                                      "left" : {
                                                                                        "type" : "field",
                                                                                        "value" : ["int_shim", "len"]
                                                                                      },
                                                                                      "right" : {
                                                                                        "type" : "hexstr",
                                                                                        "value" : "0xffff"
                                                                                      }
                                                                                    }
                                                                                  },
                                                                                  "right" : {
                                                                                    "type" : "hexstr",
                                                                                    "value" : "0x2"
                                                                                  }
                                                                                }
                                                                              },
                                                                              "right" : {
                                                                                "type" : "hexstr",
                                                                                "value" : "0xffff"
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      },
                                                                      "right" : {
                                                                        "type" : "hexstr",
                                                                        "value" : "0xffff"
                                                                      }
                                                                    }
                                                                  },
                                                                  "cond" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "d2b",
                                                                      "left" : null,
                                                                      "right" : {
                                                                        "type" : "field",
                                                                        "value" : ["ipv4", "$valid$"]
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0x0008"
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0xffff"
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "&",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "<<",
                                                              "left" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "&",
                                                                  "left" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "+",
                                                                      "left" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "&",
                                                                          "left" : {
                                                                            "type" : "field",
                                                                            "value" : ["srv6h", "last_entry"]
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0xffff"
                                                                          }
                                                                        }
                                                                      },
                                                                      "right" : {
                                                                        "type" : "hexstr",
                                                                        "value" : "0x0001"
                                                                      }
                                                                    }
                                                                  },
                                                                  "right" : {
                                                                    "type" : "hexstr",
                                                                    "value" : "0xffff"
                                                                  }
                                                                }
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0x4"
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0xffff"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "right" : {
                                                    "type" : "hexstr",
                                                    "value" : "0xffff"
                                                  }
                                                }
                                              },
                                              "right" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "?",
                                                  "left" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "&",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "+",
                                                          "left" : {
                                                            "type" : "hexstr",
                                                            "value" : "0x004e"
                                                          },
                                                          "right" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "&",
                                                              "left" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "<<",
                                                                  "left" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "&",
                                                                      "left" : {
                                                                        "type" : "field",
                                                                        "value" : ["int_shim", "len"]
                                                                      },
                                                                      "right" : {
                                                                        "type" : "hexstr",
                                                                        "value" : "0xffff"
                                                                      }
                                                                    }
                                                                  },
                                                                  "right" : {
                                                                    "type" : "hexstr",
                                                                    "value" : "0x2"
                                                                  }
                                                                }
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0xffff"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "hexstr",
                                                        "value" : "0xffff"
                                                      }
                                                    }
                                                  },
                                                  "right" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "&",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "+",
                                                          "left" : {
                                                            "type" : "hexstr",
                                                            "value" : "0x0062"
                                                          },
                                                          "right" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "&",
                                                              "left" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "<<",
                                                                  "left" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "&",
                                                                      "left" : {
                                                                        "type" : "field",
                                                                        "value" : ["int_shim", "len"]
                                                                      },
                                                                      "right" : {
                                                                        "type" : "hexstr",
                                                                        "value" : "0xffff"
                                                                      }
                                                                    }
                                                                  },
                                                                  "right" : {
                                                                    "type" : "hexstr",
                                                                    "value" : "0x2"
                                                                  }
                                                                }
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0xffff"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "hexstr",
                                                        "value" : "0xffff"
                                                      }
                                                    }
                                                  },
                                                  "cond" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "d2b",
                                                      "left" : null,
                                                      "right" : {
                                                        "type" : "field",
                                                        "value" : ["ipv4", "$valid$"]
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "cond" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "==",
                                                  "left" : {
                                                    "type" : "field",
                                                    "value" : ["ipv6", "next_hdr"]
                                                  },
                                                  "right" : {
                                                    "type" : "hexstr",
                                                    "value" : "0x2b"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "cond" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "d2b",
                                              "left" : null,
                                              "right" : {
                                                "type" : "field",
                                                "value" : ["ipv4", "$valid$"]
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "right" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "&",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "<<",
                                              "left" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "&",
                                                  "left" : {
                                                    "type" : "field",
                                                    "value" : ["tcp", "dataOffset"]
                                                  },
                                                  "right" : {
                                                    "type" : "hexstr",
                                                    "value" : "0xffff"
                                                  }
                                                }
                                              },
                                              "right" : {
                                                "type" : "hexstr",
                                                "value" : "0x2"
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0xffff"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0xffff"
                                  }
                                }
                              },
                              "right" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "?",
                                  "left" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "?",
                                      "left" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "&",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "+",
                                              "left" : {
                                                "type" : "hexstr",
                                                "value" : "0x004e"
                                              },
                                              "right" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "&",
                                                  "left" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "<<",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "&",
                                                          "left" : {
                                                            "type" : "field",
                                                            "value" : ["int_shim", "len"]
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0xffff"
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "hexstr",
                                                        "value" : "0x2"
                                                      }
                                                    }
                                                  },
                                                  "right" : {
                                                    "type" : "hexstr",
                                                    "value" : "0xffff"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0xffff"
                                          }
                                        }
                                      },
                                      "right" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "&",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "+",
                                              "left" : {
                                                "type" : "hexstr",
                                                "value" : "0x0062"
                                              },
                                              "right" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "&",
                                                  "left" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "<<",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "&",
                                                          "left" : {
                                                            "type" : "field",
                                                            "value" : ["int_shim", "len"]
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0xffff"
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "hexstr",
                                                        "value" : "0x2"
                                                      }
                                                    }
                                                  },
                                                  "right" : {
                                                    "type" : "hexstr",
                                                    "value" : "0xffff"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0xffff"
                                          }
                                        }
                                      },
                                      "cond" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "d2b",
                                          "left" : null,
                                          "right" : {
                                            "type" : "field",
                                            "value" : ["ipv4", "$valid$"]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "right" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "?",
                                      "left" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "&",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "+",
                                              "left" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "&",
                                                  "left" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "+",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "?",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "&",
                                                              "left" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "+",
                                                                  "left" : {
                                                                    "type" : "hexstr",
                                                                    "value" : "0x004e"
                                                                  },
                                                                  "right" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "&",
                                                                      "left" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "<<",
                                                                          "left" : {
                                                                            "type" : "expression",
                                                                            "value" : {
                                                                              "op" : "&",
                                                                              "left" : {
                                                                                "type" : "field",
                                                                                "value" : ["int_shim", "len"]
                                                                              },
                                                                              "right" : {
                                                                                "type" : "hexstr",
                                                                                "value" : "0xffff"
                                                                              }
                                                                            }
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0x2"
                                                                          }
                                                                        }
                                                                      },
                                                                      "right" : {
                                                                        "type" : "hexstr",
                                                                        "value" : "0xffff"
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0xffff"
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "&",
                                                              "left" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "+",
                                                                  "left" : {
                                                                    "type" : "hexstr",
                                                                    "value" : "0x0062"
                                                                  },
                                                                  "right" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "&",
                                                                      "left" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "<<",
                                                                          "left" : {
                                                                            "type" : "expression",
                                                                            "value" : {
                                                                              "op" : "&",
                                                                              "left" : {
                                                                                "type" : "field",
                                                                                "value" : ["int_shim", "len"]
                                                                              },
                                                                              "right" : {
                                                                                "type" : "hexstr",
                                                                                "value" : "0xffff"
                                                                              }
                                                                            }
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0x2"
                                                                          }
                                                                        }
                                                                      },
                                                                      "right" : {
                                                                        "type" : "hexstr",
                                                                        "value" : "0xffff"
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0xffff"
                                                              }
                                                            }
                                                          },
                                                          "cond" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "d2b",
                                                              "left" : null,
                                                              "right" : {
                                                                "type" : "field",
                                                                "value" : ["ipv4", "$valid$"]
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "hexstr",
                                                        "value" : "0x0008"
                                                      }
                                                    }
                                                  },
                                                  "right" : {
                                                    "type" : "hexstr",
                                                    "value" : "0xffff"
                                                  }
                                                }
                                              },
                                              "right" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "&",
                                                  "left" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "<<",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "&",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "+",
                                                              "left" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "&",
                                                                  "left" : {
                                                                    "type" : "field",
                                                                    "value" : ["srv6h", "last_entry"]
                                                                  },
                                                                  "right" : {
                                                                    "type" : "hexstr",
                                                                    "value" : "0xffff"
                                                                  }
                                                                }
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0x0001"
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0xffff"
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "hexstr",
                                                        "value" : "0x4"
                                                      }
                                                    }
                                                  },
                                                  "right" : {
                                                    "type" : "hexstr",
                                                    "value" : "0xffff"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0xffff"
                                          }
                                        }
                                      },
                                      "right" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "?",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "&",
                                              "left" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "+",
                                                  "left" : {
                                                    "type" : "hexstr",
                                                    "value" : "0x004e"
                                                  },
                                                  "right" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "&",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "<<",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "&",
                                                              "left" : {
                                                                "type" : "field",
                                                                "value" : ["int_shim", "len"]
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0xffff"
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0x2"
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "hexstr",
                                                        "value" : "0xffff"
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "right" : {
                                                "type" : "hexstr",
                                                "value" : "0xffff"
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "&",
                                              "left" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "+",
                                                  "left" : {
                                                    "type" : "hexstr",
                                                    "value" : "0x0062"
                                                  },
                                                  "right" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "&",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "<<",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "&",
                                                              "left" : {
                                                                "type" : "field",
                                                                "value" : ["int_shim", "len"]
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0xffff"
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0x2"
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "hexstr",
                                                        "value" : "0xffff"
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "right" : {
                                                "type" : "hexstr",
                                                "value" : "0xffff"
                                              }
                                            }
                                          },
                                          "cond" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "d2b",
                                              "left" : null,
                                              "right" : {
                                                "type" : "field",
                                                "value" : ["ipv4", "$valid$"]
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "cond" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "==",
                                          "left" : {
                                            "type" : "field",
                                            "value" : ["ipv6", "next_hdr"]
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0x2b"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "cond" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "d2b",
                                      "left" : null,
                                      "right" : {
                                        "type" : "field",
                                        "value" : ["ipv4", "$valid$"]
                                      }
                                    }
                                  }
                                }
                              },
                              "cond" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "d2b",
                                  "left" : null,
                                  "right" : {
                                    "type" : "field",
                                    "value" : ["tcp", "$valid$"]
                                  }
                                }
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x0008"
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffff"
                      }
                    }
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "d2b",
                      "left" : null,
                      "right" : {
                        "type" : "field",
                        "value" : ["tcp", "$valid$"]
                      }
                    }
                  }
                }
              }
            }
          ]
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["report_ipv4", "id"]
            },
            {
              "type" : "hexstr",
              "value" : "0x0000"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_report.p4",
            "line" : 74,
            "column" : 12,
            "source_fragment" : "hdr.report_ipv4.id = 0"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["report_ipv4", "flags"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_report.p4",
            "line" : 75,
            "column" : 12,
            "source_fragment" : "hdr.report_ipv4.flags = 0"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["report_ipv4", "fragOffset"]
            },
            {
              "type" : "hexstr",
              "value" : "0x0000"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_report.p4",
            "line" : 76,
            "column" : 12,
            "source_fragment" : "hdr.report_ipv4.fragOffset = 0"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["report_ipv4", "ttl"]
            },
            {
              "type" : "hexstr",
              "value" : "0x40"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_report.p4",
            "line" : 77,
            "column" : 12,
            "source_fragment" : "hdr.report_ipv4.ttl = 64"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["report_ipv4", "protocol"]
            },
            {
              "type" : "hexstr",
              "value" : "0x11"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_report.p4",
            "line" : 78,
            "column" : 12,
            "source_fragment" : "hdr.report_ipv4.protocol = 17"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["report_ipv4", "srcAddr"]
            },
            {
              "type" : "runtime_data",
              "value" : 1
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_report.p4",
            "line" : 79,
            "column" : 12,
            "source_fragment" : "hdr.report_ipv4.srcAddr = dp_ip"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["report_ipv4", "dstAddr"]
            },
            {
              "type" : "runtime_data",
              "value" : 3
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_report.p4",
            "line" : 80,
            "column" : 12,
            "source_fragment" : "hdr.report_ipv4.dstAddr = collector_ip"
          }
        },
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "report_udp"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_report.p4",
            "line" : 83,
            "column" : 12,
            "source_fragment" : "hdr.report_udp.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["report_udp", "srcPort"]
            },
            {
              "type" : "hexstr",
              "value" : "0x0000"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_report.p4",
            "line" : 84,
            "column" : 12,
            "source_fragment" : "hdr.report_udp.srcPort = 0"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["report_udp", "dstPort"]
            },
            {
              "type" : "runtime_data",
              "value" : 4
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_report.p4",
            "line" : 85,
            "column" : 12,
            "source_fragment" : "hdr.report_udp.dstPort = collector_port"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["report_udp", "len"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "?",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "?",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "&",
                                  "left" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "+",
                                      "left" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "?",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "?",
                                              "left" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "&",
                                                  "left" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "+",
                                                      "left" : {
                                                        "type" : "hexstr",
                                                        "value" : "0x004e"
                                                      },
                                                      "right" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "&",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "<<",
                                                              "left" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "&",
                                                                  "left" : {
                                                                    "type" : "field",
                                                                    "value" : ["int_shim", "len"]
                                                                  },
                                                                  "right" : {
                                                                    "type" : "hexstr",
                                                                    "value" : "0xffff"
                                                                  }
                                                                }
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0x2"
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0xffff"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "right" : {
                                                    "type" : "hexstr",
                                                    "value" : "0xffff"
                                                  }
                                                }
                                              },
                                              "right" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "&",
                                                  "left" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "+",
                                                      "left" : {
                                                        "type" : "hexstr",
                                                        "value" : "0x0062"
                                                      },
                                                      "right" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "&",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "<<",
                                                              "left" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "&",
                                                                  "left" : {
                                                                    "type" : "field",
                                                                    "value" : ["int_shim", "len"]
                                                                  },
                                                                  "right" : {
                                                                    "type" : "hexstr",
                                                                    "value" : "0xffff"
                                                                  }
                                                                }
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0x2"
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0xffff"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "right" : {
                                                    "type" : "hexstr",
                                                    "value" : "0xffff"
                                                  }
                                                }
                                              },
                                              "cond" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "d2b",
                                                  "left" : null,
                                                  "right" : {
                                                    "type" : "field",
                                                    "value" : ["ipv4", "$valid$"]
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "?",
                                              "left" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "&",
                                                  "left" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "+",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "&",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "+",
                                                              "left" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "?",
                                                                  "left" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "&",
                                                                      "left" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "+",
                                                                          "left" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0x004e"
                                                                          },
                                                                          "right" : {
                                                                            "type" : "expression",
                                                                            "value" : {
                                                                              "op" : "&",
                                                                              "left" : {
                                                                                "type" : "expression",
                                                                                "value" : {
                                                                                  "op" : "<<",
                                                                                  "left" : {
                                                                                    "type" : "expression",
                                                                                    "value" : {
                                                                                      "op" : "&",
                                                                                      "left" : {
                                                                                        "type" : "field",
                                                                                        "value" : ["int_shim", "len"]
                                                                                      },
                                                                                      "right" : {
                                                                                        "type" : "hexstr",
                                                                                        "value" : "0xffff"
                                                                                      }
                                                                                    }
                                                                                  },
                                                                                  "right" : {
                                                                                    "type" : "hexstr",
                                                                                    "value" : "0x2"
                                                                                  }
                                                                                }
                                                                              },
                                                                              "right" : {
                                                                                "type" : "hexstr",
                                                                                "value" : "0xffff"
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      },
                                                                      "right" : {
                                                                        "type" : "hexstr",
                                                                        "value" : "0xffff"
                                                                      }
                                                                    }
                                                                  },
                                                                  "right" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "&",
                                                                      "left" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "+",
                                                                          "left" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0x0062"
                                                                          },
                                                                          "right" : {
                                                                            "type" : "expression",
                                                                            "value" : {
                                                                              "op" : "&",
                                                                              "left" : {
                                                                                "type" : "expression",
                                                                                "value" : {
                                                                                  "op" : "<<",
                                                                                  "left" : {
                                                                                    "type" : "expression",
                                                                                    "value" : {
                                                                                      "op" : "&",
                                                                                      "left" : {
                                                                                        "type" : "field",
                                                                                        "value" : ["int_shim", "len"]
                                                                                      },
                                                                                      "right" : {
                                                                                        "type" : "hexstr",
                                                                                        "value" : "0xffff"
                                                                                      }
                                                                                    }
                                                                                  },
                                                                                  "right" : {
                                                                                    "type" : "hexstr",
                                                                                    "value" : "0x2"
                                                                                  }
                                                                                }
                                                                              },
                                                                              "right" : {
                                                                                "type" : "hexstr",
                                                                                "value" : "0xffff"
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      },
                                                                      "right" : {
                                                                        "type" : "hexstr",
                                                                        "value" : "0xffff"
                                                                      }
                                                                    }
                                                                  },
                                                                  "cond" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "d2b",
                                                                      "left" : null,
                                                                      "right" : {
                                                                        "type" : "field",
                                                                        "value" : ["ipv4", "$valid$"]
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0x0008"
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0xffff"
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "&",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "<<",
                                                              "left" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "&",
                                                                  "left" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "+",
                                                                      "left" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "&",
                                                                          "left" : {
                                                                            "type" : "field",
                                                                            "value" : ["srv6h", "last_entry"]
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0xffff"
                                                                          }
                                                                        }
                                                                      },
                                                                      "right" : {
                                                                        "type" : "hexstr",
                                                                        "value" : "0x0001"
                                                                      }
                                                                    }
                                                                  },
                                                                  "right" : {
                                                                    "type" : "hexstr",
                                                                    "value" : "0xffff"
                                                                  }
                                                                }
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0x4"
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0xffff"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "right" : {
                                                    "type" : "hexstr",
                                                    "value" : "0xffff"
                                                  }
                                                }
                                              },
                                              "right" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "?",
                                                  "left" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "&",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "+",
                                                          "left" : {
                                                            "type" : "hexstr",
                                                            "value" : "0x004e"
                                                          },
                                                          "right" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "&",
                                                              "left" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "<<",
                                                                  "left" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "&",
                                                                      "left" : {
                                                                        "type" : "field",
                                                                        "value" : ["int_shim", "len"]
                                                                      },
                                                                      "right" : {
                                                                        "type" : "hexstr",
                                                                        "value" : "0xffff"
                                                                      }
                                                                    }
                                                                  },
                                                                  "right" : {
                                                                    "type" : "hexstr",
                                                                    "value" : "0x2"
                                                                  }
                                                                }
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0xffff"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "hexstr",
                                                        "value" : "0xffff"
                                                      }
                                                    }
                                                  },
                                                  "right" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "&",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "+",
                                                          "left" : {
                                                            "type" : "hexstr",
                                                            "value" : "0x0062"
                                                          },
                                                          "right" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "&",
                                                              "left" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "<<",
                                                                  "left" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "&",
                                                                      "left" : {
                                                                        "type" : "field",
                                                                        "value" : ["int_shim", "len"]
                                                                      },
                                                                      "right" : {
                                                                        "type" : "hexstr",
                                                                        "value" : "0xffff"
                                                                      }
                                                                    }
                                                                  },
                                                                  "right" : {
                                                                    "type" : "hexstr",
                                                                    "value" : "0x2"
                                                                  }
                                                                }
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0xffff"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "hexstr",
                                                        "value" : "0xffff"
                                                      }
                                                    }
                                                  },
                                                  "cond" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "d2b",
                                                      "left" : null,
                                                      "right" : {
                                                        "type" : "field",
                                                        "value" : ["ipv4", "$valid$"]
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "cond" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "==",
                                                  "left" : {
                                                    "type" : "field",
                                                    "value" : ["ipv6", "next_hdr"]
                                                  },
                                                  "right" : {
                                                    "type" : "hexstr",
                                                    "value" : "0x2b"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "cond" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "d2b",
                                              "left" : null,
                                              "right" : {
                                                "type" : "field",
                                                "value" : ["ipv4", "$valid$"]
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "right" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "&",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "<<",
                                              "left" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "&",
                                                  "left" : {
                                                    "type" : "field",
                                                    "value" : ["tcp", "dataOffset"]
                                                  },
                                                  "right" : {
                                                    "type" : "hexstr",
                                                    "value" : "0xffff"
                                                  }
                                                }
                                              },
                                              "right" : {
                                                "type" : "hexstr",
                                                "value" : "0x2"
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0xffff"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0xffff"
                                  }
                                }
                              },
                              "right" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "?",
                                  "left" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "?",
                                      "left" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "&",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "+",
                                              "left" : {
                                                "type" : "hexstr",
                                                "value" : "0x004e"
                                              },
                                              "right" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "&",
                                                  "left" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "<<",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "&",
                                                          "left" : {
                                                            "type" : "field",
                                                            "value" : ["int_shim", "len"]
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0xffff"
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "hexstr",
                                                        "value" : "0x2"
                                                      }
                                                    }
                                                  },
                                                  "right" : {
                                                    "type" : "hexstr",
                                                    "value" : "0xffff"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0xffff"
                                          }
                                        }
                                      },
                                      "right" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "&",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "+",
                                              "left" : {
                                                "type" : "hexstr",
                                                "value" : "0x0062"
                                              },
                                              "right" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "&",
                                                  "left" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "<<",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "&",
                                                          "left" : {
                                                            "type" : "field",
                                                            "value" : ["int_shim", "len"]
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0xffff"
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "hexstr",
                                                        "value" : "0x2"
                                                      }
                                                    }
                                                  },
                                                  "right" : {
                                                    "type" : "hexstr",
                                                    "value" : "0xffff"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0xffff"
                                          }
                                        }
                                      },
                                      "cond" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "d2b",
                                          "left" : null,
                                          "right" : {
                                            "type" : "field",
                                            "value" : ["ipv4", "$valid$"]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "right" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "?",
                                      "left" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "&",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "+",
                                              "left" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "&",
                                                  "left" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "+",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "?",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "&",
                                                              "left" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "+",
                                                                  "left" : {
                                                                    "type" : "hexstr",
                                                                    "value" : "0x004e"
                                                                  },
                                                                  "right" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "&",
                                                                      "left" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "<<",
                                                                          "left" : {
                                                                            "type" : "expression",
                                                                            "value" : {
                                                                              "op" : "&",
                                                                              "left" : {
                                                                                "type" : "field",
                                                                                "value" : ["int_shim", "len"]
                                                                              },
                                                                              "right" : {
                                                                                "type" : "hexstr",
                                                                                "value" : "0xffff"
                                                                              }
                                                                            }
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0x2"
                                                                          }
                                                                        }
                                                                      },
                                                                      "right" : {
                                                                        "type" : "hexstr",
                                                                        "value" : "0xffff"
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0xffff"
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "&",
                                                              "left" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "+",
                                                                  "left" : {
                                                                    "type" : "hexstr",
                                                                    "value" : "0x0062"
                                                                  },
                                                                  "right" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "&",
                                                                      "left" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "<<",
                                                                          "left" : {
                                                                            "type" : "expression",
                                                                            "value" : {
                                                                              "op" : "&",
                                                                              "left" : {
                                                                                "type" : "field",
                                                                                "value" : ["int_shim", "len"]
                                                                              },
                                                                              "right" : {
                                                                                "type" : "hexstr",
                                                                                "value" : "0xffff"
                                                                              }
                                                                            }
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0x2"
                                                                          }
                                                                        }
                                                                      },
                                                                      "right" : {
                                                                        "type" : "hexstr",
                                                                        "value" : "0xffff"
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0xffff"
                                                              }
                                                            }
                                                          },
                                                          "cond" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "d2b",
                                                              "left" : null,
                                                              "right" : {
                                                                "type" : "field",
                                                                "value" : ["ipv4", "$valid$"]
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "hexstr",
                                                        "value" : "0x0008"
                                                      }
                                                    }
                                                  },
                                                  "right" : {
                                                    "type" : "hexstr",
                                                    "value" : "0xffff"
                                                  }
                                                }
                                              },
                                              "right" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "&",
                                                  "left" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "<<",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "&",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "+",
                                                              "left" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "&",
                                                                  "left" : {
                                                                    "type" : "field",
                                                                    "value" : ["srv6h", "last_entry"]
                                                                  },
                                                                  "right" : {
                                                                    "type" : "hexstr",
                                                                    "value" : "0xffff"
                                                                  }
                                                                }
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0x0001"
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0xffff"
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "hexstr",
                                                        "value" : "0x4"
                                                      }
                                                    }
                                                  },
                                                  "right" : {
                                                    "type" : "hexstr",
                                                    "value" : "0xffff"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0xffff"
                                          }
                                        }
                                      },
                                      "right" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "?",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "&",
                                              "left" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "+",
                                                  "left" : {
                                                    "type" : "hexstr",
                                                    "value" : "0x004e"
                                                  },
                                                  "right" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "&",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "<<",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "&",
                                                              "left" : {
                                                                "type" : "field",
                                                                "value" : ["int_shim", "len"]
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0xffff"
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0x2"
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "hexstr",
                                                        "value" : "0xffff"
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "right" : {
                                                "type" : "hexstr",
                                                "value" : "0xffff"
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "&",
                                              "left" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "+",
                                                  "left" : {
                                                    "type" : "hexstr",
                                                    "value" : "0x0062"
                                                  },
                                                  "right" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "&",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "<<",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "&",
                                                              "left" : {
                                                                "type" : "field",
                                                                "value" : ["int_shim", "len"]
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0xffff"
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0x2"
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "hexstr",
                                                        "value" : "0xffff"
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "right" : {
                                                "type" : "hexstr",
                                                "value" : "0xffff"
                                              }
                                            }
                                          },
                                          "cond" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "d2b",
                                              "left" : null,
                                              "right" : {
                                                "type" : "field",
                                                "value" : ["ipv4", "$valid$"]
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "cond" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "==",
                                          "left" : {
                                            "type" : "field",
                                            "value" : ["ipv6", "next_hdr"]
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0x2b"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "cond" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "d2b",
                                      "left" : null,
                                      "right" : {
                                        "type" : "field",
                                        "value" : ["ipv4", "$valid$"]
                                      }
                                    }
                                  }
                                }
                              },
                              "cond" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "d2b",
                                  "left" : null,
                                  "right" : {
                                    "type" : "field",
                                    "value" : ["tcp", "$valid$"]
                                  }
                                }
                              }
                            }
                          },
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "+",
                                  "left" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "?",
                                      "left" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "&",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "+",
                                              "left" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "?",
                                                  "left" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "?",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "&",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "+",
                                                              "left" : {
                                                                "type" : "hexstr",
                                                                "value" : "0x004e"
                                                              },
                                                              "right" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "&",
                                                                  "left" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "<<",
                                                                      "left" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "&",
                                                                          "left" : {
                                                                            "type" : "field",
                                                                            "value" : ["int_shim", "len"]
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0xffff"
                                                                          }
                                                                        }
                                                                      },
                                                                      "right" : {
                                                                        "type" : "hexstr",
                                                                        "value" : "0x2"
                                                                      }
                                                                    }
                                                                  },
                                                                  "right" : {
                                                                    "type" : "hexstr",
                                                                    "value" : "0xffff"
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0xffff"
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "&",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "+",
                                                              "left" : {
                                                                "type" : "hexstr",
                                                                "value" : "0x0062"
                                                              },
                                                              "right" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "&",
                                                                  "left" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "<<",
                                                                      "left" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "&",
                                                                          "left" : {
                                                                            "type" : "field",
                                                                            "value" : ["int_shim", "len"]
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0xffff"
                                                                          }
                                                                        }
                                                                      },
                                                                      "right" : {
                                                                        "type" : "hexstr",
                                                                        "value" : "0x2"
                                                                      }
                                                                    }
                                                                  },
                                                                  "right" : {
                                                                    "type" : "hexstr",
                                                                    "value" : "0xffff"
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0xffff"
                                                          }
                                                        }
                                                      },
                                                      "cond" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "d2b",
                                                          "left" : null,
                                                          "right" : {
                                                            "type" : "field",
                                                            "value" : ["ipv4", "$valid$"]
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "right" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "?",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "&",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "+",
                                                              "left" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "&",
                                                                  "left" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "+",
                                                                      "left" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "?",
                                                                          "left" : {
                                                                            "type" : "expression",
                                                                            "value" : {
                                                                              "op" : "&",
                                                                              "left" : {
                                                                                "type" : "expression",
                                                                                "value" : {
                                                                                  "op" : "+",
                                                                                  "left" : {
                                                                                    "type" : "hexstr",
                                                                                    "value" : "0x004e"
                                                                                  },
                                                                                  "right" : {
                                                                                    "type" : "expression",
                                                                                    "value" : {
                                                                                      "op" : "&",
                                                                                      "left" : {
                                                                                        "type" : "expression",
                                                                                        "value" : {
                                                                                          "op" : "<<",
                                                                                          "left" : {
                                                                                            "type" : "expression",
                                                                                            "value" : {
                                                                                              "op" : "&",
                                                                                              "left" : {
                                                                                                "type" : "field",
                                                                                                "value" : ["int_shim", "len"]
                                                                                              },
                                                                                              "right" : {
                                                                                                "type" : "hexstr",
                                                                                                "value" : "0xffff"
                                                                                              }
                                                                                            }
                                                                                          },
                                                                                          "right" : {
                                                                                            "type" : "hexstr",
                                                                                            "value" : "0x2"
                                                                                          }
                                                                                        }
                                                                                      },
                                                                                      "right" : {
                                                                                        "type" : "hexstr",
                                                                                        "value" : "0xffff"
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              },
                                                                              "right" : {
                                                                                "type" : "hexstr",
                                                                                "value" : "0xffff"
                                                                              }
                                                                            }
                                                                          },
                                                                          "right" : {
                                                                            "type" : "expression",
                                                                            "value" : {
                                                                              "op" : "&",
                                                                              "left" : {
                                                                                "type" : "expression",
                                                                                "value" : {
                                                                                  "op" : "+",
                                                                                  "left" : {
                                                                                    "type" : "hexstr",
                                                                                    "value" : "0x0062"
                                                                                  },
                                                                                  "right" : {
                                                                                    "type" : "expression",
                                                                                    "value" : {
                                                                                      "op" : "&",
                                                                                      "left" : {
                                                                                        "type" : "expression",
                                                                                        "value" : {
                                                                                          "op" : "<<",
                                                                                          "left" : {
                                                                                            "type" : "expression",
                                                                                            "value" : {
                                                                                              "op" : "&",
                                                                                              "left" : {
                                                                                                "type" : "field",
                                                                                                "value" : ["int_shim", "len"]
                                                                                              },
                                                                                              "right" : {
                                                                                                "type" : "hexstr",
                                                                                                "value" : "0xffff"
                                                                                              }
                                                                                            }
                                                                                          },
                                                                                          "right" : {
                                                                                            "type" : "hexstr",
                                                                                            "value" : "0x2"
                                                                                          }
                                                                                        }
                                                                                      },
                                                                                      "right" : {
                                                                                        "type" : "hexstr",
                                                                                        "value" : "0xffff"
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              },
                                                                              "right" : {
                                                                                "type" : "hexstr",
                                                                                "value" : "0xffff"
                                                                              }
                                                                            }
                                                                          },
                                                                          "cond" : {
                                                                            "type" : "expression",
                                                                            "value" : {
                                                                              "op" : "d2b",
                                                                              "left" : null,
                                                                              "right" : {
                                                                                "type" : "field",
                                                                                "value" : ["ipv4", "$valid$"]
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      },
                                                                      "right" : {
                                                                        "type" : "hexstr",
                                                                        "value" : "0x0008"
                                                                      }
                                                                    }
                                                                  },
                                                                  "right" : {
                                                                    "type" : "hexstr",
                                                                    "value" : "0xffff"
                                                                  }
                                                                }
                                                              },
                                                              "right" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "&",
                                                                  "left" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "<<",
                                                                      "left" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "&",
                                                                          "left" : {
                                                                            "type" : "expression",
                                                                            "value" : {
                                                                              "op" : "+",
                                                                              "left" : {
                                                                                "type" : "expression",
                                                                                "value" : {
                                                                                  "op" : "&",
                                                                                  "left" : {
                                                                                    "type" : "field",
                                                                                    "value" : ["srv6h", "last_entry"]
                                                                                  },
                                                                                  "right" : {
                                                                                    "type" : "hexstr",
                                                                                    "value" : "0xffff"
                                                                                  }
                                                                                }
                                                                              },
                                                                              "right" : {
                                                                                "type" : "hexstr",
                                                                                "value" : "0x0001"
                                                                              }
                                                                            }
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0xffff"
                                                                          }
                                                                        }
                                                                      },
                                                                      "right" : {
                                                                        "type" : "hexstr",
                                                                        "value" : "0x4"
                                                                      }
                                                                    }
                                                                  },
                                                                  "right" : {
                                                                    "type" : "hexstr",
                                                                    "value" : "0xffff"
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0xffff"
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "?",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "&",
                                                              "left" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "+",
                                                                  "left" : {
                                                                    "type" : "hexstr",
                                                                    "value" : "0x004e"
                                                                  },
                                                                  "right" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "&",
                                                                      "left" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "<<",
                                                                          "left" : {
                                                                            "type" : "expression",
                                                                            "value" : {
                                                                              "op" : "&",
                                                                              "left" : {
                                                                                "type" : "field",
                                                                                "value" : ["int_shim", "len"]
                                                                              },
                                                                              "right" : {
                                                                                "type" : "hexstr",
                                                                                "value" : "0xffff"
                                                                              }
                                                                            }
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0x2"
                                                                          }
                                                                        }
                                                                      },
                                                                      "right" : {
                                                                        "type" : "hexstr",
                                                                        "value" : "0xffff"
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0xffff"
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "&",
                                                              "left" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "+",
                                                                  "left" : {
                                                                    "type" : "hexstr",
                                                                    "value" : "0x0062"
                                                                  },
                                                                  "right" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "&",
                                                                      "left" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "<<",
                                                                          "left" : {
                                                                            "type" : "expression",
                                                                            "value" : {
                                                                              "op" : "&",
                                                                              "left" : {
                                                                                "type" : "field",
                                                                                "value" : ["int_shim", "len"]
                                                                              },
                                                                              "right" : {
                                                                                "type" : "hexstr",
                                                                                "value" : "0xffff"
                                                                              }
                                                                            }
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0x2"
                                                                          }
                                                                        }
                                                                      },
                                                                      "right" : {
                                                                        "type" : "hexstr",
                                                                        "value" : "0xffff"
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0xffff"
                                                              }
                                                            }
                                                          },
                                                          "cond" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "d2b",
                                                              "left" : null,
                                                              "right" : {
                                                                "type" : "field",
                                                                "value" : ["ipv4", "$valid$"]
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "cond" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "==",
                                                          "left" : {
                                                            "type" : "field",
                                                            "value" : ["ipv6", "next_hdr"]
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0x2b"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "cond" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "d2b",
                                                      "left" : null,
                                                      "right" : {
                                                        "type" : "field",
                                                        "value" : ["ipv4", "$valid$"]
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "right" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "&",
                                                  "left" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "<<",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "&",
                                                          "left" : {
                                                            "type" : "field",
                                                            "value" : ["tcp", "dataOffset"]
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0xffff"
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "hexstr",
                                                        "value" : "0x2"
                                                      }
                                                    }
                                                  },
                                                  "right" : {
                                                    "type" : "hexstr",
                                                    "value" : "0xffff"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "hexstr",
                                            "value" : "0xffff"
                                          }
                                        }
                                      },
                                      "right" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "?",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "?",
                                              "left" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "&",
                                                  "left" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "+",
                                                      "left" : {
                                                        "type" : "hexstr",
                                                        "value" : "0x004e"
                                                      },
                                                      "right" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "&",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "<<",
                                                              "left" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "&",
                                                                  "left" : {
                                                                    "type" : "field",
                                                                    "value" : ["int_shim", "len"]
                                                                  },
                                                                  "right" : {
                                                                    "type" : "hexstr",
                                                                    "value" : "0xffff"
                                                                  }
                                                                }
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0x2"
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0xffff"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "right" : {
                                                    "type" : "hexstr",
                                                    "value" : "0xffff"
                                                  }
                                                }
                                              },
                                              "right" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "&",
                                                  "left" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "+",
                                                      "left" : {
                                                        "type" : "hexstr",
                                                        "value" : "0x0062"
                                                      },
                                                      "right" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "&",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "<<",
                                                              "left" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "&",
                                                                  "left" : {
                                                                    "type" : "field",
                                                                    "value" : ["int_shim", "len"]
                                                                  },
                                                                  "right" : {
                                                                    "type" : "hexstr",
                                                                    "value" : "0xffff"
                                                                  }
                                                                }
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0x2"
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0xffff"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "right" : {
                                                    "type" : "hexstr",
                                                    "value" : "0xffff"
                                                  }
                                                }
                                              },
                                              "cond" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "d2b",
                                                  "left" : null,
                                                  "right" : {
                                                    "type" : "field",
                                                    "value" : ["ipv4", "$valid$"]
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "?",
                                              "left" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "&",
                                                  "left" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "+",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "&",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "+",
                                                              "left" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "?",
                                                                  "left" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "&",
                                                                      "left" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "+",
                                                                          "left" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0x004e"
                                                                          },
                                                                          "right" : {
                                                                            "type" : "expression",
                                                                            "value" : {
                                                                              "op" : "&",
                                                                              "left" : {
                                                                                "type" : "expression",
                                                                                "value" : {
                                                                                  "op" : "<<",
                                                                                  "left" : {
                                                                                    "type" : "expression",
                                                                                    "value" : {
                                                                                      "op" : "&",
                                                                                      "left" : {
                                                                                        "type" : "field",
                                                                                        "value" : ["int_shim", "len"]
                                                                                      },
                                                                                      "right" : {
                                                                                        "type" : "hexstr",
                                                                                        "value" : "0xffff"
                                                                                      }
                                                                                    }
                                                                                  },
                                                                                  "right" : {
                                                                                    "type" : "hexstr",
                                                                                    "value" : "0x2"
                                                                                  }
                                                                                }
                                                                              },
                                                                              "right" : {
                                                                                "type" : "hexstr",
                                                                                "value" : "0xffff"
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      },
                                                                      "right" : {
                                                                        "type" : "hexstr",
                                                                        "value" : "0xffff"
                                                                      }
                                                                    }
                                                                  },
                                                                  "right" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "&",
                                                                      "left" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "+",
                                                                          "left" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0x0062"
                                                                          },
                                                                          "right" : {
                                                                            "type" : "expression",
                                                                            "value" : {
                                                                              "op" : "&",
                                                                              "left" : {
                                                                                "type" : "expression",
                                                                                "value" : {
                                                                                  "op" : "<<",
                                                                                  "left" : {
                                                                                    "type" : "expression",
                                                                                    "value" : {
                                                                                      "op" : "&",
                                                                                      "left" : {
                                                                                        "type" : "field",
                                                                                        "value" : ["int_shim", "len"]
                                                                                      },
                                                                                      "right" : {
                                                                                        "type" : "hexstr",
                                                                                        "value" : "0xffff"
                                                                                      }
                                                                                    }
                                                                                  },
                                                                                  "right" : {
                                                                                    "type" : "hexstr",
                                                                                    "value" : "0x2"
                                                                                  }
                                                                                }
                                                                              },
                                                                              "right" : {
                                                                                "type" : "hexstr",
                                                                                "value" : "0xffff"
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      },
                                                                      "right" : {
                                                                        "type" : "hexstr",
                                                                        "value" : "0xffff"
                                                                      }
                                                                    }
                                                                  },
                                                                  "cond" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "d2b",
                                                                      "left" : null,
                                                                      "right" : {
                                                                        "type" : "field",
                                                                        "value" : ["ipv4", "$valid$"]
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0x0008"
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0xffff"
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "&",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "<<",
                                                              "left" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "&",
                                                                  "left" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "+",
                                                                      "left" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "&",
                                                                          "left" : {
                                                                            "type" : "field",
                                                                            "value" : ["srv6h", "last_entry"]
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0xffff"
                                                                          }
                                                                        }
                                                                      },
                                                                      "right" : {
                                                                        "type" : "hexstr",
                                                                        "value" : "0x0001"
                                                                      }
                                                                    }
                                                                  },
                                                                  "right" : {
                                                                    "type" : "hexstr",
                                                                    "value" : "0xffff"
                                                                  }
                                                                }
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0x4"
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0xffff"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "right" : {
                                                    "type" : "hexstr",
                                                    "value" : "0xffff"
                                                  }
                                                }
                                              },
                                              "right" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "?",
                                                  "left" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "&",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "+",
                                                          "left" : {
                                                            "type" : "hexstr",
                                                            "value" : "0x004e"
                                                          },
                                                          "right" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "&",
                                                              "left" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "<<",
                                                                  "left" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "&",
                                                                      "left" : {
                                                                        "type" : "field",
                                                                        "value" : ["int_shim", "len"]
                                                                      },
                                                                      "right" : {
                                                                        "type" : "hexstr",
                                                                        "value" : "0xffff"
                                                                      }
                                                                    }
                                                                  },
                                                                  "right" : {
                                                                    "type" : "hexstr",
                                                                    "value" : "0x2"
                                                                  }
                                                                }
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0xffff"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "hexstr",
                                                        "value" : "0xffff"
                                                      }
                                                    }
                                                  },
                                                  "right" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "&",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "+",
                                                          "left" : {
                                                            "type" : "hexstr",
                                                            "value" : "0x0062"
                                                          },
                                                          "right" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "&",
                                                              "left" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "<<",
                                                                  "left" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "&",
                                                                      "left" : {
                                                                        "type" : "field",
                                                                        "value" : ["int_shim", "len"]
                                                                      },
                                                                      "right" : {
                                                                        "type" : "hexstr",
                                                                        "value" : "0xffff"
                                                                      }
                                                                    }
                                                                  },
                                                                  "right" : {
                                                                    "type" : "hexstr",
                                                                    "value" : "0x2"
                                                                  }
                                                                }
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0xffff"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "hexstr",
                                                        "value" : "0xffff"
                                                      }
                                                    }
                                                  },
                                                  "cond" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "d2b",
                                                      "left" : null,
                                                      "right" : {
                                                        "type" : "field",
                                                        "value" : ["ipv4", "$valid$"]
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "cond" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "==",
                                                  "left" : {
                                                    "type" : "field",
                                                    "value" : ["ipv6", "next_hdr"]
                                                  },
                                                  "right" : {
                                                    "type" : "hexstr",
                                                    "value" : "0x2b"
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "cond" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "d2b",
                                              "left" : null,
                                              "right" : {
                                                "type" : "field",
                                                "value" : ["ipv4", "$valid$"]
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "cond" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "d2b",
                                          "left" : null,
                                          "right" : {
                                            "type" : "field",
                                            "value" : ["tcp", "$valid$"]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0x0008"
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffff"
                              }
                            }
                          },
                          "cond" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "d2b",
                              "left" : null,
                              "right" : {
                                "type" : "field",
                                "value" : ["tcp", "$valid$"]
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffec"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_report.p4",
            "line" : 86,
            "column" : 12,
            "source_fragment" : "hdr.report_udp.len = hdr.report_ipv4.totalLen - 20"
          }
        },
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "report_fixed_header"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_report.p4",
            "line" : 90,
            "column" : 12,
            "source_fragment" : "hdr.report_fixed_header.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["report_fixed_header", "ver"]
            },
            {
              "type" : "hexstr",
              "value" : "0x01"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/headers.p4",
            "line" : 236,
            "column" : 34,
            "source_fragment" : "1; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["report_fixed_header", "len"]
            },
            {
              "type" : "hexstr",
              "value" : "0x04"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/headers.p4",
            "line" : 235,
            "column" : 43,
            "source_fragment" : "4; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["report_fixed_header", "nprot"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_report.p4",
            "line" : 94,
            "column" : 12,
            "source_fragment" : "hdr.report_fixed_header.nprot = 0"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["report_fixed_header", "rep_md_bits_high"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_report.p4",
            "line" : 95,
            "column" : 12,
            "source_fragment" : "hdr.report_fixed_header.rep_md_bits_high = 0"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["report_fixed_header", "rep_md_bits_low"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_report.p4",
            "line" : 96,
            "column" : 12,
            "source_fragment" : "hdr.report_fixed_header.rep_md_bits_low = 0"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["report_fixed_header", "reserved"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_report.p4",
            "line" : 97,
            "column" : 12,
            "source_fragment" : "hdr.report_fixed_header.reserved = 0"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["report_fixed_header", "d"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_report.p4",
            "line" : 98,
            "column" : 12,
            "source_fragment" : "hdr.report_fixed_header.d = 0"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["report_fixed_header", "q"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_report.p4",
            "line" : 99,
            "column" : 12,
            "source_fragment" : "hdr.report_fixed_header.q = 0"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["report_fixed_header", "f"]
            },
            {
              "type" : "hexstr",
              "value" : "0x01"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_report.p4",
            "line" : 101,
            "column" : 12,
            "source_fragment" : "hdr.report_fixed_header.f = 1"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["report_fixed_header", "hw_id"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_report.p4",
            "line" : 103,
            "column" : 12,
            "source_fragment" : "hdr.report_fixed_header.hw_id = 0"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["report_fixed_header", "switch_id"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._int_metadata_switch_id2"]
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_report.p4",
            "line" : 104,
            "column" : 12,
            "source_fragment" : "hdr.report_fixed_header.switch_id = meta.int_metadata.switch_id; ..."
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "Int_sink_Int_report_seq_num_value"]
            },
            {
              "type" : "register_array",
              "value" : "report_seq_num_register"
            },
            {
              "type" : "hexstr",
              "value" : "0x00000000"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_report.p4",
            "line" : 105,
            "column" : 12,
            "source_fragment" : "report_seq_num_register.read(seq_num_value, 0)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["report_fixed_header", "seq_num"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "Int_sink_Int_report_seq_num_value"]
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_report.p4",
            "line" : 106,
            "column" : 12,
            "source_fragment" : "hdr.report_fixed_header.seq_num = seq_num_value"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_14"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "Int_sink_Int_report_seq_num_value"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x00000001"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_report.p4",
            "line" : 107,
            "column" : 45,
            "source_fragment" : "seq_num_value + 1"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "report_seq_num_register"
            },
            {
              "type" : "hexstr",
              "value" : "0x00000000"
            },
            {
              "type" : "field",
              "value" : ["scalars", "tmp_14"]
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_report.p4",
            "line" : 107,
            "column" : 12,
            "source_fragment" : "report_seq_num_register.write(0, seq_num_value + 1)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["report_fixed_header", "ingress_tstamp"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "field",
                    "value" : ["standard_metadata", "ingress_global_timestamp"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_report.p4",
            "line" : 109,
            "column" : 12,
            "source_fragment" : "hdr.report_fixed_header.ingress_tstamp = (bit<32>)standard_metadata.ingress_global_timestamp"
          }
        },
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "flowlet"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_report.p4",
            "line" : 111,
            "column" : 12,
            "source_fragment" : "hdr.flowlet.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["flowlet", "update_path"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._update_path29"]
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_report.p4",
            "line" : 112,
            "column" : 12,
            "source_fragment" : "hdr.flowlet.update_path = meta.update_path; ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_15"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "&",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "?",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "?",
                                  "left" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "&",
                                      "left" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "+",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "?",
                                              "left" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "?",
                                                  "left" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "&",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "+",
                                                          "left" : {
                                                            "type" : "hexstr",
                                                            "value" : "0x004e"
                                                          },
                                                          "right" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "&",
                                                              "left" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "<<",
                                                                  "left" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "&",
                                                                      "left" : {
                                                                        "type" : "field",
                                                                        "value" : ["int_shim", "len"]
                                                                      },
                                                                      "right" : {
                                                                        "type" : "hexstr",
                                                                        "value" : "0xffff"
                                                                      }
                                                                    }
                                                                  },
                                                                  "right" : {
                                                                    "type" : "hexstr",
                                                                    "value" : "0x2"
                                                                  }
                                                                }
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0xffff"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "hexstr",
                                                        "value" : "0xffff"
                                                      }
                                                    }
                                                  },
                                                  "right" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "&",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "+",
                                                          "left" : {
                                                            "type" : "hexstr",
                                                            "value" : "0x0062"
                                                          },
                                                          "right" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "&",
                                                              "left" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "<<",
                                                                  "left" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "&",
                                                                      "left" : {
                                                                        "type" : "field",
                                                                        "value" : ["int_shim", "len"]
                                                                      },
                                                                      "right" : {
                                                                        "type" : "hexstr",
                                                                        "value" : "0xffff"
                                                                      }
                                                                    }
                                                                  },
                                                                  "right" : {
                                                                    "type" : "hexstr",
                                                                    "value" : "0x2"
                                                                  }
                                                                }
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0xffff"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "hexstr",
                                                        "value" : "0xffff"
                                                      }
                                                    }
                                                  },
                                                  "cond" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "d2b",
                                                      "left" : null,
                                                      "right" : {
                                                        "type" : "field",
                                                        "value" : ["ipv4", "$valid$"]
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "right" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "?",
                                                  "left" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "&",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "+",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "&",
                                                              "left" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "+",
                                                                  "left" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "?",
                                                                      "left" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "&",
                                                                          "left" : {
                                                                            "type" : "expression",
                                                                            "value" : {
                                                                              "op" : "+",
                                                                              "left" : {
                                                                                "type" : "hexstr",
                                                                                "value" : "0x004e"
                                                                              },
                                                                              "right" : {
                                                                                "type" : "expression",
                                                                                "value" : {
                                                                                  "op" : "&",
                                                                                  "left" : {
                                                                                    "type" : "expression",
                                                                                    "value" : {
                                                                                      "op" : "<<",
                                                                                      "left" : {
                                                                                        "type" : "expression",
                                                                                        "value" : {
                                                                                          "op" : "&",
                                                                                          "left" : {
                                                                                            "type" : "field",
                                                                                            "value" : ["int_shim", "len"]
                                                                                          },
                                                                                          "right" : {
                                                                                            "type" : "hexstr",
                                                                                            "value" : "0xffff"
                                                                                          }
                                                                                        }
                                                                                      },
                                                                                      "right" : {
                                                                                        "type" : "hexstr",
                                                                                        "value" : "0x2"
                                                                                      }
                                                                                    }
                                                                                  },
                                                                                  "right" : {
                                                                                    "type" : "hexstr",
                                                                                    "value" : "0xffff"
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0xffff"
                                                                          }
                                                                        }
                                                                      },
                                                                      "right" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "&",
                                                                          "left" : {
                                                                            "type" : "expression",
                                                                            "value" : {
                                                                              "op" : "+",
                                                                              "left" : {
                                                                                "type" : "hexstr",
                                                                                "value" : "0x0062"
                                                                              },
                                                                              "right" : {
                                                                                "type" : "expression",
                                                                                "value" : {
                                                                                  "op" : "&",
                                                                                  "left" : {
                                                                                    "type" : "expression",
                                                                                    "value" : {
                                                                                      "op" : "<<",
                                                                                      "left" : {
                                                                                        "type" : "expression",
                                                                                        "value" : {
                                                                                          "op" : "&",
                                                                                          "left" : {
                                                                                            "type" : "field",
                                                                                            "value" : ["int_shim", "len"]
                                                                                          },
                                                                                          "right" : {
                                                                                            "type" : "hexstr",
                                                                                            "value" : "0xffff"
                                                                                          }
                                                                                        }
                                                                                      },
                                                                                      "right" : {
                                                                                        "type" : "hexstr",
                                                                                        "value" : "0x2"
                                                                                      }
                                                                                    }
                                                                                  },
                                                                                  "right" : {
                                                                                    "type" : "hexstr",
                                                                                    "value" : "0xffff"
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0xffff"
                                                                          }
                                                                        }
                                                                      },
                                                                      "cond" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "d2b",
                                                                          "left" : null,
                                                                          "right" : {
                                                                            "type" : "field",
                                                                            "value" : ["ipv4", "$valid$"]
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  },
                                                                  "right" : {
                                                                    "type" : "hexstr",
                                                                    "value" : "0x0008"
                                                                  }
                                                                }
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0xffff"
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "&",
                                                              "left" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "<<",
                                                                  "left" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "&",
                                                                      "left" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "+",
                                                                          "left" : {
                                                                            "type" : "expression",
                                                                            "value" : {
                                                                              "op" : "&",
                                                                              "left" : {
                                                                                "type" : "field",
                                                                                "value" : ["srv6h", "last_entry"]
                                                                              },
                                                                              "right" : {
                                                                                "type" : "hexstr",
                                                                                "value" : "0xffff"
                                                                              }
                                                                            }
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0x0001"
                                                                          }
                                                                        }
                                                                      },
                                                                      "right" : {
                                                                        "type" : "hexstr",
                                                                        "value" : "0xffff"
                                                                      }
                                                                    }
                                                                  },
                                                                  "right" : {
                                                                    "type" : "hexstr",
                                                                    "value" : "0x4"
                                                                  }
                                                                }
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0xffff"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "hexstr",
                                                        "value" : "0xffff"
                                                      }
                                                    }
                                                  },
                                                  "right" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "?",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "&",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "+",
                                                              "left" : {
                                                                "type" : "hexstr",
                                                                "value" : "0x004e"
                                                              },
                                                              "right" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "&",
                                                                  "left" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "<<",
                                                                      "left" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "&",
                                                                          "left" : {
                                                                            "type" : "field",
                                                                            "value" : ["int_shim", "len"]
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0xffff"
                                                                          }
                                                                        }
                                                                      },
                                                                      "right" : {
                                                                        "type" : "hexstr",
                                                                        "value" : "0x2"
                                                                      }
                                                                    }
                                                                  },
                                                                  "right" : {
                                                                    "type" : "hexstr",
                                                                    "value" : "0xffff"
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0xffff"
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "&",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "+",
                                                              "left" : {
                                                                "type" : "hexstr",
                                                                "value" : "0x0062"
                                                              },
                                                              "right" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "&",
                                                                  "left" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "<<",
                                                                      "left" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "&",
                                                                          "left" : {
                                                                            "type" : "field",
                                                                            "value" : ["int_shim", "len"]
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0xffff"
                                                                          }
                                                                        }
                                                                      },
                                                                      "right" : {
                                                                        "type" : "hexstr",
                                                                        "value" : "0x2"
                                                                      }
                                                                    }
                                                                  },
                                                                  "right" : {
                                                                    "type" : "hexstr",
                                                                    "value" : "0xffff"
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0xffff"
                                                          }
                                                        }
                                                      },
                                                      "cond" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "d2b",
                                                          "left" : null,
                                                          "right" : {
                                                            "type" : "field",
                                                            "value" : ["ipv4", "$valid$"]
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "cond" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "==",
                                                      "left" : {
                                                        "type" : "field",
                                                        "value" : ["ipv6", "next_hdr"]
                                                      },
                                                      "right" : {
                                                        "type" : "hexstr",
                                                        "value" : "0x2b"
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "cond" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "d2b",
                                                  "left" : null,
                                                  "right" : {
                                                    "type" : "field",
                                                    "value" : ["ipv4", "$valid$"]
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "&",
                                              "left" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "<<",
                                                  "left" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "&",
                                                      "left" : {
                                                        "type" : "field",
                                                        "value" : ["tcp", "dataOffset"]
                                                      },
                                                      "right" : {
                                                        "type" : "hexstr",
                                                        "value" : "0xffff"
                                                      }
                                                    }
                                                  },
                                                  "right" : {
                                                    "type" : "hexstr",
                                                    "value" : "0x2"
                                                  }
                                                }
                                              },
                                              "right" : {
                                                "type" : "hexstr",
                                                "value" : "0xffff"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "right" : {
                                        "type" : "hexstr",
                                        "value" : "0xffff"
                                      }
                                    }
                                  },
                                  "right" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "?",
                                      "left" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "?",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "&",
                                              "left" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "+",
                                                  "left" : {
                                                    "type" : "hexstr",
                                                    "value" : "0x004e"
                                                  },
                                                  "right" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "&",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "<<",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "&",
                                                              "left" : {
                                                                "type" : "field",
                                                                "value" : ["int_shim", "len"]
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0xffff"
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0x2"
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "hexstr",
                                                        "value" : "0xffff"
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "right" : {
                                                "type" : "hexstr",
                                                "value" : "0xffff"
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "&",
                                              "left" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "+",
                                                  "left" : {
                                                    "type" : "hexstr",
                                                    "value" : "0x0062"
                                                  },
                                                  "right" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "&",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "<<",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "&",
                                                              "left" : {
                                                                "type" : "field",
                                                                "value" : ["int_shim", "len"]
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0xffff"
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0x2"
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "hexstr",
                                                        "value" : "0xffff"
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "right" : {
                                                "type" : "hexstr",
                                                "value" : "0xffff"
                                              }
                                            }
                                          },
                                          "cond" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "d2b",
                                              "left" : null,
                                              "right" : {
                                                "type" : "field",
                                                "value" : ["ipv4", "$valid$"]
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "right" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "?",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "&",
                                              "left" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "+",
                                                  "left" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "&",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "+",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "?",
                                                              "left" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "&",
                                                                  "left" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "+",
                                                                      "left" : {
                                                                        "type" : "hexstr",
                                                                        "value" : "0x004e"
                                                                      },
                                                                      "right" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "&",
                                                                          "left" : {
                                                                            "type" : "expression",
                                                                            "value" : {
                                                                              "op" : "<<",
                                                                              "left" : {
                                                                                "type" : "expression",
                                                                                "value" : {
                                                                                  "op" : "&",
                                                                                  "left" : {
                                                                                    "type" : "field",
                                                                                    "value" : ["int_shim", "len"]
                                                                                  },
                                                                                  "right" : {
                                                                                    "type" : "hexstr",
                                                                                    "value" : "0xffff"
                                                                                  }
                                                                                }
                                                                              },
                                                                              "right" : {
                                                                                "type" : "hexstr",
                                                                                "value" : "0x2"
                                                                              }
                                                                            }
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0xffff"
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  },
                                                                  "right" : {
                                                                    "type" : "hexstr",
                                                                    "value" : "0xffff"
                                                                  }
                                                                }
                                                              },
                                                              "right" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "&",
                                                                  "left" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "+",
                                                                      "left" : {
                                                                        "type" : "hexstr",
                                                                        "value" : "0x0062"
                                                                      },
                                                                      "right" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "&",
                                                                          "left" : {
                                                                            "type" : "expression",
                                                                            "value" : {
                                                                              "op" : "<<",
                                                                              "left" : {
                                                                                "type" : "expression",
                                                                                "value" : {
                                                                                  "op" : "&",
                                                                                  "left" : {
                                                                                    "type" : "field",
                                                                                    "value" : ["int_shim", "len"]
                                                                                  },
                                                                                  "right" : {
                                                                                    "type" : "hexstr",
                                                                                    "value" : "0xffff"
                                                                                  }
                                                                                }
                                                                              },
                                                                              "right" : {
                                                                                "type" : "hexstr",
                                                                                "value" : "0x2"
                                                                              }
                                                                            }
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0xffff"
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  },
                                                                  "right" : {
                                                                    "type" : "hexstr",
                                                                    "value" : "0xffff"
                                                                  }
                                                                }
                                                              },
                                                              "cond" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "d2b",
                                                                  "left" : null,
                                                                  "right" : {
                                                                    "type" : "field",
                                                                    "value" : ["ipv4", "$valid$"]
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0x0008"
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "hexstr",
                                                        "value" : "0xffff"
                                                      }
                                                    }
                                                  },
                                                  "right" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "&",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "<<",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "&",
                                                              "left" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "+",
                                                                  "left" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "&",
                                                                      "left" : {
                                                                        "type" : "field",
                                                                        "value" : ["srv6h", "last_entry"]
                                                                      },
                                                                      "right" : {
                                                                        "type" : "hexstr",
                                                                        "value" : "0xffff"
                                                                      }
                                                                    }
                                                                  },
                                                                  "right" : {
                                                                    "type" : "hexstr",
                                                                    "value" : "0x0001"
                                                                  }
                                                                }
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0xffff"
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0x4"
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "hexstr",
                                                        "value" : "0xffff"
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "right" : {
                                                "type" : "hexstr",
                                                "value" : "0xffff"
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "?",
                                              "left" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "&",
                                                  "left" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "+",
                                                      "left" : {
                                                        "type" : "hexstr",
                                                        "value" : "0x004e"
                                                      },
                                                      "right" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "&",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "<<",
                                                              "left" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "&",
                                                                  "left" : {
                                                                    "type" : "field",
                                                                    "value" : ["int_shim", "len"]
                                                                  },
                                                                  "right" : {
                                                                    "type" : "hexstr",
                                                                    "value" : "0xffff"
                                                                  }
                                                                }
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0x2"
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0xffff"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "right" : {
                                                    "type" : "hexstr",
                                                    "value" : "0xffff"
                                                  }
                                                }
                                              },
                                              "right" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "&",
                                                  "left" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "+",
                                                      "left" : {
                                                        "type" : "hexstr",
                                                        "value" : "0x0062"
                                                      },
                                                      "right" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "&",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "<<",
                                                              "left" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "&",
                                                                  "left" : {
                                                                    "type" : "field",
                                                                    "value" : ["int_shim", "len"]
                                                                  },
                                                                  "right" : {
                                                                    "type" : "hexstr",
                                                                    "value" : "0xffff"
                                                                  }
                                                                }
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0x2"
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0xffff"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "right" : {
                                                    "type" : "hexstr",
                                                    "value" : "0xffff"
                                                  }
                                                }
                                              },
                                              "cond" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "d2b",
                                                  "left" : null,
                                                  "right" : {
                                                    "type" : "field",
                                                    "value" : ["ipv4", "$valid$"]
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "cond" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "==",
                                              "left" : {
                                                "type" : "field",
                                                "value" : ["ipv6", "next_hdr"]
                                              },
                                              "right" : {
                                                "type" : "hexstr",
                                                "value" : "0x2b"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "cond" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "d2b",
                                          "left" : null,
                                          "right" : {
                                            "type" : "field",
                                            "value" : ["ipv4", "$valid$"]
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "cond" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "d2b",
                                      "left" : null,
                                      "right" : {
                                        "type" : "field",
                                        "value" : ["tcp", "$valid$"]
                                      }
                                    }
                                  }
                                }
                              },
                              "right" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "&",
                                  "left" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "+",
                                      "left" : {
                                        "type" : "expression",
                                        "value" : {
                                          "op" : "?",
                                          "left" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "&",
                                              "left" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "+",
                                                  "left" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "?",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "?",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "&",
                                                              "left" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "+",
                                                                  "left" : {
                                                                    "type" : "hexstr",
                                                                    "value" : "0x004e"
                                                                  },
                                                                  "right" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "&",
                                                                      "left" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "<<",
                                                                          "left" : {
                                                                            "type" : "expression",
                                                                            "value" : {
                                                                              "op" : "&",
                                                                              "left" : {
                                                                                "type" : "field",
                                                                                "value" : ["int_shim", "len"]
                                                                              },
                                                                              "right" : {
                                                                                "type" : "hexstr",
                                                                                "value" : "0xffff"
                                                                              }
                                                                            }
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0x2"
                                                                          }
                                                                        }
                                                                      },
                                                                      "right" : {
                                                                        "type" : "hexstr",
                                                                        "value" : "0xffff"
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0xffff"
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "&",
                                                              "left" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "+",
                                                                  "left" : {
                                                                    "type" : "hexstr",
                                                                    "value" : "0x0062"
                                                                  },
                                                                  "right" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "&",
                                                                      "left" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "<<",
                                                                          "left" : {
                                                                            "type" : "expression",
                                                                            "value" : {
                                                                              "op" : "&",
                                                                              "left" : {
                                                                                "type" : "field",
                                                                                "value" : ["int_shim", "len"]
                                                                              },
                                                                              "right" : {
                                                                                "type" : "hexstr",
                                                                                "value" : "0xffff"
                                                                              }
                                                                            }
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0x2"
                                                                          }
                                                                        }
                                                                      },
                                                                      "right" : {
                                                                        "type" : "hexstr",
                                                                        "value" : "0xffff"
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0xffff"
                                                              }
                                                            }
                                                          },
                                                          "cond" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "d2b",
                                                              "left" : null,
                                                              "right" : {
                                                                "type" : "field",
                                                                "value" : ["ipv4", "$valid$"]
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "?",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "&",
                                                              "left" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "+",
                                                                  "left" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "&",
                                                                      "left" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "+",
                                                                          "left" : {
                                                                            "type" : "expression",
                                                                            "value" : {
                                                                              "op" : "?",
                                                                              "left" : {
                                                                                "type" : "expression",
                                                                                "value" : {
                                                                                  "op" : "&",
                                                                                  "left" : {
                                                                                    "type" : "expression",
                                                                                    "value" : {
                                                                                      "op" : "+",
                                                                                      "left" : {
                                                                                        "type" : "hexstr",
                                                                                        "value" : "0x004e"
                                                                                      },
                                                                                      "right" : {
                                                                                        "type" : "expression",
                                                                                        "value" : {
                                                                                          "op" : "&",
                                                                                          "left" : {
                                                                                            "type" : "expression",
                                                                                            "value" : {
                                                                                              "op" : "<<",
                                                                                              "left" : {
                                                                                                "type" : "expression",
                                                                                                "value" : {
                                                                                                  "op" : "&",
                                                                                                  "left" : {
                                                                                                    "type" : "field",
                                                                                                    "value" : ["int_shim", "len"]
                                                                                                  },
                                                                                                  "right" : {
                                                                                                    "type" : "hexstr",
                                                                                                    "value" : "0xffff"
                                                                                                  }
                                                                                                }
                                                                                              },
                                                                                              "right" : {
                                                                                                "type" : "hexstr",
                                                                                                "value" : "0x2"
                                                                                              }
                                                                                            }
                                                                                          },
                                                                                          "right" : {
                                                                                            "type" : "hexstr",
                                                                                            "value" : "0xffff"
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  },
                                                                                  "right" : {
                                                                                    "type" : "hexstr",
                                                                                    "value" : "0xffff"
                                                                                  }
                                                                                }
                                                                              },
                                                                              "right" : {
                                                                                "type" : "expression",
                                                                                "value" : {
                                                                                  "op" : "&",
                                                                                  "left" : {
                                                                                    "type" : "expression",
                                                                                    "value" : {
                                                                                      "op" : "+",
                                                                                      "left" : {
                                                                                        "type" : "hexstr",
                                                                                        "value" : "0x0062"
                                                                                      },
                                                                                      "right" : {
                                                                                        "type" : "expression",
                                                                                        "value" : {
                                                                                          "op" : "&",
                                                                                          "left" : {
                                                                                            "type" : "expression",
                                                                                            "value" : {
                                                                                              "op" : "<<",
                                                                                              "left" : {
                                                                                                "type" : "expression",
                                                                                                "value" : {
                                                                                                  "op" : "&",
                                                                                                  "left" : {
                                                                                                    "type" : "field",
                                                                                                    "value" : ["int_shim", "len"]
                                                                                                  },
                                                                                                  "right" : {
                                                                                                    "type" : "hexstr",
                                                                                                    "value" : "0xffff"
                                                                                                  }
                                                                                                }
                                                                                              },
                                                                                              "right" : {
                                                                                                "type" : "hexstr",
                                                                                                "value" : "0x2"
                                                                                              }
                                                                                            }
                                                                                          },
                                                                                          "right" : {
                                                                                            "type" : "hexstr",
                                                                                            "value" : "0xffff"
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  },
                                                                                  "right" : {
                                                                                    "type" : "hexstr",
                                                                                    "value" : "0xffff"
                                                                                  }
                                                                                }
                                                                              },
                                                                              "cond" : {
                                                                                "type" : "expression",
                                                                                "value" : {
                                                                                  "op" : "d2b",
                                                                                  "left" : null,
                                                                                  "right" : {
                                                                                    "type" : "field",
                                                                                    "value" : ["ipv4", "$valid$"]
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0x0008"
                                                                          }
                                                                        }
                                                                      },
                                                                      "right" : {
                                                                        "type" : "hexstr",
                                                                        "value" : "0xffff"
                                                                      }
                                                                    }
                                                                  },
                                                                  "right" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "&",
                                                                      "left" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "<<",
                                                                          "left" : {
                                                                            "type" : "expression",
                                                                            "value" : {
                                                                              "op" : "&",
                                                                              "left" : {
                                                                                "type" : "expression",
                                                                                "value" : {
                                                                                  "op" : "+",
                                                                                  "left" : {
                                                                                    "type" : "expression",
                                                                                    "value" : {
                                                                                      "op" : "&",
                                                                                      "left" : {
                                                                                        "type" : "field",
                                                                                        "value" : ["srv6h", "last_entry"]
                                                                                      },
                                                                                      "right" : {
                                                                                        "type" : "hexstr",
                                                                                        "value" : "0xffff"
                                                                                      }
                                                                                    }
                                                                                  },
                                                                                  "right" : {
                                                                                    "type" : "hexstr",
                                                                                    "value" : "0x0001"
                                                                                  }
                                                                                }
                                                                              },
                                                                              "right" : {
                                                                                "type" : "hexstr",
                                                                                "value" : "0xffff"
                                                                              }
                                                                            }
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0x4"
                                                                          }
                                                                        }
                                                                      },
                                                                      "right" : {
                                                                        "type" : "hexstr",
                                                                        "value" : "0xffff"
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0xffff"
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "?",
                                                              "left" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "&",
                                                                  "left" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "+",
                                                                      "left" : {
                                                                        "type" : "hexstr",
                                                                        "value" : "0x004e"
                                                                      },
                                                                      "right" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "&",
                                                                          "left" : {
                                                                            "type" : "expression",
                                                                            "value" : {
                                                                              "op" : "<<",
                                                                              "left" : {
                                                                                "type" : "expression",
                                                                                "value" : {
                                                                                  "op" : "&",
                                                                                  "left" : {
                                                                                    "type" : "field",
                                                                                    "value" : ["int_shim", "len"]
                                                                                  },
                                                                                  "right" : {
                                                                                    "type" : "hexstr",
                                                                                    "value" : "0xffff"
                                                                                  }
                                                                                }
                                                                              },
                                                                              "right" : {
                                                                                "type" : "hexstr",
                                                                                "value" : "0x2"
                                                                              }
                                                                            }
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0xffff"
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  },
                                                                  "right" : {
                                                                    "type" : "hexstr",
                                                                    "value" : "0xffff"
                                                                  }
                                                                }
                                                              },
                                                              "right" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "&",
                                                                  "left" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "+",
                                                                      "left" : {
                                                                        "type" : "hexstr",
                                                                        "value" : "0x0062"
                                                                      },
                                                                      "right" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "&",
                                                                          "left" : {
                                                                            "type" : "expression",
                                                                            "value" : {
                                                                              "op" : "<<",
                                                                              "left" : {
                                                                                "type" : "expression",
                                                                                "value" : {
                                                                                  "op" : "&",
                                                                                  "left" : {
                                                                                    "type" : "field",
                                                                                    "value" : ["int_shim", "len"]
                                                                                  },
                                                                                  "right" : {
                                                                                    "type" : "hexstr",
                                                                                    "value" : "0xffff"
                                                                                  }
                                                                                }
                                                                              },
                                                                              "right" : {
                                                                                "type" : "hexstr",
                                                                                "value" : "0x2"
                                                                              }
                                                                            }
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0xffff"
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  },
                                                                  "right" : {
                                                                    "type" : "hexstr",
                                                                    "value" : "0xffff"
                                                                  }
                                                                }
                                                              },
                                                              "cond" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "d2b",
                                                                  "left" : null,
                                                                  "right" : {
                                                                    "type" : "field",
                                                                    "value" : ["ipv4", "$valid$"]
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          },
                                                          "cond" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "==",
                                                              "left" : {
                                                                "type" : "field",
                                                                "value" : ["ipv6", "next_hdr"]
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0x2b"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "cond" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "d2b",
                                                          "left" : null,
                                                          "right" : {
                                                            "type" : "field",
                                                            "value" : ["ipv4", "$valid$"]
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "right" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "&",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "<<",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "&",
                                                              "left" : {
                                                                "type" : "field",
                                                                "value" : ["tcp", "dataOffset"]
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0xffff"
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0x2"
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "hexstr",
                                                        "value" : "0xffff"
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "right" : {
                                                "type" : "hexstr",
                                                "value" : "0xffff"
                                              }
                                            }
                                          },
                                          "right" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "?",
                                              "left" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "?",
                                                  "left" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "&",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "+",
                                                          "left" : {
                                                            "type" : "hexstr",
                                                            "value" : "0x004e"
                                                          },
                                                          "right" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "&",
                                                              "left" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "<<",
                                                                  "left" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "&",
                                                                      "left" : {
                                                                        "type" : "field",
                                                                        "value" : ["int_shim", "len"]
                                                                      },
                                                                      "right" : {
                                                                        "type" : "hexstr",
                                                                        "value" : "0xffff"
                                                                      }
                                                                    }
                                                                  },
                                                                  "right" : {
                                                                    "type" : "hexstr",
                                                                    "value" : "0x2"
                                                                  }
                                                                }
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0xffff"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "hexstr",
                                                        "value" : "0xffff"
                                                      }
                                                    }
                                                  },
                                                  "right" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "&",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "+",
                                                          "left" : {
                                                            "type" : "hexstr",
                                                            "value" : "0x0062"
                                                          },
                                                          "right" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "&",
                                                              "left" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "<<",
                                                                  "left" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "&",
                                                                      "left" : {
                                                                        "type" : "field",
                                                                        "value" : ["int_shim", "len"]
                                                                      },
                                                                      "right" : {
                                                                        "type" : "hexstr",
                                                                        "value" : "0xffff"
                                                                      }
                                                                    }
                                                                  },
                                                                  "right" : {
                                                                    "type" : "hexstr",
                                                                    "value" : "0x2"
                                                                  }
                                                                }
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0xffff"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "hexstr",
                                                        "value" : "0xffff"
                                                      }
                                                    }
                                                  },
                                                  "cond" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "d2b",
                                                      "left" : null,
                                                      "right" : {
                                                        "type" : "field",
                                                        "value" : ["ipv4", "$valid$"]
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "right" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "?",
                                                  "left" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "&",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "+",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "&",
                                                              "left" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "+",
                                                                  "left" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "?",
                                                                      "left" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "&",
                                                                          "left" : {
                                                                            "type" : "expression",
                                                                            "value" : {
                                                                              "op" : "+",
                                                                              "left" : {
                                                                                "type" : "hexstr",
                                                                                "value" : "0x004e"
                                                                              },
                                                                              "right" : {
                                                                                "type" : "expression",
                                                                                "value" : {
                                                                                  "op" : "&",
                                                                                  "left" : {
                                                                                    "type" : "expression",
                                                                                    "value" : {
                                                                                      "op" : "<<",
                                                                                      "left" : {
                                                                                        "type" : "expression",
                                                                                        "value" : {
                                                                                          "op" : "&",
                                                                                          "left" : {
                                                                                            "type" : "field",
                                                                                            "value" : ["int_shim", "len"]
                                                                                          },
                                                                                          "right" : {
                                                                                            "type" : "hexstr",
                                                                                            "value" : "0xffff"
                                                                                          }
                                                                                        }
                                                                                      },
                                                                                      "right" : {
                                                                                        "type" : "hexstr",
                                                                                        "value" : "0x2"
                                                                                      }
                                                                                    }
                                                                                  },
                                                                                  "right" : {
                                                                                    "type" : "hexstr",
                                                                                    "value" : "0xffff"
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0xffff"
                                                                          }
                                                                        }
                                                                      },
                                                                      "right" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "&",
                                                                          "left" : {
                                                                            "type" : "expression",
                                                                            "value" : {
                                                                              "op" : "+",
                                                                              "left" : {
                                                                                "type" : "hexstr",
                                                                                "value" : "0x0062"
                                                                              },
                                                                              "right" : {
                                                                                "type" : "expression",
                                                                                "value" : {
                                                                                  "op" : "&",
                                                                                  "left" : {
                                                                                    "type" : "expression",
                                                                                    "value" : {
                                                                                      "op" : "<<",
                                                                                      "left" : {
                                                                                        "type" : "expression",
                                                                                        "value" : {
                                                                                          "op" : "&",
                                                                                          "left" : {
                                                                                            "type" : "field",
                                                                                            "value" : ["int_shim", "len"]
                                                                                          },
                                                                                          "right" : {
                                                                                            "type" : "hexstr",
                                                                                            "value" : "0xffff"
                                                                                          }
                                                                                        }
                                                                                      },
                                                                                      "right" : {
                                                                                        "type" : "hexstr",
                                                                                        "value" : "0x2"
                                                                                      }
                                                                                    }
                                                                                  },
                                                                                  "right" : {
                                                                                    "type" : "hexstr",
                                                                                    "value" : "0xffff"
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0xffff"
                                                                          }
                                                                        }
                                                                      },
                                                                      "cond" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "d2b",
                                                                          "left" : null,
                                                                          "right" : {
                                                                            "type" : "field",
                                                                            "value" : ["ipv4", "$valid$"]
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  },
                                                                  "right" : {
                                                                    "type" : "hexstr",
                                                                    "value" : "0x0008"
                                                                  }
                                                                }
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0xffff"
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "&",
                                                              "left" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "<<",
                                                                  "left" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "&",
                                                                      "left" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "+",
                                                                          "left" : {
                                                                            "type" : "expression",
                                                                            "value" : {
                                                                              "op" : "&",
                                                                              "left" : {
                                                                                "type" : "field",
                                                                                "value" : ["srv6h", "last_entry"]
                                                                              },
                                                                              "right" : {
                                                                                "type" : "hexstr",
                                                                                "value" : "0xffff"
                                                                              }
                                                                            }
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0x0001"
                                                                          }
                                                                        }
                                                                      },
                                                                      "right" : {
                                                                        "type" : "hexstr",
                                                                        "value" : "0xffff"
                                                                      }
                                                                    }
                                                                  },
                                                                  "right" : {
                                                                    "type" : "hexstr",
                                                                    "value" : "0x4"
                                                                  }
                                                                }
                                                              },
                                                              "right" : {
                                                                "type" : "hexstr",
                                                                "value" : "0xffff"
                                                              }
                                                            }
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "hexstr",
                                                        "value" : "0xffff"
                                                      }
                                                    }
                                                  },
                                                  "right" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "?",
                                                      "left" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "&",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "+",
                                                              "left" : {
                                                                "type" : "hexstr",
                                                                "value" : "0x004e"
                                                              },
                                                              "right" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "&",
                                                                  "left" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "<<",
                                                                      "left" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "&",
                                                                          "left" : {
                                                                            "type" : "field",
                                                                            "value" : ["int_shim", "len"]
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0xffff"
                                                                          }
                                                                        }
                                                                      },
                                                                      "right" : {
                                                                        "type" : "hexstr",
                                                                        "value" : "0x2"
                                                                      }
                                                                    }
                                                                  },
                                                                  "right" : {
                                                                    "type" : "hexstr",
                                                                    "value" : "0xffff"
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0xffff"
                                                          }
                                                        }
                                                      },
                                                      "right" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "&",
                                                          "left" : {
                                                            "type" : "expression",
                                                            "value" : {
                                                              "op" : "+",
                                                              "left" : {
                                                                "type" : "hexstr",
                                                                "value" : "0x0062"
                                                              },
                                                              "right" : {
                                                                "type" : "expression",
                                                                "value" : {
                                                                  "op" : "&",
                                                                  "left" : {
                                                                    "type" : "expression",
                                                                    "value" : {
                                                                      "op" : "<<",
                                                                      "left" : {
                                                                        "type" : "expression",
                                                                        "value" : {
                                                                          "op" : "&",
                                                                          "left" : {
                                                                            "type" : "field",
                                                                            "value" : ["int_shim", "len"]
                                                                          },
                                                                          "right" : {
                                                                            "type" : "hexstr",
                                                                            "value" : "0xffff"
                                                                          }
                                                                        }
                                                                      },
                                                                      "right" : {
                                                                        "type" : "hexstr",
                                                                        "value" : "0x2"
                                                                      }
                                                                    }
                                                                  },
                                                                  "right" : {
                                                                    "type" : "hexstr",
                                                                    "value" : "0xffff"
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          },
                                                          "right" : {
                                                            "type" : "hexstr",
                                                            "value" : "0xffff"
                                                          }
                                                        }
                                                      },
                                                      "cond" : {
                                                        "type" : "expression",
                                                        "value" : {
                                                          "op" : "d2b",
                                                          "left" : null,
                                                          "right" : {
                                                            "type" : "field",
                                                            "value" : ["ipv4", "$valid$"]
                                                          }
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "cond" : {
                                                    "type" : "expression",
                                                    "value" : {
                                                      "op" : "==",
                                                      "left" : {
                                                        "type" : "field",
                                                        "value" : ["ipv6", "next_hdr"]
                                                      },
                                                      "right" : {
                                                        "type" : "hexstr",
                                                        "value" : "0x2b"
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "cond" : {
                                                "type" : "expression",
                                                "value" : {
                                                  "op" : "d2b",
                                                  "left" : null,
                                                  "right" : {
                                                    "type" : "field",
                                                    "value" : ["ipv4", "$valid$"]
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "cond" : {
                                            "type" : "expression",
                                            "value" : {
                                              "op" : "d2b",
                                              "left" : null,
                                              "right" : {
                                                "type" : "field",
                                                "value" : ["tcp", "$valid$"]
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "right" : {
                                        "type" : "hexstr",
                                        "value" : "0x0008"
                                      }
                                    }
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0xffff"
                                  }
                                }
                              },
                              "cond" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "d2b",
                                  "left" : null,
                                  "right" : {
                                    "type" : "field",
                                    "value" : ["tcp", "$valid$"]
                                  }
                                }
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xffffffff"
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x0000000f"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_report.p4",
            "line" : 116,
            "column" : 21,
            "source_fragment" : "(bit<32>)hdr.report_ipv4.totalLen + 14 + 1"
          }
        },
        {
          "op" : "truncate",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_15"]
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_report.p4",
            "line" : 116,
            "column" : 12,
            "source_fragment" : "truncate((bit<32>)hdr.report_ipv4.totalLen + 14 + 1)"
          }
        }
      ]
    },
    {
      "name" : "egress.Int_sink.remove_sink_header",
      "id" : 93,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ipv4", "dscp"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["int_shim", "dscp"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["ipv4", "dscp"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "d2b",
                      "left" : null,
                      "right" : {
                        "type" : "field",
                        "value" : ["ipv4", "$valid$"]
                      }
                    }
                  }
                }
              }
            }
          ]
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ipv4", "totalLen"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "-",
                          "left" : {
                            "type" : "field",
                            "value" : ["ipv4", "totalLen"]
                          },
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "<<",
                                  "left" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "&",
                                      "left" : {
                                        "type" : "field",
                                        "value" : ["int_shim", "len"]
                                      },
                                      "right" : {
                                        "type" : "hexstr",
                                        "value" : "0xffff"
                                      }
                                    }
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0x2"
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffff"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["ipv4", "totalLen"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "d2b",
                      "left" : null,
                      "right" : {
                        "type" : "field",
                        "value" : ["ipv4", "$valid$"]
                      }
                    }
                  }
                }
              }
            }
          ]
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ipv6", "traffic_class"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["ipv6", "traffic_class"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["int_shim", "dscp"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "d2b",
                      "left" : null,
                      "right" : {
                        "type" : "field",
                        "value" : ["ipv4", "$valid$"]
                      }
                    }
                  }
                }
              }
            }
          ]
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ipv6", "payload_len"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "field",
                    "value" : ["ipv6", "payload_len"]
                  },
                  "right" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "-",
                          "left" : {
                            "type" : "field",
                            "value" : ["ipv6", "payload_len"]
                          },
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "<<",
                                  "left" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "&",
                                      "left" : {
                                        "type" : "field",
                                        "value" : ["int_shim", "len"]
                                      },
                                      "right" : {
                                        "type" : "hexstr",
                                        "value" : "0xffff"
                                      }
                                    }
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0x2"
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffff"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffff"
                      }
                    }
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "d2b",
                      "left" : null,
                      "right" : {
                        "type" : "field",
                        "value" : ["ipv4", "$valid$"]
                      }
                    }
                  }
                }
              }
            }
          ]
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["udp", "len"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "&",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "-",
                          "left" : {
                            "type" : "field",
                            "value" : ["udp", "len"]
                          },
                          "right" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "&",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "<<",
                                  "left" : {
                                    "type" : "expression",
                                    "value" : {
                                      "op" : "&",
                                      "left" : {
                                        "type" : "field",
                                        "value" : ["int_shim", "len"]
                                      },
                                      "right" : {
                                        "type" : "hexstr",
                                        "value" : "0xffff"
                                      }
                                    }
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0x2"
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0xffff"
                              }
                            }
                          }
                        }
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xffff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["udp", "len"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "d2b",
                      "left" : null,
                      "right" : {
                        "type" : "field",
                        "value" : ["udp", "$valid$"]
                      }
                    }
                  }
                }
              }
            }
          ]
        },
        {
          "op" : "remove_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "int_data"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_sink.p4",
            "line" : 69,
            "column" : 8,
            "source_fragment" : "hdr.int_data.setInvalid()"
          }
        },
        {
          "op" : "remove_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "int_switch_id"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_sink.p4",
            "line" : 72,
            "column" : 8,
            "source_fragment" : "hdr.int_switch_id.setInvalid()"
          }
        },
        {
          "op" : "remove_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "int_port_ids"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_sink.p4",
            "line" : 73,
            "column" : 8,
            "source_fragment" : "hdr.int_port_ids.setInvalid()"
          }
        },
        {
          "op" : "remove_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "int_ingress_tstamp"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_sink.p4",
            "line" : 74,
            "column" : 8,
            "source_fragment" : "hdr.int_ingress_tstamp.setInvalid()"
          }
        },
        {
          "op" : "remove_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "int_egress_tstamp"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_sink.p4",
            "line" : 75,
            "column" : 8,
            "source_fragment" : "hdr.int_egress_tstamp.setInvalid()"
          }
        },
        {
          "op" : "remove_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "int_hop_latency"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_sink.p4",
            "line" : 76,
            "column" : 8,
            "source_fragment" : "hdr.int_hop_latency.setInvalid()"
          }
        },
        {
          "op" : "remove_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "int_level2_port_ids"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_sink.p4",
            "line" : 77,
            "column" : 8,
            "source_fragment" : "hdr.int_level2_port_ids.setInvalid()"
          }
        },
        {
          "op" : "remove_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "int_q_occupancy"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_sink.p4",
            "line" : 78,
            "column" : 8,
            "source_fragment" : "hdr.int_q_occupancy.setInvalid()"
          }
        },
        {
          "op" : "remove_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "int_egress_port_tx_util"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_sink.p4",
            "line" : 79,
            "column" : 8,
            "source_fragment" : "hdr.int_egress_port_tx_util.setInvalid()"
          }
        },
        {
          "op" : "remove_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "int_shim"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_sink.p4",
            "line" : 82,
            "column" : 8,
            "source_fragment" : "hdr.int_shim.setInvalid()"
          }
        },
        {
          "op" : "remove_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "int_header"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_sink.p4",
            "line" : 83,
            "column" : 8,
            "source_fragment" : "hdr.int_header.setInvalid()"
          }
        }
      ]
    },
    {
      "name" : "int334",
      "id" : 94,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "cpu_in"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/int.p4",
            "line" : 334,
            "column" : 12,
            "source_fragment" : "hdr.cpu_in.setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["cpu_in", "ingress_port"]
            },
            {
              "type" : "field",
              "value" : ["standard_metadata", "ingress_port"]
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/int.p4",
            "line" : 335,
            "column" : 12,
            "source_fragment" : "hdr.cpu_in.ingress_port = eg_intr_md.ingress_port"
          }
        },
        {
          "op" : "exit",
          "parameters" : [],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/int.p4",
            "line" : 336,
            "column" : 12,
            "source_fragment" : "exit"
          }
        }
      ]
    },
    {
      "name" : "int330",
      "id" : 95,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "log_msg",
          "parameters" : [
            {
              "type" : "string",
              "value" : "Q depth: {}"
            },
            {
              "type" : "parameters_vector",
              "value" : [
                {
                  "type" : "field",
                  "value" : ["standard_metadata", "enq_qdepth"]
                }
              ]
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/int.p4",
            "line" : 330,
            "column" : 8,
            "source_fragment" : "        log_msg(\\\"Q depth: {}\\\", {eg_intr_md.enq_qdepth});"
          }
        }
      ]
    },
    {
      "name" : "int347",
      "id" : 96,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "mark_to_drop",
          "parameters" : [
            {
              "type" : "header",
              "value" : "standard_metadata"
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/int.p4",
            "line" : 347,
            "column" : 12,
            "source_fragment" : "mark_to_drop(eg_intr_md)"
          }
        }
      ]
    },
    {
      "name" : "int_transit401",
      "id" : 97,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "Int_transit_hasReturned"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "b2d",
                  "left" : null,
                  "right" : {
                    "type" : "bool",
                    "value" : true
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 401,
            "column" : 16,
            "source_fragment" : "return"
          }
        }
      ]
    },
    {
      "name" : "act_0",
      "id" : 98,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "Int_transit_hasReturned"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "b2d",
                  "left" : null,
                  "right" : {
                    "type" : "bool",
                    "value" : false
                  }
                }
              }
            }
          ]
        }
      ]
    },
    {
      "name" : "int_transit408",
      "id" : 99,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "Int_transit_hasReturned"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "b2d",
                  "left" : null,
                  "right" : {
                    "type" : "bool",
                    "value" : true
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 408,
            "column" : 16,
            "source_fragment" : "return"
          }
        }
      ]
    },
    {
      "name" : "int_transit418",
      "id" : 100,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "log_msg",
          "parameters" : [
            {
              "type" : "string",
              "value" : "Q depth transit: {}"
            },
            {
              "type" : "parameters_vector",
              "value" : [
                {
                  "type" : "field",
                  "value" : ["standard_metadata", "enq_qdepth"]
                }
              ]
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 418,
            "column" : 12,
            "source_fragment" : "            log_msg(\\\"Q depth transit: {}\\\", {standard_metadata.enq_qdepth});"
          }
        }
      ]
    },
    {
      "name" : "int_sink91",
      "id" : 101,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "Int_sink_hasReturned"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "b2d",
                  "left" : null,
                  "right" : {
                    "type" : "bool",
                    "value" : true
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_sink.p4",
            "line" : 91,
            "column" : 12,
            "source_fragment" : "return"
          }
        }
      ]
    },
    {
      "name" : "act_1",
      "id" : 102,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "Int_sink_hasReturned"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "b2d",
                  "left" : null,
                  "right" : {
                    "type" : "bool",
                    "value" : false
                  }
                }
              }
            }
          ]
        }
      ]
    },
    {
      "name" : "int355",
      "id" : 103,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata._tcpLen20"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "-",
                      "left" : {
                        "type" : "field",
                        "value" : ["ipv4", "totalLen"]
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "&",
                          "left" : {
                            "type" : "expression",
                            "value" : {
                              "op" : "<<",
                              "left" : {
                                "type" : "expression",
                                "value" : {
                                  "op" : "&",
                                  "left" : {
                                    "type" : "field",
                                    "value" : ["ipv4", "ihl"]
                                  },
                                  "right" : {
                                    "type" : "hexstr",
                                    "value" : "0xffff"
                                  }
                                }
                              },
                              "right" : {
                                "type" : "hexstr",
                                "value" : "0x2"
                              }
                            }
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0xffff"
                          }
                        }
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/int.p4",
            "line" : 355,
            "column" : 30,
            "source_fragment" : "meta.tcpLen = hdr.ipv4.totalLen - (bit<16>)(hdr.ipv4.ihl)*4"
          }
        }
      ]
    }
  ],
  "pipelines" : [
    {
      "name" : "ingress",
      "id" : 0,
      "source_info" : {
        "filename" : "/home/lchampagne/Documents/Test/int_v1.0/int.p4",
        "line" : 35,
        "column" : 8,
        "source_fragment" : "ingress"
      },
      "init_table" : "node_2",
      "tables" : [
        {
          "name" : "tbl_int271",
          "id" : 0,
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/int.p4",
            "line" : 271,
            "column" : 35,
            "source_fragment" : "= hdr.cpu_out.egress_port; ..."
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [37],
          "actions" : ["int271"],
          "base_default_next" : "tbl_int276",
          "next_tables" : {
            "int271" : "tbl_int276"
          },
          "default_entry" : {
            "action_id" : 37,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_int276",
          "id" : 1,
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/int.p4",
            "line" : 276,
            "column" : 8,
            "source_fragment" : "bool do_l3_l2 = true;"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [39],
          "actions" : ["int276"],
          "base_default_next" : "node_5",
          "next_tables" : {
            "int276" : "node_5"
          },
          "default_entry" : {
            "action_id" : 39,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "ingress.ndp_reply_table",
          "id" : 2,
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/int.p4",
            "line" : 153,
            "column" : 10,
            "source_fragment" : "ndp_reply_table"
          },
          "key" : [
            {
              "match_type" : "exact",
              "name" : "hdr.ndp.target_ipv6_addr",
              "target" : ["ndp", "target_ipv6_addr"],
              "mask" : null
            }
          ],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : true,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [31, 10],
          "actions" : ["ingress.ndp_ns_to_na", "NoAction"],
          "base_default_next" : null,
          "next_tables" : {
            "__HIT__" : "tbl_int280",
            "__MISS__" : "node_8"
          },
          "default_entry" : {
            "action_id" : 10,
            "action_const" : false,
            "action_data" : [],
            "action_entry_const" : false
          }
        },
        {
          "name" : "tbl_int280",
          "id" : 3,
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/int.p4",
            "line" : 280,
            "column" : 25,
            "source_fragment" : "="
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [38],
          "actions" : ["int280"],
          "base_default_next" : "node_8",
          "next_tables" : {
            "int280" : "node_8"
          },
          "default_entry" : {
            "action_id" : 38,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "ingress.ipv4_lpm",
          "id" : 4,
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/int.p4",
            "line" : 46,
            "column" : 10,
            "source_fragment" : "ipv4_lpm"
          },
          "key" : [
            {
              "match_type" : "lpm",
              "name" : "hdr.ipv4.dstAddr",
              "target" : ["ipv4", "dstAddr"],
              "mask" : null
            }
          ],
          "match_type" : "lpm",
          "type" : "simple",
          "max_size" : 256,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [24, 7],
          "actions" : ["ingress.ipv4_forward", "NoAction"],
          "base_default_next" : "node_11",
          "next_tables" : {
            "ingress.ipv4_forward" : "node_11",
            "NoAction" : "node_11"
          },
          "default_entry" : {
            "action_id" : 7,
            "action_const" : false,
            "action_data" : [],
            "action_entry_const" : false
          }
        },
        {
          "name" : "tbl_int_source115",
          "id" : 5,
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_source.p4",
            "line" : 115,
            "column" : 41,
            "source_fragment" : "= (bit<64>) standard_metadata.ingress_global_timestamp; ..."
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [40],
          "actions" : ["int_source115"],
          "base_default_next" : "ingress.Int_source.tb_activate_source",
          "next_tables" : {
            "int_source115" : "ingress.Int_source.tb_activate_source"
          },
          "default_entry" : {
            "action_id" : 40,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "ingress.Int_source.tb_activate_source",
          "id" : 6,
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_source.p4",
            "line" : 99,
            "column" : 10,
            "source_fragment" : "tb_activate_source"
          },
          "key" : [
            {
              "match_type" : "exact",
              "name" : "standard_metadata.ingress_port",
              "target" : ["standard_metadata", "ingress_port"],
              "mask" : null
            }
          ],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 255,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [16, 2],
          "actions" : ["ingress.Int_source.activate_source", "NoAction"],
          "base_default_next" : "tbl_int_source121",
          "next_tables" : {
            "ingress.Int_source.activate_source" : "tbl_int_source121",
            "NoAction" : "tbl_int_source121"
          },
          "default_entry" : {
            "action_id" : 2,
            "action_const" : false,
            "action_data" : [],
            "action_entry_const" : false
          }
        },
        {
          "name" : "tbl_int_source121",
          "id" : 7,
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_source.p4",
            "line" : 121,
            "column" : 8,
            "source_fragment" : "random<bit<8>>(res, 1, 1)"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [42],
          "actions" : ["int_source121"],
          "base_default_next" : "node_15",
          "next_tables" : {
            "int_source121" : "node_15"
          },
          "default_entry" : {
            "action_id" : 42,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_int_source125",
          "id" : 8,
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_source.p4",
            "line" : 125,
            "column" : 41,
            "source_fragment" : "= 0; ..."
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [41],
          "actions" : ["int_source125"],
          "base_default_next" : "node_18",
          "next_tables" : {
            "int_source125" : "node_18"
          },
          "default_entry" : {
            "action_id" : 41,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "ingress.Int_source.tb_int_source",
          "id" : 9,
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_source.p4",
            "line" : 66,
            "column" : 10,
            "source_fragment" : "tb_int_source"
          },
          "key" : [
            {
              "match_type" : "ternary",
              "name" : "hdr.ipv4.srcAddr",
              "target" : ["ipv4", "srcAddr"],
              "mask" : null
            },
            {
              "match_type" : "ternary",
              "name" : "hdr.ipv4.dstAddr",
              "target" : ["ipv4", "dstAddr"],
              "mask" : null
            },
            {
              "match_type" : "ternary",
              "name" : "meta.layer34_metadata.l4_src",
              "target" : ["scalars", "userMetadata._layer34_metadata_l4_src13"],
              "mask" : null
            },
            {
              "match_type" : "ternary",
              "name" : "meta.layer34_metadata.l4_dst",
              "target" : ["scalars", "userMetadata._layer34_metadata_l4_dst14"],
              "mask" : null
            }
          ],
          "match_type" : "ternary",
          "type" : "simple",
          "max_size" : 127,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [14, 0],
          "actions" : ["ingress.Int_source.configure_source", "NoAction"],
          "base_default_next" : "node_20",
          "next_tables" : {
            "ingress.Int_source.configure_source" : "node_20",
            "NoAction" : "node_20"
          },
          "default_entry" : {
            "action_id" : 0,
            "action_const" : false,
            "action_data" : [],
            "action_entry_const" : false
          }
        },
        {
          "name" : "tbl_int_source133",
          "id" : 10,
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_source.p4",
            "line" : 133,
            "column" : 12,
            "source_fragment" : "            log_msg(\\\"random res: {}\\\", {res});"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [44],
          "actions" : ["int_source133"],
          "base_default_next" : "node_23",
          "next_tables" : {
            "int_source133" : "node_23"
          },
          "default_entry" : {
            "action_id" : 44,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_int_source135",
          "id" : 11,
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_source.p4",
            "line" : 135,
            "column" : 41,
            "source_fragment" : "= 0; ..."
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [43],
          "actions" : ["int_source135"],
          "base_default_next" : "node_25",
          "next_tables" : {
            "int_source135" : "node_25"
          },
          "default_entry" : {
            "action_id" : 43,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "ingress.Int_source.tb_intv6_source",
          "id" : 12,
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_source.p4",
            "line" : 80,
            "column" : 10,
            "source_fragment" : "tb_intv6_source"
          },
          "key" : [
            {
              "match_type" : "ternary",
              "name" : "hdr.ipv6.src_addr",
              "target" : ["ipv6", "src_addr"],
              "mask" : null
            },
            {
              "match_type" : "ternary",
              "name" : "hdr.ipv6.dst_addr",
              "target" : ["ipv6", "dst_addr"],
              "mask" : null
            },
            {
              "match_type" : "ternary",
              "name" : "meta.layer34_metadata.l4_src",
              "target" : ["scalars", "userMetadata._layer34_metadata_l4_src13"],
              "mask" : null
            },
            {
              "match_type" : "ternary",
              "name" : "meta.layer34_metadata.l4_dst",
              "target" : ["scalars", "userMetadata._layer34_metadata_l4_dst14"],
              "mask" : null
            }
          ],
          "match_type" : "ternary",
          "type" : "simple",
          "max_size" : 127,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [15, 1],
          "actions" : ["ingress.Int_source.configure_source", "NoAction"],
          "base_default_next" : "node_27",
          "next_tables" : {
            "ingress.Int_source.configure_source" : "node_27",
            "NoAction" : "node_27"
          },
          "default_entry" : {
            "action_id" : 1,
            "action_const" : false,
            "action_data" : [],
            "action_entry_const" : false
          }
        },
        {
          "name" : "ingress.SRv6.srv6_my_sid",
          "id" : 13,
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/srv6.p4",
            "line" : 22,
            "column" : 10,
            "source_fragment" : "srv6_my_sid"
          },
          "key" : [
            {
              "match_type" : "lpm",
              "name" : "hdr.ipv6.dst_addr",
              "target" : ["ipv6", "dst_addr"],
              "mask" : null
            }
          ],
          "match_type" : "lpm",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : true,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [17, 3],
          "actions" : ["ingress.SRv6.srv6_end", "NoAction"],
          "base_default_next" : null,
          "next_tables" : {
            "__HIT__" : "node_29",
            "__MISS__" : "ingress.SRv6.srv6_transit"
          },
          "default_entry" : {
            "action_id" : 3,
            "action_const" : false,
            "action_data" : [],
            "action_entry_const" : false
          }
        },
        {
          "name" : "tbl_SRv6_srv6_pop",
          "id" : 14,
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/srv6.p4",
            "line" : 110,
            "column" : 16,
            "source_fragment" : "srv6_pop()"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [20],
          "actions" : ["ingress.SRv6.srv6_pop"],
          "base_default_next" : "ingress.ipv6_lpm",
          "next_tables" : {
            "ingress.SRv6.srv6_pop" : "ingress.ipv6_lpm"
          },
          "default_entry" : {
            "action_id" : 20,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "ingress.SRv6.srv6_transit",
          "id" : 15,
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/srv6.p4",
            "line" : 78,
            "column" : 10,
            "source_fragment" : "srv6_transit"
          },
          "key" : [
            {
              "match_type" : "lpm",
              "name" : "hdr.ipv6.dst_addr",
              "target" : ["ipv6", "dst_addr"],
              "mask" : null
            }
          ],
          "match_type" : "lpm",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : true,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [18, 19, 4],
          "actions" : ["ingress.SRv6.srv6_t_insert_2", "ingress.SRv6.srv6_t_insert_3", "NoAction"],
          "base_default_next" : "ingress.ipv6_lpm",
          "next_tables" : {
            "ingress.SRv6.srv6_t_insert_2" : "ingress.ipv6_lpm",
            "ingress.SRv6.srv6_t_insert_3" : "ingress.ipv6_lpm",
            "NoAction" : "ingress.ipv6_lpm"
          },
          "default_entry" : {
            "action_id" : 4,
            "action_const" : false,
            "action_data" : [],
            "action_entry_const" : false
          }
        },
        {
          "name" : "ingress.ipv6_lpm",
          "id" : 16,
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/int.p4",
            "line" : 213,
            "column" : 10,
            "source_fragment" : "ipv6_lpm"
          },
          "key" : [
            {
              "match_type" : "lpm",
              "name" : "hdr.ipv6.dst_addr",
              "target" : ["ipv6", "dst_addr"],
              "mask" : null
            }
          ],
          "match_type" : "lpm",
          "type" : "simple",
          "max_size" : 256,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [34, 32, 12],
          "actions" : ["ingress.ipv6_forward", "ingress.ecmp_group", "NoAction"],
          "base_default_next" : "node_34",
          "next_tables" : {
            "ingress.ecmp_group" : "ingress.ecmp_group_to_nhop",
            "ingress.ipv6_forward" : "node_34",
            "NoAction" : "node_34"
          },
          "default_entry" : {
            "action_id" : 12,
            "action_const" : false,
            "action_data" : [],
            "action_entry_const" : false
          }
        },
        {
          "name" : "ingress.ecmp_group_to_nhop",
          "id" : 17,
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/int.p4",
            "line" : 201,
            "column" : 10,
            "source_fragment" : "ecmp_group_to_nhop"
          },
          "key" : [
            {
              "match_type" : "exact",
              "name" : "meta.ecmp_metadata.ecmp_group_id",
              "target" : ["scalars", "userMetadata._ecmp_metadata_ecmp_group_id19"],
              "mask" : null
            },
            {
              "match_type" : "exact",
              "name" : "meta.ecmp_metadata.ecmp_hash",
              "target" : ["scalars", "userMetadata._ecmp_metadata_ecmp_hash18"],
              "mask" : null
            }
          ],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [26, 33, 11],
          "actions" : ["ingress.drop", "ingress.ipv6_forward", "NoAction"],
          "base_default_next" : "node_34",
          "next_tables" : {
            "ingress.drop" : "node_34",
            "ingress.ipv6_forward" : "node_34",
            "NoAction" : "node_34"
          },
          "default_entry" : {
            "action_id" : 11,
            "action_const" : false,
            "action_data" : [],
            "action_entry_const" : false
          }
        },
        {
          "name" : "tbl_drop",
          "id" : 18,
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/int.p4",
            "line" : 302,
            "column" : 46,
            "source_fragment" : "drop()"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [28],
          "actions" : ["ingress.drop"],
          "base_default_next" : "ingress.l2_exact_table",
          "next_tables" : {
            "ingress.drop" : "ingress.l2_exact_table"
          },
          "default_entry" : {
            "action_id" : 28,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "ingress.l2_exact_table",
          "id" : 19,
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/int.p4",
            "line" : 92,
            "column" : 10,
            "source_fragment" : "l2_exact_table"
          },
          "key" : [
            {
              "match_type" : "exact",
              "name" : "hdr.ethernet.dstAddr",
              "target" : ["ethernet", "dstAddr"],
              "mask" : null
            }
          ],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : true,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [29, 25, 8],
          "actions" : ["ingress.set_egress_port", "ingress.drop", "NoAction"],
          "base_default_next" : null,
          "next_tables" : {
            "__MISS__" : "ingress.l2_ternary_table",
            "__HIT__" : "node_40"
          },
          "default_entry" : {
            "action_id" : 8,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "ingress.l2_ternary_table",
          "id" : 20,
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/int.p4",
            "line" : 122,
            "column" : 10,
            "source_fragment" : "l2_ternary_table"
          },
          "key" : [
            {
              "match_type" : "ternary",
              "name" : "hdr.ethernet.dstAddr",
              "target" : ["ethernet", "dstAddr"],
              "mask" : null
            }
          ],
          "match_type" : "ternary",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : true,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [30, 9],
          "actions" : ["ingress.set_multicast_group", "NoAction"],
          "base_default_next" : "node_38",
          "next_tables" : {
            "ingress.set_multicast_group" : "node_38",
            "NoAction" : "node_38"
          },
          "default_entry" : {
            "action_id" : 9,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_int310",
          "id" : 21,
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/int.p4",
            "line" : 310,
            "column" : 66,
            "source_fragment" : "mark_to_drop(ig_intr_md)"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [45],
          "actions" : ["int310"],
          "base_default_next" : "node_40",
          "next_tables" : {
            "int310" : "node_40"
          },
          "default_entry" : {
            "action_id" : 45,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "ingress.Int_sink_config.tb_int_sink",
          "id" : 22,
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_sink.p4",
            "line" : 34,
            "column" : 10,
            "source_fragment" : "tb_int_sink"
          },
          "key" : [
            {
              "match_type" : "exact",
              "name" : "standard_metadata.egress_spec",
              "target" : ["standard_metadata", "egress_spec"],
              "mask" : null
            }
          ],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 255,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [21, 5],
          "actions" : ["ingress.Int_sink_config.configure_sink", "NoAction"],
          "base_default_next" : "tbl_act",
          "next_tables" : {
            "ingress.Int_sink_config.configure_sink" : "tbl_act",
            "NoAction" : "tbl_act"
          },
          "default_entry" : {
            "action_id" : 5,
            "action_const" : false,
            "action_data" : [],
            "action_entry_const" : false
          }
        },
        {
          "name" : "tbl_act",
          "id" : 23,
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [47],
          "actions" : ["act"],
          "base_default_next" : "ingress.Flowlet.tb_activate_flow_dest",
          "next_tables" : {
            "act" : "ingress.Flowlet.tb_activate_flow_dest"
          },
          "default_entry" : {
            "action_id" : 47,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "ingress.Flowlet.tb_activate_flow_dest",
          "id" : 24,
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/flowlet.p4",
            "line" : 48,
            "column" : 10,
            "source_fragment" : "tb_activate_flow_dest"
          },
          "key" : [
            {
              "match_type" : "exact",
              "name" : "standard_metadata.egress_spec",
              "target" : ["standard_metadata", "egress_spec"],
              "mask" : null
            }
          ],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 255,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [6],
          "actions" : ["NoAction"],
          "base_default_next" : null,
          "next_tables" : {
            "__MISS__" : "tbl_flowlet60",
            "__HIT__" : "node_46"
          },
          "default_entry" : {
            "action_id" : 6,
            "action_const" : false,
            "action_data" : [],
            "action_entry_const" : false
          }
        },
        {
          "name" : "tbl_flowlet60",
          "id" : 25,
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/flowlet.p4",
            "line" : 60,
            "column" : 48,
            "source_fragment" : "return"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [46],
          "actions" : ["flowlet60"],
          "base_default_next" : "node_46",
          "next_tables" : {
            "flowlet60" : "node_46"
          },
          "default_entry" : {
            "action_id" : 46,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_flowlet62",
          "id" : 26,
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/flowlet.p4",
            "line" : 62,
            "column" : 25,
            "source_fragment" : "="
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [48],
          "actions" : ["flowlet62"],
          "base_default_next" : "tbl_Flowlet_read_flowlet_registers",
          "next_tables" : {
            "flowlet62" : "tbl_Flowlet_read_flowlet_registers"
          },
          "default_entry" : {
            "action_id" : 48,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_Flowlet_read_flowlet_registers",
          "id" : 27,
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/flowlet.p4",
            "line" : 65,
            "column" : 12,
            "source_fragment" : "read_flowlet_registers()"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [22],
          "actions" : ["ingress.Flowlet.read_flowlet_registers"],
          "base_default_next" : "tbl_flowlet66",
          "next_tables" : {
            "ingress.Flowlet.read_flowlet_registers" : "tbl_flowlet66"
          },
          "default_entry" : {
            "action_id" : 22,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_flowlet66",
          "id" : 28,
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/flowlet.p4",
            "line" : 66,
            "column" : 35,
            "source_fragment" : "= standard_metadata.ingress_global_timestamp - meta.flowlet_last_stamp; ..."
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [49],
          "actions" : ["flowlet66"],
          "base_default_next" : "node_50",
          "next_tables" : {
            "flowlet66" : "node_50"
          },
          "default_entry" : {
            "action_id" : 49,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_Flowlet_update_path",
          "id" : 29,
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/flowlet.p4",
            "line" : 72,
            "column" : 16,
            "source_fragment" : "update_path()"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [23],
          "actions" : ["ingress.Flowlet.update_path"],
          "base_default_next" : "ingress.acl_table",
          "next_tables" : {
            "ingress.Flowlet.update_path" : "ingress.acl_table"
          },
          "default_entry" : {
            "action_id" : 23,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "ingress.acl_table",
          "id" : 30,
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/int.p4",
            "line" : 247,
            "column" : 10,
            "source_fragment" : "acl_table"
          },
          "key" : [
            {
              "match_type" : "ternary",
              "name" : "ig_intr_md.ingress_port",
              "target" : ["standard_metadata", "ingress_port"],
              "mask" : null
            },
            {
              "match_type" : "ternary",
              "name" : "hdr.ethernet.dstAddr",
              "target" : ["ethernet", "dstAddr"],
              "mask" : null
            },
            {
              "match_type" : "ternary",
              "name" : "hdr.ethernet.srcAddr",
              "target" : ["ethernet", "srcAddr"],
              "mask" : null
            },
            {
              "match_type" : "ternary",
              "name" : "hdr.ethernet.etherType",
              "target" : ["ethernet", "etherType"],
              "mask" : null
            },
            {
              "match_type" : "ternary",
              "name" : "meta.ip_proto",
              "target" : ["scalars", "userMetadata._ip_proto23"],
              "mask" : null
            },
            {
              "match_type" : "ternary",
              "name" : "meta.icmp_type",
              "target" : ["scalars", "userMetadata._icmp_type24"],
              "mask" : null
            },
            {
              "match_type" : "ternary",
              "name" : "meta.layer34_metadata.l4_src",
              "target" : ["scalars", "userMetadata._layer34_metadata_l4_src13"],
              "mask" : null
            },
            {
              "match_type" : "ternary",
              "name" : "meta.layer34_metadata.l4_dst",
              "target" : ["scalars", "userMetadata._layer34_metadata_l4_dst14"],
              "mask" : null
            }
          ],
          "match_type" : "ternary",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : true,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [35, 36, 27, 13],
          "actions" : ["ingress.send_to_cpu", "ingress.clone_to_cpu", "ingress.drop", "NoAction"],
          "base_default_next" : null,
          "next_tables" : {
            "ingress.send_to_cpu" : null,
            "ingress.clone_to_cpu" : null,
            "ingress.drop" : null,
            "NoAction" : null
          },
          "default_entry" : {
            "action_id" : 13,
            "action_const" : false,
            "action_data" : [],
            "action_entry_const" : false
          }
        }
      ],
      "action_profiles" : [],
      "conditionals" : [
        {
          "name" : "node_2",
          "id" : 0,
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/int.p4",
            "line" : 270,
            "column" : 12,
            "source_fragment" : "hdr.cpu_out.isValid()"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "d2b",
              "left" : null,
              "right" : {
                "type" : "field",
                "value" : ["cpu_out", "$valid$"]
              }
            }
          },
          "true_next" : "tbl_int271",
          "false_next" : "tbl_int276"
        },
        {
          "name" : "node_5",
          "id" : 1,
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/int.p4",
            "line" : 278,
            "column" : 12,
            "source_fragment" : "hdr.icmpv6.isValid() && hdr.icmpv6.type == ICMP6_TYPE_NS"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "and",
              "left" : {
                "type" : "expression",
                "value" : {
                  "op" : "d2b",
                  "left" : null,
                  "right" : {
                    "type" : "field",
                    "value" : ["icmpv6", "$valid$"]
                  }
                }
              },
              "right" : {
                "type" : "expression",
                "value" : {
                  "op" : "==",
                  "left" : {
                    "type" : "field",
                    "value" : ["icmpv6", "type"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0x87"
                  }
                }
              }
            }
          },
          "true_next" : "ingress.ndp_reply_table",
          "false_next" : "node_8"
        },
        {
          "name" : "node_8",
          "id" : 2,
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/int.p4",
            "line" : 284,
            "column" : 12,
            "source_fragment" : "do_l3_l2"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "d2b",
              "left" : null,
              "right" : {
                "type" : "field",
                "value" : ["scalars", "do_l3_l2_0"]
              }
            }
          },
          "true_next" : "node_9",
          "false_next" : "ingress.acl_table"
        },
        {
          "name" : "node_9",
          "id" : 3,
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/int.p4",
            "line" : 286,
            "column" : 16,
            "source_fragment" : "hdr.ipv4.isValid()"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "d2b",
              "left" : null,
              "right" : {
                "type" : "field",
                "value" : ["ipv4", "$valid$"]
              }
            }
          },
          "true_next" : "ingress.ipv4_lpm",
          "false_next" : "node_11"
        },
        {
          "name" : "node_11",
          "id" : 4,
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/int.p4",
            "line" : 290,
            "column" : 16,
            "source_fragment" : "hdr.udp.isValid() || hdr.tcp.isValid()"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "or",
              "left" : {
                "type" : "expression",
                "value" : {
                  "op" : "d2b",
                  "left" : null,
                  "right" : {
                    "type" : "field",
                    "value" : ["udp", "$valid$"]
                  }
                }
              },
              "right" : {
                "type" : "expression",
                "value" : {
                  "op" : "d2b",
                  "left" : null,
                  "right" : {
                    "type" : "field",
                    "value" : ["tcp", "$valid$"]
                  }
                }
              }
            }
          },
          "true_next" : "tbl_int_source115",
          "false_next" : "node_27"
        },
        {
          "name" : "node_15",
          "id" : 5,
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_source.p4",
            "line" : 123,
            "column" : 12,
            "source_fragment" : "meta.int_metadata.source == 1 && hdr.ipv4.isValid()"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "and",
              "left" : {
                "type" : "expression",
                "value" : {
                  "op" : "==",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "userMetadata._int_metadata_source0"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0x01"
                  }
                }
              },
              "right" : {
                "type" : "expression",
                "value" : {
                  "op" : "d2b",
                  "left" : null,
                  "right" : {
                    "type" : "field",
                    "value" : ["ipv4", "$valid$"]
                  }
                }
              }
            }
          },
          "true_next" : "node_16",
          "false_next" : "node_20"
        },
        {
          "name" : "node_16",
          "id" : 6,
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_source.p4",
            "line" : 124,
            "column" : 15,
            "source_fragment" : "res != 1"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "!=",
              "left" : {
                "type" : "field",
                "value" : ["scalars", "Int_source_res"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x01"
              }
            }
          },
          "true_next" : "tbl_int_source125",
          "false_next" : "node_18"
        },
        {
          "name" : "node_18",
          "id" : 7,
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "not",
              "left" : null,
              "right" : {
                "type" : "expression",
                "value" : {
                  "op" : "d2b",
                  "left" : null,
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "Int_source_hasReturned"]
                  }
                }
              }
            }
          },
          "true_next" : "ingress.Int_source.tb_int_source",
          "false_next" : "node_20"
        },
        {
          "name" : "node_20",
          "id" : 8,
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "not",
              "left" : null,
              "right" : {
                "type" : "expression",
                "value" : {
                  "op" : "d2b",
                  "left" : null,
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "Int_source_hasReturned"]
                  }
                }
              }
            }
          },
          "true_next" : "node_21",
          "false_next" : "node_27"
        },
        {
          "name" : "node_21",
          "id" : 9,
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_source.p4",
            "line" : 132,
            "column" : 12,
            "source_fragment" : "meta.int_metadata.source == 1 && hdr.ipv6.isValid()"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "and",
              "left" : {
                "type" : "expression",
                "value" : {
                  "op" : "==",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "userMetadata._int_metadata_source0"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0x01"
                  }
                }
              },
              "right" : {
                "type" : "expression",
                "value" : {
                  "op" : "d2b",
                  "left" : null,
                  "right" : {
                    "type" : "field",
                    "value" : ["ipv6", "$valid$"]
                  }
                }
              }
            }
          },
          "true_next" : "tbl_int_source133",
          "false_next" : "node_27"
        },
        {
          "name" : "node_23",
          "id" : 10,
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_source.p4",
            "line" : 134,
            "column" : 15,
            "source_fragment" : "res != 1"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "!=",
              "left" : {
                "type" : "field",
                "value" : ["scalars", "Int_source_res"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x01"
              }
            }
          },
          "true_next" : "tbl_int_source135",
          "false_next" : "node_25"
        },
        {
          "name" : "node_25",
          "id" : 11,
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "not",
              "left" : null,
              "right" : {
                "type" : "expression",
                "value" : {
                  "op" : "d2b",
                  "left" : null,
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "Int_source_hasReturned"]
                  }
                }
              }
            }
          },
          "true_next" : "ingress.Int_source.tb_intv6_source",
          "false_next" : "node_27"
        },
        {
          "name" : "node_27",
          "id" : 12,
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/int.p4",
            "line" : 295,
            "column" : 16,
            "source_fragment" : "hdr.ipv6.isValid()"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "d2b",
              "left" : null,
              "right" : {
                "type" : "field",
                "value" : ["ipv6", "$valid$"]
              }
            }
          },
          "true_next" : "ingress.SRv6.srv6_my_sid",
          "false_next" : "ingress.l2_exact_table"
        },
        {
          "name" : "node_29",
          "id" : 13,
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/srv6.p4",
            "line" : 109,
            "column" : 16,
            "source_fragment" : "hdr.srv6h.isValid() && hdr.srv6h.segment_left == 0"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "and",
              "left" : {
                "type" : "expression",
                "value" : {
                  "op" : "d2b",
                  "left" : null,
                  "right" : {
                    "type" : "field",
                    "value" : ["srv6h", "$valid$"]
                  }
                }
              },
              "right" : {
                "type" : "expression",
                "value" : {
                  "op" : "==",
                  "left" : {
                    "type" : "field",
                    "value" : ["srv6h", "segment_left"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0x00"
                  }
                }
              }
            }
          },
          "true_next" : "tbl_SRv6_srv6_pop",
          "false_next" : "ingress.ipv6_lpm"
        },
        {
          "name" : "node_34",
          "id" : 14,
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/int.p4",
            "line" : 302,
            "column" : 19,
            "source_fragment" : "hdr.ipv6.hop_limit == 0"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "==",
              "left" : {
                "type" : "field",
                "value" : ["ipv6", "hop_limit"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x00"
              }
            }
          },
          "true_next" : "tbl_drop",
          "false_next" : "ingress.l2_exact_table"
        },
        {
          "name" : "node_38",
          "id" : 15,
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/int.p4",
            "line" : 310,
            "column" : 19,
            "source_fragment" : "meta.is_multicast && hdr.ipv6.hop_limit < 252"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "and",
              "left" : {
                "type" : "expression",
                "value" : {
                  "op" : "d2b",
                  "left" : null,
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "userMetadata._is_multicast21"]
                  }
                }
              },
              "right" : {
                "type" : "expression",
                "value" : {
                  "op" : "<",
                  "left" : {
                    "type" : "field",
                    "value" : ["ipv6", "hop_limit"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xfc"
                  }
                }
              }
            }
          },
          "true_next" : "tbl_int310",
          "false_next" : "node_40"
        },
        {
          "name" : "node_40",
          "id" : 16,
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/int.p4",
            "line" : 313,
            "column" : 16,
            "source_fragment" : "hdr.udp.isValid() || hdr.tcp.isValid()"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "or",
              "left" : {
                "type" : "expression",
                "value" : {
                  "op" : "d2b",
                  "left" : null,
                  "right" : {
                    "type" : "field",
                    "value" : ["udp", "$valid$"]
                  }
                }
              },
              "right" : {
                "type" : "expression",
                "value" : {
                  "op" : "d2b",
                  "left" : null,
                  "right" : {
                    "type" : "field",
                    "value" : ["tcp", "$valid$"]
                  }
                }
              }
            }
          },
          "true_next" : "node_41",
          "false_next" : "tbl_act"
        },
        {
          "name" : "node_41",
          "id" : 17,
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_sink.p4",
            "line" : 46,
            "column" : 12,
            "source_fragment" : "hdr.int_header.isValid()"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "d2b",
              "left" : null,
              "right" : {
                "type" : "field",
                "value" : ["int_header", "$valid$"]
              }
            }
          },
          "true_next" : "ingress.Int_sink_config.tb_int_sink",
          "false_next" : "tbl_act"
        },
        {
          "name" : "node_46",
          "id" : 18,
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "not",
              "left" : null,
              "right" : {
                "type" : "expression",
                "value" : {
                  "op" : "d2b",
                  "left" : null,
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "Flowlet_hasReturned"]
                  }
                }
              }
            }
          },
          "true_next" : "tbl_flowlet62",
          "false_next" : "ingress.acl_table"
        },
        {
          "name" : "node_50",
          "id" : 19,
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/flowlet.p4",
            "line" : 71,
            "column" : 16,
            "source_fragment" : "meta.flowlet_time_diff > 48w200000"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : ">",
              "left" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "-",
                      "left" : {
                        "type" : "field",
                        "value" : ["standard_metadata", "ingress_global_timestamp"]
                      },
                      "right" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata._flowlet_last_stamp25"]
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffffffff"
                  }
                }
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x000000030d40"
              }
            }
          },
          "true_next" : "tbl_Flowlet_update_path",
          "false_next" : "ingress.acl_table"
        }
      ]
    },
    {
      "name" : "egress",
      "id" : 1,
      "source_info" : {
        "filename" : "/home/lchampagne/Documents/Test/int_v1.0/int.p4",
        "line" : 327,
        "column" : 8,
        "source_fragment" : "egress"
      },
      "init_table" : "tbl_int330",
      "tables" : [
        {
          "name" : "tbl_int330",
          "id" : 31,
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/int.p4",
            "line" : 330,
            "column" : 8,
            "source_fragment" : "        log_msg(\\\"Q depth: {}\\\", {eg_intr_md.enq_qdepth});"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [95],
          "actions" : ["int330"],
          "base_default_next" : "node_56",
          "next_tables" : {
            "int330" : "node_56"
          },
          "default_entry" : {
            "action_id" : 95,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_int334",
          "id" : 32,
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/int.p4",
            "line" : 334,
            "column" : 12,
            "source_fragment" : "hdr.cpu_in.setValid(); ..."
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [94],
          "actions" : ["int334"],
          "base_default_next" : "node_58",
          "next_tables" : {
            "int334" : "node_58"
          },
          "default_entry" : {
            "action_id" : 94,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_int347",
          "id" : 33,
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/int.p4",
            "line" : 347,
            "column" : 12,
            "source_fragment" : "mark_to_drop(eg_intr_md)"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [96],
          "actions" : ["int347"],
          "base_default_next" : "tbl_act_0",
          "next_tables" : {
            "int347" : "tbl_act_0"
          },
          "default_entry" : {
            "action_id" : 96,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_act_0",
          "id" : 34,
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [98],
          "actions" : ["act_0"],
          "base_default_next" : "node_61",
          "next_tables" : {
            "act_0" : "node_61"
          },
          "default_entry" : {
            "action_id" : 98,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_int_transit401",
          "id" : 35,
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 401,
            "column" : 16,
            "source_fragment" : "return"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [97],
          "actions" : ["int_transit401"],
          "base_default_next" : "node_63",
          "next_tables" : {
            "int_transit401" : "node_63"
          },
          "default_entry" : {
            "action_id" : 97,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_Int_transit_int_hop_exceeded",
          "id" : 36,
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 407,
            "column" : 16,
            "source_fragment" : "int_hop_exceeded()"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [88],
          "actions" : ["egress.Int_transit.int_hop_exceeded"],
          "base_default_next" : "tbl_int_transit408",
          "next_tables" : {
            "egress.Int_transit.int_hop_exceeded" : "tbl_int_transit408"
          },
          "default_entry" : {
            "action_id" : 88,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_int_transit408",
          "id" : 37,
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 408,
            "column" : 16,
            "source_fragment" : "return"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [99],
          "actions" : ["int_transit408"],
          "base_default_next" : "node_67",
          "next_tables" : {
            "int_transit408" : "node_67"
          },
          "default_entry" : {
            "action_id" : 99,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_Int_transit_int_hop_cnt_increment",
          "id" : 38,
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 411,
            "column" : 12,
            "source_fragment" : "int_hop_cnt_increment()"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [87],
          "actions" : ["egress.Int_transit.int_hop_cnt_increment"],
          "base_default_next" : "egress.Int_transit.tb_int_transit",
          "next_tables" : {
            "egress.Int_transit.int_hop_cnt_increment" : "egress.Int_transit.tb_int_transit"
          },
          "default_entry" : {
            "action_id" : 87,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "egress.Int_transit.tb_int_transit",
          "id" : 39,
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 37,
            "column" : 14,
            "source_fragment" : "tb_int_transit"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [54, 50],
          "actions" : ["egress.Int_transit.configure_transit", "NoAction"],
          "base_default_next" : "egress.Int_transit.tb_int_inst_0003",
          "next_tables" : {
            "egress.Int_transit.configure_transit" : "egress.Int_transit.tb_int_inst_0003",
            "NoAction" : "egress.Int_transit.tb_int_inst_0003"
          },
          "default_entry" : {
            "action_id" : 50,
            "action_const" : false,
            "action_data" : [],
            "action_entry_const" : false
          }
        },
        {
          "name" : "egress.Int_transit.tb_int_inst_0003",
          "id" : 40,
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 292,
            "column" : 14,
            "source_fragment" : "tb_int_inst_0003"
          },
          "key" : [
            {
              "match_type" : "ternary",
              "name" : "hdr.int_header.instruction_mask",
              "target" : ["int_header", "instruction_mask"],
              "mask" : null
            }
          ],
          "match_type" : "ternary",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 51],
          "actions" : ["egress.Int_transit.int_set_header_0003_i0", "egress.Int_transit.int_set_header_0003_i1", "egress.Int_transit.int_set_header_0003_i2", "egress.Int_transit.int_set_header_0003_i3", "egress.Int_transit.int_set_header_0003_i4", "egress.Int_transit.int_set_header_0003_i5", "egress.Int_transit.int_set_header_0003_i6", "egress.Int_transit.int_set_header_0003_i7", "egress.Int_transit.int_set_header_0003_i8", "egress.Int_transit.int_set_header_0003_i9", "egress.Int_transit.int_set_header_0003_i10", "egress.Int_transit.int_set_header_0003_i11", "egress.Int_transit.int_set_header_0003_i12", "egress.Int_transit.int_set_header_0003_i13", "egress.Int_transit.int_set_header_0003_i14", "egress.Int_transit.int_set_header_0003_i15", "NoAction"],
          "base_default_next" : "egress.Int_transit.tb_int_inst_0407",
          "next_tables" : {
            "egress.Int_transit.int_set_header_0003_i0" : "egress.Int_transit.tb_int_inst_0407",
            "egress.Int_transit.int_set_header_0003_i1" : "egress.Int_transit.tb_int_inst_0407",
            "egress.Int_transit.int_set_header_0003_i2" : "egress.Int_transit.tb_int_inst_0407",
            "egress.Int_transit.int_set_header_0003_i3" : "egress.Int_transit.tb_int_inst_0407",
            "egress.Int_transit.int_set_header_0003_i4" : "egress.Int_transit.tb_int_inst_0407",
            "egress.Int_transit.int_set_header_0003_i5" : "egress.Int_transit.tb_int_inst_0407",
            "egress.Int_transit.int_set_header_0003_i6" : "egress.Int_transit.tb_int_inst_0407",
            "egress.Int_transit.int_set_header_0003_i7" : "egress.Int_transit.tb_int_inst_0407",
            "egress.Int_transit.int_set_header_0003_i8" : "egress.Int_transit.tb_int_inst_0407",
            "egress.Int_transit.int_set_header_0003_i9" : "egress.Int_transit.tb_int_inst_0407",
            "egress.Int_transit.int_set_header_0003_i10" : "egress.Int_transit.tb_int_inst_0407",
            "egress.Int_transit.int_set_header_0003_i11" : "egress.Int_transit.tb_int_inst_0407",
            "egress.Int_transit.int_set_header_0003_i12" : "egress.Int_transit.tb_int_inst_0407",
            "egress.Int_transit.int_set_header_0003_i13" : "egress.Int_transit.tb_int_inst_0407",
            "egress.Int_transit.int_set_header_0003_i14" : "egress.Int_transit.tb_int_inst_0407",
            "egress.Int_transit.int_set_header_0003_i15" : "egress.Int_transit.tb_int_inst_0407",
            "NoAction" : "egress.Int_transit.tb_int_inst_0407"
          },
          "default_entry" : {
            "action_id" : 51,
            "action_const" : false,
            "action_data" : [],
            "action_entry_const" : false
          },
          "entries" : [
            {
              "source_info" : {
                "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
                "line" : 315,
                "column" : 16,
                "source_fragment" : "0x0000 &&& 0xF000 : int_set_header_0003_i0()"
              },
              "match_key" : [
                {
                  "match_type" : "ternary",
                  "key" : "0x0000",
                  "mask" : "0xf000"
                }
              ],
              "action_entry" : {
                "action_id" : 55,
                "action_data" : []
              },
              "priority" : 1
            },
            {
              "source_info" : {
                "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
                "line" : 316,
                "column" : 16,
                "source_fragment" : "0x1000 &&& 0xF000 : int_set_header_0003_i1()"
              },
              "match_key" : [
                {
                  "match_type" : "ternary",
                  "key" : "0x1000",
                  "mask" : "0xf000"
                }
              ],
              "action_entry" : {
                "action_id" : 56,
                "action_data" : []
              },
              "priority" : 2
            },
            {
              "source_info" : {
                "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
                "line" : 317,
                "column" : 16,
                "source_fragment" : "0x2000 &&& 0xF000 : int_set_header_0003_i2()"
              },
              "match_key" : [
                {
                  "match_type" : "ternary",
                  "key" : "0x2000",
                  "mask" : "0xf000"
                }
              ],
              "action_entry" : {
                "action_id" : 57,
                "action_data" : []
              },
              "priority" : 3
            },
            {
              "source_info" : {
                "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
                "line" : 318,
                "column" : 16,
                "source_fragment" : "0x3000 &&& 0xF000 : int_set_header_0003_i3()"
              },
              "match_key" : [
                {
                  "match_type" : "ternary",
                  "key" : "0x3000",
                  "mask" : "0xf000"
                }
              ],
              "action_entry" : {
                "action_id" : 58,
                "action_data" : []
              },
              "priority" : 4
            },
            {
              "source_info" : {
                "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
                "line" : 319,
                "column" : 16,
                "source_fragment" : "0x4000 &&& 0xF000 : int_set_header_0003_i4()"
              },
              "match_key" : [
                {
                  "match_type" : "ternary",
                  "key" : "0x4000",
                  "mask" : "0xf000"
                }
              ],
              "action_entry" : {
                "action_id" : 59,
                "action_data" : []
              },
              "priority" : 5
            },
            {
              "source_info" : {
                "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
                "line" : 320,
                "column" : 16,
                "source_fragment" : "0x5000 &&& 0xF000 : int_set_header_0003_i5()"
              },
              "match_key" : [
                {
                  "match_type" : "ternary",
                  "key" : "0x5000",
                  "mask" : "0xf000"
                }
              ],
              "action_entry" : {
                "action_id" : 60,
                "action_data" : []
              },
              "priority" : 6
            },
            {
              "source_info" : {
                "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
                "line" : 321,
                "column" : 16,
                "source_fragment" : "0x6000 &&& 0xF000 : int_set_header_0003_i6()"
              },
              "match_key" : [
                {
                  "match_type" : "ternary",
                  "key" : "0x6000",
                  "mask" : "0xf000"
                }
              ],
              "action_entry" : {
                "action_id" : 61,
                "action_data" : []
              },
              "priority" : 7
            },
            {
              "source_info" : {
                "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
                "line" : 322,
                "column" : 16,
                "source_fragment" : "0x7000 &&& 0xF000 : int_set_header_0003_i7()"
              },
              "match_key" : [
                {
                  "match_type" : "ternary",
                  "key" : "0x7000",
                  "mask" : "0xf000"
                }
              ],
              "action_entry" : {
                "action_id" : 62,
                "action_data" : []
              },
              "priority" : 8
            },
            {
              "source_info" : {
                "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
                "line" : 323,
                "column" : 16,
                "source_fragment" : "0x8000 &&& 0xF000 : int_set_header_0003_i8()"
              },
              "match_key" : [
                {
                  "match_type" : "ternary",
                  "key" : "0x8000",
                  "mask" : "0xf000"
                }
              ],
              "action_entry" : {
                "action_id" : 63,
                "action_data" : []
              },
              "priority" : 9
            },
            {
              "source_info" : {
                "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
                "line" : 324,
                "column" : 16,
                "source_fragment" : "0x9000 &&& 0xF000 : int_set_header_0003_i9()"
              },
              "match_key" : [
                {
                  "match_type" : "ternary",
                  "key" : "0x9000",
                  "mask" : "0xf000"
                }
              ],
              "action_entry" : {
                "action_id" : 64,
                "action_data" : []
              },
              "priority" : 10
            },
            {
              "source_info" : {
                "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
                "line" : 325,
                "column" : 16,
                "source_fragment" : "0xA000 &&& 0xF000 : int_set_header_0003_i10()"
              },
              "match_key" : [
                {
                  "match_type" : "ternary",
                  "key" : "0xa000",
                  "mask" : "0xf000"
                }
              ],
              "action_entry" : {
                "action_id" : 65,
                "action_data" : []
              },
              "priority" : 11
            },
            {
              "source_info" : {
                "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
                "line" : 326,
                "column" : 16,
                "source_fragment" : "0xB000 &&& 0xF000 : int_set_header_0003_i11()"
              },
              "match_key" : [
                {
                  "match_type" : "ternary",
                  "key" : "0xb000",
                  "mask" : "0xf000"
                }
              ],
              "action_entry" : {
                "action_id" : 66,
                "action_data" : []
              },
              "priority" : 12
            },
            {
              "source_info" : {
                "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
                "line" : 327,
                "column" : 16,
                "source_fragment" : "0xC000 &&& 0xF000 : int_set_header_0003_i12()"
              },
              "match_key" : [
                {
                  "match_type" : "ternary",
                  "key" : "0xc000",
                  "mask" : "0xf000"
                }
              ],
              "action_entry" : {
                "action_id" : 67,
                "action_data" : []
              },
              "priority" : 13
            },
            {
              "source_info" : {
                "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
                "line" : 328,
                "column" : 16,
                "source_fragment" : "0xD000 &&& 0xF000 : int_set_header_0003_i13()"
              },
              "match_key" : [
                {
                  "match_type" : "ternary",
                  "key" : "0xd000",
                  "mask" : "0xf000"
                }
              ],
              "action_entry" : {
                "action_id" : 68,
                "action_data" : []
              },
              "priority" : 14
            },
            {
              "source_info" : {
                "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
                "line" : 329,
                "column" : 16,
                "source_fragment" : "0xE000 &&& 0xF000 : int_set_header_0003_i14()"
              },
              "match_key" : [
                {
                  "match_type" : "ternary",
                  "key" : "0xe000",
                  "mask" : "0xf000"
                }
              ],
              "action_entry" : {
                "action_id" : 69,
                "action_data" : []
              },
              "priority" : 15
            },
            {
              "source_info" : {
                "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
                "line" : 330,
                "column" : 16,
                "source_fragment" : "0xF000 &&& 0xF000 : int_set_header_0003_i15()"
              },
              "match_key" : [
                {
                  "match_type" : "ternary",
                  "key" : "0xf000",
                  "mask" : "0xf000"
                }
              ],
              "action_entry" : {
                "action_id" : 70,
                "action_data" : []
              },
              "priority" : 16
            }
          ]
        },
        {
          "name" : "egress.Int_transit.tb_int_inst_0407",
          "id" : 41,
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 334,
            "column" : 14,
            "source_fragment" : "tb_int_inst_0407"
          },
          "key" : [
            {
              "match_type" : "ternary",
              "name" : "hdr.int_header.instruction_mask",
              "target" : ["int_header", "instruction_mask"],
              "mask" : null
            }
          ],
          "match_type" : "ternary",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 52],
          "actions" : ["egress.Int_transit.int_set_header_0407_i0", "egress.Int_transit.int_set_header_0407_i1", "egress.Int_transit.int_set_header_0407_i2", "egress.Int_transit.int_set_header_0407_i3", "egress.Int_transit.int_set_header_0407_i4", "egress.Int_transit.int_set_header_0407_i5", "egress.Int_transit.int_set_header_0407_i6", "egress.Int_transit.int_set_header_0407_i7", "egress.Int_transit.int_set_header_0407_i8", "egress.Int_transit.int_set_header_0407_i9", "egress.Int_transit.int_set_header_0407_i10", "egress.Int_transit.int_set_header_0407_i11", "egress.Int_transit.int_set_header_0407_i12", "egress.Int_transit.int_set_header_0407_i13", "egress.Int_transit.int_set_header_0407_i14", "egress.Int_transit.int_set_header_0407_i15", "NoAction"],
          "base_default_next" : "tbl_int_transit418",
          "next_tables" : {
            "egress.Int_transit.int_set_header_0407_i0" : "tbl_int_transit418",
            "egress.Int_transit.int_set_header_0407_i1" : "tbl_int_transit418",
            "egress.Int_transit.int_set_header_0407_i2" : "tbl_int_transit418",
            "egress.Int_transit.int_set_header_0407_i3" : "tbl_int_transit418",
            "egress.Int_transit.int_set_header_0407_i4" : "tbl_int_transit418",
            "egress.Int_transit.int_set_header_0407_i5" : "tbl_int_transit418",
            "egress.Int_transit.int_set_header_0407_i6" : "tbl_int_transit418",
            "egress.Int_transit.int_set_header_0407_i7" : "tbl_int_transit418",
            "egress.Int_transit.int_set_header_0407_i8" : "tbl_int_transit418",
            "egress.Int_transit.int_set_header_0407_i9" : "tbl_int_transit418",
            "egress.Int_transit.int_set_header_0407_i10" : "tbl_int_transit418",
            "egress.Int_transit.int_set_header_0407_i11" : "tbl_int_transit418",
            "egress.Int_transit.int_set_header_0407_i12" : "tbl_int_transit418",
            "egress.Int_transit.int_set_header_0407_i13" : "tbl_int_transit418",
            "egress.Int_transit.int_set_header_0407_i14" : "tbl_int_transit418",
            "egress.Int_transit.int_set_header_0407_i15" : "tbl_int_transit418",
            "NoAction" : "tbl_int_transit418"
          },
          "default_entry" : {
            "action_id" : 52,
            "action_const" : false,
            "action_data" : [],
            "action_entry_const" : false
          },
          "entries" : [
            {
              "source_info" : {
                "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
                "line" : 357,
                "column" : 16,
                "source_fragment" : "0x0000 &&& 0x0F00 : int_set_header_0407_i0()"
              },
              "match_key" : [
                {
                  "match_type" : "ternary",
                  "key" : "0x0000",
                  "mask" : "0x0f00"
                }
              ],
              "action_entry" : {
                "action_id" : 71,
                "action_data" : []
              },
              "priority" : 1
            },
            {
              "source_info" : {
                "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
                "line" : 358,
                "column" : 16,
                "source_fragment" : "0x0100 &&& 0x0F00 : int_set_header_0407_i1()"
              },
              "match_key" : [
                {
                  "match_type" : "ternary",
                  "key" : "0x0100",
                  "mask" : "0x0f00"
                }
              ],
              "action_entry" : {
                "action_id" : 72,
                "action_data" : []
              },
              "priority" : 2
            },
            {
              "source_info" : {
                "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
                "line" : 359,
                "column" : 16,
                "source_fragment" : "0x0200 &&& 0x0F00 : int_set_header_0407_i2()"
              },
              "match_key" : [
                {
                  "match_type" : "ternary",
                  "key" : "0x0200",
                  "mask" : "0x0f00"
                }
              ],
              "action_entry" : {
                "action_id" : 73,
                "action_data" : []
              },
              "priority" : 3
            },
            {
              "source_info" : {
                "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
                "line" : 360,
                "column" : 16,
                "source_fragment" : "0x0300 &&& 0x0F00 : int_set_header_0407_i3()"
              },
              "match_key" : [
                {
                  "match_type" : "ternary",
                  "key" : "0x0300",
                  "mask" : "0x0f00"
                }
              ],
              "action_entry" : {
                "action_id" : 74,
                "action_data" : []
              },
              "priority" : 4
            },
            {
              "source_info" : {
                "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
                "line" : 361,
                "column" : 16,
                "source_fragment" : "0x0400 &&& 0x0F00 : int_set_header_0407_i4()"
              },
              "match_key" : [
                {
                  "match_type" : "ternary",
                  "key" : "0x0400",
                  "mask" : "0x0f00"
                }
              ],
              "action_entry" : {
                "action_id" : 75,
                "action_data" : []
              },
              "priority" : 5
            },
            {
              "source_info" : {
                "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
                "line" : 362,
                "column" : 16,
                "source_fragment" : "0x0500 &&& 0x0F00 : int_set_header_0407_i5()"
              },
              "match_key" : [
                {
                  "match_type" : "ternary",
                  "key" : "0x0500",
                  "mask" : "0x0f00"
                }
              ],
              "action_entry" : {
                "action_id" : 76,
                "action_data" : []
              },
              "priority" : 6
            },
            {
              "source_info" : {
                "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
                "line" : 363,
                "column" : 16,
                "source_fragment" : "0x0600 &&& 0x0F00 : int_set_header_0407_i6()"
              },
              "match_key" : [
                {
                  "match_type" : "ternary",
                  "key" : "0x0600",
                  "mask" : "0x0f00"
                }
              ],
              "action_entry" : {
                "action_id" : 77,
                "action_data" : []
              },
              "priority" : 7
            },
            {
              "source_info" : {
                "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
                "line" : 364,
                "column" : 16,
                "source_fragment" : "0x0700 &&& 0x0F00 : int_set_header_0407_i7()"
              },
              "match_key" : [
                {
                  "match_type" : "ternary",
                  "key" : "0x0700",
                  "mask" : "0x0f00"
                }
              ],
              "action_entry" : {
                "action_id" : 78,
                "action_data" : []
              },
              "priority" : 8
            },
            {
              "source_info" : {
                "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
                "line" : 365,
                "column" : 16,
                "source_fragment" : "0x0800 &&& 0x0F00 : int_set_header_0407_i8()"
              },
              "match_key" : [
                {
                  "match_type" : "ternary",
                  "key" : "0x0800",
                  "mask" : "0x0f00"
                }
              ],
              "action_entry" : {
                "action_id" : 79,
                "action_data" : []
              },
              "priority" : 9
            },
            {
              "source_info" : {
                "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
                "line" : 366,
                "column" : 16,
                "source_fragment" : "0x0900 &&& 0x0F00 : int_set_header_0407_i9()"
              },
              "match_key" : [
                {
                  "match_type" : "ternary",
                  "key" : "0x0900",
                  "mask" : "0x0f00"
                }
              ],
              "action_entry" : {
                "action_id" : 80,
                "action_data" : []
              },
              "priority" : 10
            },
            {
              "source_info" : {
                "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
                "line" : 367,
                "column" : 16,
                "source_fragment" : "0x0A00 &&& 0x0F00 : int_set_header_0407_i10()"
              },
              "match_key" : [
                {
                  "match_type" : "ternary",
                  "key" : "0x0a00",
                  "mask" : "0x0f00"
                }
              ],
              "action_entry" : {
                "action_id" : 81,
                "action_data" : []
              },
              "priority" : 11
            },
            {
              "source_info" : {
                "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
                "line" : 368,
                "column" : 16,
                "source_fragment" : "0x0B00 &&& 0x0F00 : int_set_header_0407_i11()"
              },
              "match_key" : [
                {
                  "match_type" : "ternary",
                  "key" : "0x0b00",
                  "mask" : "0x0f00"
                }
              ],
              "action_entry" : {
                "action_id" : 82,
                "action_data" : []
              },
              "priority" : 12
            },
            {
              "source_info" : {
                "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
                "line" : 369,
                "column" : 16,
                "source_fragment" : "0x0C00 &&& 0x0F00 : int_set_header_0407_i12()"
              },
              "match_key" : [
                {
                  "match_type" : "ternary",
                  "key" : "0x0c00",
                  "mask" : "0x0f00"
                }
              ],
              "action_entry" : {
                "action_id" : 83,
                "action_data" : []
              },
              "priority" : 13
            },
            {
              "source_info" : {
                "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
                "line" : 370,
                "column" : 16,
                "source_fragment" : "0x0D00 &&& 0x0F00 : int_set_header_0407_i13()"
              },
              "match_key" : [
                {
                  "match_type" : "ternary",
                  "key" : "0x0d00",
                  "mask" : "0x0f00"
                }
              ],
              "action_entry" : {
                "action_id" : 84,
                "action_data" : []
              },
              "priority" : 14
            },
            {
              "source_info" : {
                "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
                "line" : 371,
                "column" : 16,
                "source_fragment" : "0x0E00 &&& 0x0F00 : int_set_header_0407_i14()"
              },
              "match_key" : [
                {
                  "match_type" : "ternary",
                  "key" : "0x0e00",
                  "mask" : "0x0f00"
                }
              ],
              "action_entry" : {
                "action_id" : 85,
                "action_data" : []
              },
              "priority" : 15
            },
            {
              "source_info" : {
                "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
                "line" : 372,
                "column" : 16,
                "source_fragment" : "0x0F00 &&& 0x0F00 : int_set_header_0407_i15()"
              },
              "match_key" : [
                {
                  "match_type" : "ternary",
                  "key" : "0x0f00",
                  "mask" : "0x0f00"
                }
              ],
              "action_entry" : {
                "action_id" : 86,
                "action_data" : []
              },
              "priority" : 16
            }
          ]
        },
        {
          "name" : "tbl_int_transit418",
          "id" : 42,
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 418,
            "column" : 12,
            "source_fragment" : "            log_msg(\\\"Q depth transit: {}\\\", {standard_metadata.enq_qdepth});"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [100],
          "actions" : ["int_transit418"],
          "base_default_next" : "tbl_Int_transit_int_update_ip_ac",
          "next_tables" : {
            "int_transit418" : "tbl_Int_transit_int_update_ip_ac"
          },
          "default_entry" : {
            "action_id" : 100,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_Int_transit_int_update_ip_ac",
          "id" : 43,
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 421,
            "column" : 12,
            "source_fragment" : "int_update_ip_ac()"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [89],
          "actions" : ["egress.Int_transit.int_update_ip_ac"],
          "base_default_next" : "node_74",
          "next_tables" : {
            "egress.Int_transit.int_update_ip_ac" : "node_74"
          },
          "default_entry" : {
            "action_id" : 89,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_Int_transit_int_update_udp_ac",
          "id" : 44,
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 424,
            "column" : 16,
            "source_fragment" : "int_update_udp_ac()"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [91],
          "actions" : ["egress.Int_transit.int_update_udp_ac"],
          "base_default_next" : "node_76",
          "next_tables" : {
            "egress.Int_transit.int_update_udp_ac" : "node_76"
          },
          "default_entry" : {
            "action_id" : 91,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_Int_transit_int_update_shim_ac",
          "id" : 45,
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 427,
            "column" : 16,
            "source_fragment" : "int_update_shim_ac()"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [90],
          "actions" : ["egress.Int_transit.int_update_shim_ac"],
          "base_default_next" : "tbl_act_1",
          "next_tables" : {
            "egress.Int_transit.int_update_shim_ac" : "tbl_act_1"
          },
          "default_entry" : {
            "action_id" : 90,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_act_1",
          "id" : 46,
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [102],
          "actions" : ["act_1"],
          "base_default_next" : "node_79",
          "next_tables" : {
            "act_1" : "node_79"
          },
          "default_entry" : {
            "action_id" : 102,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_int_sink91",
          "id" : 47,
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_sink.p4",
            "line" : 91,
            "column" : 12,
            "source_fragment" : "return"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [101],
          "actions" : ["int_sink91"],
          "base_default_next" : "node_81",
          "next_tables" : {
            "int_sink91" : "node_81"
          },
          "default_entry" : {
            "action_id" : 101,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_Int_sink_remove_sink_header",
          "id" : 48,
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_sink.p4",
            "line" : 95,
            "column" : 12,
            "source_fragment" : "remove_sink_header()"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [93],
          "actions" : ["egress.Int_sink.remove_sink_header"],
          "base_default_next" : "node_84",
          "next_tables" : {
            "egress.Int_sink.remove_sink_header" : "node_84"
          },
          "default_entry" : {
            "action_id" : 93,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "egress.Int_sink.Int_report.tb_int_reporting",
          "id" : 49,
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_report.p4",
            "line" : 119,
            "column" : 14,
            "source_fragment" : "tb_int_reporting"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [92, 53],
          "actions" : ["egress.Int_sink.Int_report.send_report", "NoAction"],
          "base_default_next" : "node_86",
          "next_tables" : {
            "egress.Int_sink.Int_report.send_report" : "node_86",
            "NoAction" : "node_86"
          },
          "default_entry" : {
            "action_id" : 53,
            "action_const" : false,
            "action_data" : [],
            "action_entry_const" : false
          }
        },
        {
          "name" : "tbl_int355",
          "id" : 50,
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/int.p4",
            "line" : 355,
            "column" : 42,
            "source_fragment" : "="
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [103],
          "actions" : ["int355"],
          "base_default_next" : null,
          "next_tables" : {
            "int355" : null
          },
          "default_entry" : {
            "action_id" : 103,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        }
      ],
      "action_profiles" : [],
      "conditionals" : [
        {
          "name" : "node_56",
          "id" : 20,
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/int.p4",
            "line" : 333,
            "column" : 12,
            "source_fragment" : "eg_intr_md.egress_port == 0"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "==",
              "left" : {
                "type" : "field",
                "value" : ["standard_metadata", "egress_port"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x0000"
              }
            }
          },
          "true_next" : "tbl_int334",
          "false_next" : "node_58"
        },
        {
          "name" : "node_58",
          "id" : 21,
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/int.p4",
            "line" : 345,
            "column" : 12,
            "source_fragment" : "meta.is_multicast == true && ..."
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "and",
              "left" : {
                "type" : "expression",
                "value" : {
                  "op" : "d2b",
                  "left" : null,
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "userMetadata._is_multicast21"]
                  }
                }
              },
              "right" : {
                "type" : "expression",
                "value" : {
                  "op" : "==",
                  "left" : {
                    "type" : "field",
                    "value" : ["standard_metadata", "ingress_port"]
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["standard_metadata", "egress_port"]
                  }
                }
              }
            }
          },
          "true_next" : "tbl_int347",
          "false_next" : "tbl_act_0"
        },
        {
          "name" : "node_61",
          "id" : 22,
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 400,
            "column" : 16,
            "source_fragment" : "!hdr.int_header.isValid()"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "not",
              "left" : null,
              "right" : {
                "type" : "expression",
                "value" : {
                  "op" : "d2b",
                  "left" : null,
                  "right" : {
                    "type" : "field",
                    "value" : ["int_header", "$valid$"]
                  }
                }
              }
            }
          },
          "true_next" : "tbl_int_transit401",
          "false_next" : "node_63"
        },
        {
          "name" : "node_63",
          "id" : 23,
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "not",
              "left" : null,
              "right" : {
                "type" : "expression",
                "value" : {
                  "op" : "d2b",
                  "left" : null,
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "Int_transit_hasReturned"]
                  }
                }
              }
            }
          },
          "true_next" : "node_64",
          "false_next" : "node_67"
        },
        {
          "name" : "node_64",
          "id" : 24,
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 406,
            "column" : 16,
            "source_fragment" : "hdr.int_header.remaining_hop_cnt == 0 || hdr.int_header.e == 1"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "or",
              "left" : {
                "type" : "expression",
                "value" : {
                  "op" : "==",
                  "left" : {
                    "type" : "field",
                    "value" : ["int_header", "remaining_hop_cnt"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0x00"
                  }
                }
              },
              "right" : {
                "type" : "expression",
                "value" : {
                  "op" : "==",
                  "left" : {
                    "type" : "field",
                    "value" : ["int_header", "e"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0x01"
                  }
                }
              }
            }
          },
          "true_next" : "tbl_Int_transit_int_hop_exceeded",
          "false_next" : "node_67"
        },
        {
          "name" : "node_67",
          "id" : 25,
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "not",
              "left" : null,
              "right" : {
                "type" : "expression",
                "value" : {
                  "op" : "d2b",
                  "left" : null,
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "Int_transit_hasReturned"]
                  }
                }
              }
            }
          },
          "true_next" : "tbl_Int_transit_int_hop_cnt_increment",
          "false_next" : "tbl_act_1"
        },
        {
          "name" : "node_74",
          "id" : 26,
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 423,
            "column" : 16,
            "source_fragment" : "hdr.udp.isValid()"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "d2b",
              "left" : null,
              "right" : {
                "type" : "field",
                "value" : ["udp", "$valid$"]
              }
            }
          },
          "true_next" : "tbl_Int_transit_int_update_udp_ac",
          "false_next" : "node_76"
        },
        {
          "name" : "node_76",
          "id" : 27,
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_transit.p4",
            "line" : 426,
            "column" : 16,
            "source_fragment" : "hdr.int_shim.isValid()"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "d2b",
              "left" : null,
              "right" : {
                "type" : "field",
                "value" : ["int_shim", "$valid$"]
              }
            }
          },
          "true_next" : "tbl_Int_transit_int_update_shim_ac",
          "false_next" : "tbl_act_1"
        },
        {
          "name" : "node_79",
          "id" : 28,
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_sink.p4",
            "line" : 90,
            "column" : 12,
            "source_fragment" : "!hdr.int_header.isValid()"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "not",
              "left" : null,
              "right" : {
                "type" : "expression",
                "value" : {
                  "op" : "d2b",
                  "left" : null,
                  "right" : {
                    "type" : "field",
                    "value" : ["int_header", "$valid$"]
                  }
                }
              }
            }
          },
          "true_next" : "tbl_int_sink91",
          "false_next" : "node_81"
        },
        {
          "name" : "node_81",
          "id" : 29,
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "not",
              "left" : null,
              "right" : {
                "type" : "expression",
                "value" : {
                  "op" : "d2b",
                  "left" : null,
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "Int_sink_hasReturned"]
                  }
                }
              }
            }
          },
          "true_next" : "node_82",
          "false_next" : "node_86"
        },
        {
          "name" : "node_82",
          "id" : 30,
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_sink.p4",
            "line" : 93,
            "column" : 12,
            "source_fragment" : "standard_metadata.instance_type == 0 && meta.int_metadata.remove_int == 1"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "and",
              "left" : {
                "type" : "expression",
                "value" : {
                  "op" : "==",
                  "left" : {
                    "type" : "field",
                    "value" : ["standard_metadata", "instance_type"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0x00000000"
                  }
                }
              },
              "right" : {
                "type" : "expression",
                "value" : {
                  "op" : "==",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "userMetadata._int_metadata_remove_int5"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0x01"
                  }
                }
              }
            }
          },
          "true_next" : "tbl_Int_sink_remove_sink_header",
          "false_next" : "node_84"
        },
        {
          "name" : "node_84",
          "id" : 31,
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/int_sink.p4",
            "line" : 97,
            "column" : 12,
            "source_fragment" : "standard_metadata.instance_type == 1"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "==",
              "left" : {
                "type" : "field",
                "value" : ["standard_metadata", "instance_type"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x00000001"
              }
            }
          },
          "true_next" : "egress.Int_sink.Int_report.tb_int_reporting",
          "false_next" : "node_86"
        },
        {
          "name" : "node_86",
          "id" : 32,
          "source_info" : {
            "filename" : "/home/lchampagne/Documents/Test/int_v1.0/int.p4",
            "line" : 355,
            "column" : 11,
            "source_fragment" : "hdr.tcp.isValid()"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "d2b",
              "left" : null,
              "right" : {
                "type" : "field",
                "value" : ["tcp", "$valid$"]
              }
            }
          },
          "false_next" : null,
          "true_next" : "tbl_int355"
        }
      ]
    }
  ],
  "checksums" : [
    {
      "name" : "cksum",
      "id" : 0,
      "source_info" : {
        "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/parser.p4",
        "line" : 221,
        "column" : 8,
        "source_fragment" : "update_checksum( ..."
      },
      "target" : ["ipv4", "hdrChecksum"],
      "type" : "generic",
      "calculation" : "calc_1",
      "verify" : false,
      "update" : true,
      "if_cond" : {
        "type" : "expression",
        "value" : {
          "op" : "d2b",
          "left" : null,
          "right" : {
            "type" : "field",
            "value" : ["ipv4", "$valid$"]
          }
        }
      }
    },
    {
      "name" : "cksum_0",
      "id" : 1,
      "source_info" : {
        "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/parser.p4",
        "line" : 241,
        "column" : 8,
        "source_fragment" : "update_checksum( ..."
      },
      "target" : ["report_ipv4", "hdrChecksum"],
      "type" : "generic",
      "calculation" : "calc_2",
      "verify" : false,
      "update" : true,
      "if_cond" : {
        "type" : "expression",
        "value" : {
          "op" : "d2b",
          "left" : null,
          "right" : {
            "type" : "field",
            "value" : ["report_ipv4", "$valid$"]
          }
        }
      }
    },
    {
      "name" : "cksum_1",
      "id" : 2,
      "source_info" : {
        "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/parser.p4",
        "line" : 261,
        "column" : 8,
        "source_fragment" : "update_checksum(hdr.ndp.isValid(), ..."
      },
      "target" : ["icmpv6", "checksum"],
      "type" : "generic",
      "calculation" : "calc_3",
      "verify" : false,
      "update" : true,
      "if_cond" : {
        "type" : "expression",
        "value" : {
          "op" : "d2b",
          "left" : null,
          "right" : {
            "type" : "field",
            "value" : ["ndp", "$valid$"]
          }
        }
      }
    },
    {
      "name" : "cksum_2",
      "id" : 3,
      "source_info" : {
        "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/parser.p4",
        "line" : 280,
        "column" : 8,
        "source_fragment" : "update_checksum_with_payload( ..."
      },
      "target" : ["udp", "csum"],
      "type" : "generic",
      "calculation" : "calc_4",
      "verify" : false,
      "update" : true,
      "if_cond" : {
        "type" : "expression",
        "value" : {
          "op" : "d2b",
          "left" : null,
          "right" : {
            "type" : "field",
            "value" : ["udp", "$valid$"]
          }
        }
      }
    },
    {
      "name" : "cksum_3",
      "id" : 4,
      "source_info" : {
        "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/parser.p4",
        "line" : 295,
        "column" : 8,
        "source_fragment" : "update_checksum_with_payload( ..."
      },
      "target" : ["udp", "csum"],
      "type" : "generic",
      "calculation" : "calc_5",
      "verify" : false,
      "update" : true,
      "if_cond" : {
        "type" : "expression",
        "value" : {
          "op" : "and",
          "left" : {
            "type" : "expression",
            "value" : {
              "op" : "d2b",
              "left" : null,
              "right" : {
                "type" : "field",
                "value" : ["udp", "$valid$"]
              }
            }
          },
          "right" : {
            "type" : "expression",
            "value" : {
              "op" : "d2b",
              "left" : null,
              "right" : {
                "type" : "field",
                "value" : ["int_header", "$valid$"]
              }
            }
          }
        }
      }
    },
    {
      "name" : "cksum_4",
      "id" : 5,
      "source_info" : {
        "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/parser.p4",
        "line" : 321,
        "column" : 8,
        "source_fragment" : "update_checksum_with_payload( ..."
      },
      "target" : ["tcp", "csum"],
      "type" : "generic",
      "calculation" : "calc_6",
      "verify" : false,
      "update" : true,
      "if_cond" : {
        "type" : "expression",
        "value" : {
          "op" : "d2b",
          "left" : null,
          "right" : {
            "type" : "field",
            "value" : ["tcp", "$valid$"]
          }
        }
      }
    },
    {
      "name" : "cksum_5",
      "id" : 6,
      "source_info" : {
        "filename" : "/home/lchampagne/Documents/Test/int_v1.0/include/parser.p4",
        "line" : 340,
        "column" : 8,
        "source_fragment" : "update_checksum_with_payload( ..."
      },
      "target" : ["tcp", "csum"],
      "type" : "generic",
      "calculation" : "calc_7",
      "verify" : false,
      "update" : true,
      "if_cond" : {
        "type" : "expression",
        "value" : {
          "op" : "and",
          "left" : {
            "type" : "expression",
            "value" : {
              "op" : "d2b",
              "left" : null,
              "right" : {
                "type" : "field",
                "value" : ["tcp", "$valid$"]
              }
            }
          },
          "right" : {
            "type" : "expression",
            "value" : {
              "op" : "d2b",
              "left" : null,
              "right" : {
                "type" : "field",
                "value" : ["int_header", "$valid$"]
              }
            }
          }
        }
      }
    }
  ],
  "force_arith" : [],
  "extern_instances" : [],
  "field_aliases" : [
    [
      "queueing_metadata.enq_timestamp",
      ["standard_metadata", "enq_timestamp"]
    ],
    [
      "queueing_metadata.enq_qdepth",
      ["standard_metadata", "enq_qdepth"]
    ],
    [
      "queueing_metadata.deq_timedelta",
      ["standard_metadata", "deq_timedelta"]
    ],
    [
      "queueing_metadata.deq_qdepth",
      ["standard_metadata", "deq_qdepth"]
    ],
    [
      "intrinsic_metadata.ingress_global_timestamp",
      ["standard_metadata", "ingress_global_timestamp"]
    ],
    [
      "intrinsic_metadata.egress_global_timestamp",
      ["standard_metadata", "egress_global_timestamp"]
    ],
    [
      "intrinsic_metadata.mcast_grp",
      ["standard_metadata", "mcast_grp"]
    ],
    [
      "intrinsic_metadata.egress_rid",
      ["standard_metadata", "egress_rid"]
    ],
    [
      "intrinsic_metadata.priority",
      ["standard_metadata", "priority"]
    ]
  ],
  "program" : "/home/lchampagne/Documents/Test/int_v1.0/int.p4i",
  "__meta__" : {
    "version" : [2, 23],
    "compiler" : "https://github.com/p4lang/p4c"
  }
}